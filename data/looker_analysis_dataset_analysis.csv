primary_analysis_sql,structure_sql,validation_sql,business_rules_sql,response_id,dashboard_id
"SELECT
  clmn5_ AS financial_short_month,
  clmn15_ AS financial_quarter,
  clmn22_ AS revenue_type,
  clmn14_ AS financial_month,
  clmn7_ AS relative_fy_month_offset,
  SUM(clmn26_) AS current_fy_total_adjusted_revenue,
  SUM(clmn29_) AS current_fy_pmp_revenue,
  SUM(clmn30_) AS current_fy_tubi_revenue,
  SUM(clmn31_) AS current_fy_omp_revenue,
  SUM(clmn32_) AS current_fy_pg_revenue,
  SUM(clmn36_) AS current_fy_performance_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE')
GROUP BY
  clmn5_, clmn15_, clmn22_, clmn14_, clmn7_
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT t0.advertiser_group) AS unique_advertiser_groups,
  COUNT(DISTINCT t0.cost_model_type) AS unique_cost_model_types,
  MIN(t0.reporting_date) AS min_reporting_date,
  MAX(t0.reporting_date) AS max_reporting_date
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
  CASE WHEN MAX(t0.reporting_date) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
  CASE WHEN SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) > 0 THEN 'PASS' ELSE 'FAIL' END AS current_fy_revenue_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
  CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS revenue_type,
  CASE WHEN ((SAFE.LEFT(t0.advertiser_group, 4) = 'CTR_') AND (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PERFORMANCE')) THEN 'TO EXCL' ELSE 'INCLUDE' END AS exclusion_status,
  COUNT(*) AS record_count,
  SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
  revenue_type,
  exclusion_status
ORDER BY
  revenue_type, exclusion_status
LIMIT 10;",0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
"SELECT
  date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
  `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
  service.description AS service,
  SUM(cost) AS total_cost_aud
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20230131')
  AND service.description NOT IN ('Invoice')
GROUP BY 1, 2, 3
ORDER BY service_month DESC, total_cost_aud DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT project.name) AS unique_projects,
  COUNT(DISTINCT service.description) AS unique_services,
  COUNT(DISTINCT sku.description) AS unique_cost_components,
  MIN(usage_end_time) AS min_usage_end_time,
  MAX(usage_end_time) AS max_usage_end_time,
  MIN(_PARTITIONTIME) AS min_partition_date,
  MAX(_PARTITIONTIME) AS max_partition_date
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
LIMIT 1;","SELECT
  CASE WHEN SUM(cost) > 0 THEN 'PASS' ELSE 'FAIL' END AS cost_positive_check,
  CASE WHEN MAX(_PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20230131')
LIMIT 1;","SELECT
  CASE
    WHEN service.description = 'Invoice' THEN 'Invoice'
    ELSE 'Non-Invoice'
  END AS service_type,
  SUM(cost) AS total_cost_aud
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20230131')
GROUP BY 1
LIMIT 2;",1,fbf4d483-b17a-4040-b18c-091481d62200
"SELECT
  t0.fy_year AS fiscal_year,
  CASE
    WHEN (t0.masthead = 'TA') THEN 'The Australian'
    WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro'
    WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals'
    WHEN (t0.masthead = 'WT') THEN 'Other Publications'
    WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications'
    WHEN (t0.masthead IS NULL) THEN 'check'
    ELSE 'Exclude'
  END AS masthead_group,
  CASE
    WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions'
    ELSE 'Print Subscriptions'
  END AS subscription_type,
  COUNT(1) AS total_movements,
  SUM(t0.acquisition_count) AS total_acquisitions
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE
    WHEN (t0.masthead = 'TA') THEN 'The Australian'
    WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro'
    WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals'
    WHEN (t0.masthead = 'WT') THEN 'Other Publications'
    WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications'
    WHEN (t0.masthead IS NULL) THEN 'check'
    ELSE 'Exclude'
  END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
GROUP BY
  1, 2, 3
ORDER BY
  fiscal_year DESC, total_movements DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT t0.masthead) AS unique_mastheads,
  COUNT(DISTINCT t0.classification_level_1) AS unique_classification_level_1s,
  COUNT(DISTINCT t0.classification_level_2) AS unique_classification_level_2s,
  MIN(t0.fy_year) AS min_fiscal_year,
  MAX(t0.fy_year) AS max_fiscal_year,
  MIN(t0.fy_week_of_year) AS min_fiscal_week,
  MAX(t0.fy_week_of_year) AS max_fiscal_week
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
LIMIT 1;","SELECT
  CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS record_count_check,
  CASE WHEN MAX(t0.fy_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN (t0.masthead = 'TA') THEN 'The Australian'
    WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro'
    WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals'
    WHEN (t0.masthead = 'WT') THEN 'Other Publications'
    WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications'
    WHEN (t0.masthead IS NULL) THEN 'check'
    ELSE 'Exclude'
  END AS masthead_group,
  COUNT(1) AS count_of_records
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
GROUP BY
  masthead_group
ORDER BY
  count_of_records DESC
LIMIT 10;",2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
"SELECT
  t0.financial_year,
  t0.calendar_year,
  t0.revenue_type,
  t0.revenue_transaction_status,
  t0.unified_publication_name,
  SUM(t0.gross_revenue_amount) AS total_gross_revenue,
  SUM(t0.agency_commission_amount) AS total_agency_commission
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0
WHERE
  SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026'
  AND t0.revenue_transaction_status IN ('Billed', 'Booked')
  AND t0.source_system_code = 'ADPT'
  AND t0.revenue_type = 'Digital'
GROUP BY
  t0.financial_year,
  t0.calendar_year,
  t0.revenue_type,
  t0.revenue_transaction_status,
  t0.unified_publication_name
ORDER BY
  t0.financial_year DESC, total_gross_revenue DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(financial_year AS STRING)) AS unique_financial_years,
  COUNT(DISTINCT SAFE_CAST(calendar_year AS STRING)) AS unique_calendar_years,
  COUNT(DISTINCT booking_number) AS unique_booking_numbers,
  MIN(reporting_date) AS min_reporting_date,
  MAX(reporting_date) AS max_reporting_date,
  MIN(data_load_datetime) AS min_data_load_datetime,
  MAX(data_load_datetime) AS max_data_load_datetime
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS data_exists_check,
  CASE WHEN MAX(data_load_datetime) > DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
  CASE WHEN SUM(gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS positive_revenue_check
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
WHERE
  SAFE_CAST(financial_year AS STRING) = SAFE_CAST(EXTRACT(YEAR FROM CURRENT_DATE()) AS STRING)
  AND revenue_transaction_status IN ('Billed', 'Booked')
LIMIT 1;","SELECT
  revenue_transaction_status,
  revenue_type,
  record_type_code,
  COUNT(*) AS record_count,
  SUM(gross_revenue_amount) AS total_gross_revenue
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
WHERE
  SAFE_CAST(financial_year AS STRING) BETWEEN '2023' AND '2026'
  AND source_system_code = 'ADPT'
GROUP BY
  revenue_transaction_status,
  revenue_type,
  record_type_code
ORDER BY
  record_count DESC
LIMIT 10;",3,38809f41-7138-4b94-94d1-ae919b2d9517
"SELECT
  SAFE_CAST(t0.fy_year AS INT64) AS fiscal_year,
  SAFE_CAST(t0.fy_month_of_year AS INT64) AS fiscal_month,
  SAFE_CAST(t0.fy_week_of_year AS INT64) AS fiscal_week,
  CASE
    WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition'
    WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition'
    ELSE 'Digital Recognition'
  END AS recognition_type,
  CASE
    WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian'
    WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros'
    WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals'
    WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others'
    WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications'
    ELSE 'Discontinued'
  END AS masthead_group,
  SUM(t0.ClosingBase) AS total_closing_base,
  SUM(t0.OpeningBase) AS total_opening_base,
  SUM(t0.EarnedAmount) AS total_earned_amount,
  SUM(t0.NFEarnedAmount) AS total_nf_earned_amount
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
GROUP BY 1, 2, 3, 4, 5
ORDER BY fiscal_year DESC, fiscal_week DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.gl_publication_code AS STRING)) AS unique_publication_codes,
  COUNT(DISTINCT SAFE_CAST(t0.masthead_code AS STRING)) AS unique_masthead_codes,
  MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
  MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
  MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
  MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year,
  MIN(SAFE_CAST(t0.fy_month_of_year AS INT64)) AS min_fy_month_of_year,
  MAX(SAFE_CAST(t0.fy_month_of_year AS INT64)) AS max_fy_month_of_year
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.ClosingBase) > 0 THEN 'PASS' ELSE 'FAIL' END AS closing_base_positive_check,
  CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE()) THEN 'PASS' ELSE 'FAIL' END AS recent_year_check,
  CASE WHEN COUNT(*) > 1000 THEN 'PASS' ELSE 'FAIL' END AS sufficient_data_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition'
    WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition'
    ELSE 'Digital Recognition'
  END AS recognition_type,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
GROUP BY 1
LIMIT 5;",4,37641205-ec3e-4184-a5dd-f5ca79248335
"SELECT
  t0.Category,
  t0.Fiscal_Year,
  t0.Source,
  SUM(t0.Product_Revenue) AS total_product_revenue,
  SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2') THEN t0.Expense ELSE 0 END) AS total_filtered_expense,
  MAX(CASE WHEN t0.Category = 'CONSUMER' AND t0.Source = 'Actuals' THEN t0.Running_Expense_CONSUMER_1_Actuals
           WHEN t0.Category = 'ADVERTISING' AND t0.Source = 'Actuals' THEN t0.Running_Expense_ADVERTISING_1_Actuals
           WHEN t0.Category = 'CONSUMER' AND t0.Source = 'Budget' THEN t0.Running_Expense_CONSUMER_1_Budget
           WHEN t0.Category = 'ADVERTISING' AND t0.Source = 'Budget' THEN t0.Running_Expense_ADVERTISING_1_Budget
           ELSE 0 END) AS running_expense_level_1_combined
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
GROUP BY 1, 2, 3
ORDER BY t0.Fiscal_Year DESC, t0.Category ASC, t0.Source ASC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT t0.Category) AS unique_categories,
  COUNT(DISTINCT t0.Fiscal_Year) AS unique_fiscal_years,
  COUNT(DISTINCT t0.Source) AS unique_sources,
  COUNT(DISTINCT t0.Margin_Level) AS unique_margin_levels,
  MIN(SAFE_CAST(t0.Fiscal_Year AS INT64)) AS min_fiscal_year,
  MAX(SAFE_CAST(t0.Fiscal_Year AS INT64)) AS max_fiscal_year
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN SUM(CASE WHEN t0.Fiscal_Year = 2025 AND t0.Source = 'Actuals' THEN t0.Product_Revenue ELSE 0 END) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS product_revenue_2025_actuals_check,
  CASE
    WHEN COUNTIF(t0.Fiscal_Year = 2025) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS fiscal_year_2025_exists_check
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
LIMIT 1;","SELECT
  t0.Category,
  SAFE_CAST(t0.Margin_Level AS STRING) AS Margin_Level,
  t0.Source,
  COUNT(1) AS record_count
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3
LIMIT 12;",5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
"SELECT
    t0.financial_year,
    t0.unified_publication_name,
    t0.fin_adtype_name,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.revenue_type = 'DIGITAL'
    AND t0.financial_year IN ('2024', '2025')
    AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-')
    AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')
GROUP BY
    t0.financial_year,
    t0.unified_publication_name,
    t0.fin_adtype_name
ORDER BY
    t0.financial_year DESC, total_gross_revenue DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.booking_number) AS unique_booking_numbers,
    COUNT(DISTINCT t0.unified_publication_name) AS unique_publications,
    COUNT(DISTINCT t0.financial_year) AS unique_financial_years,
    MIN(t0.data_load_datetime) AS min_data_load_datetime,
    MAX(t0.data_load_datetime) AS max_data_load_datetime
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(t0.gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_positive_check,
    CASE WHEN MAX(t0.data_load_datetime) >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.revenue_type = 'DIGITAL'
    AND t0.financial_year IN ('2024', '2025')
LIMIT 1;","SELECT
    'Excluded Unified Publication Names' AS rule_type,
    COUNT(DISTINCT t0.unified_publication_name) AS distinct_count,
    ARRAY_AGG(DISTINCT t0.unified_publication_name IGNORE NULLS ORDER BY t0.unified_publication_name LIMIT 5) AS sample_values
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.unified_publication_name IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')
UNION ALL
SELECT
    'Excluded Financial Ad Type Names' AS rule_type,
    COUNT(DISTINCT t0.fin_adtype_name) AS distinct_count,
    ARRAY_AGG(DISTINCT t0.fin_adtype_name IGNORE NULLS ORDER BY t0.fin_adtype_name LIMIT 5) AS sample_values
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.fin_adtype_name IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-')
LIMIT 12;",6,4114bd43-f752-4628-9b6c-1941b3c0d962
"SELECT
  ci.fiscal_week_id,
  ci.day_of_week,
  CASE
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('500', '560')) THEN 'ADV'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '100') THEN 'AUS'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('400', '402')) THEN 'CM'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9504') THEN 'Delicious'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9505') THEN 'Delicious Specials'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('110', '116')) THEN 'DT'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '350') THEN 'GAD'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '670') THEN 'GCB'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '180') THEN 'Group Shared Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '156') THEN 'Hobart Print Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('301', '303')) THEN 'HS'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5003') THEN 'MDM'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('850', '852')) THEN 'MERCURY'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('961', '963')) THEN 'NTN'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '158') THEN 'Perth Print Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = 'Post Courier') THEN 'Post Courier'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5024') THEN 'SC'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('9514', '9515')) THEN 'Taste'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5053') THEN 'TCHRN'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '450') THEN 'TCP'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '475') THEN 'TVB'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9560') THEN 'Vogue'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9556') THEN 'Vogue Living'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '305') THEN 'WT'
    ELSE 'Other'
  END AS publication_name,
  SUM(SAFE_CAST(CASE WHEN ci.charge_type = 'DRAW' THEN ci.route_volume ELSE 0 END AS BIGNUMERIC)) AS total_draw_volume,
  SUM(SAFE_CAST(ci.charge_amount AS BIGNUMERIC)) AS total_charge_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
  LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal
    ON ci.charge_date = cal.calendar_date
WHERE
  LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')
GROUP BY
  1, 2, 3
ORDER BY
  ci.fiscal_week_id DESC, ci.day_of_week
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(ci.fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT ci.charge_type) AS unique_charge_types,
  MIN(ci.charge_date) AS min_charge_date,
  MAX(ci.charge_date) AS max_charge_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
WHERE
  LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')
LIMIT 1;","SELECT
  CASE WHEN SUM(SAFE_CAST(ci.charge_amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS charge_amount_positive_check,
  CASE WHEN MAX(ci.charge_date) IS NOT NULL AND SAFE_CAST(LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) AS INT64) = 2025 THEN 'PASS' ELSE 'FAIL' END AS data_year_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
WHERE
  LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')
LIMIT 1;","SELECT
  CASE
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('500', '560')) THEN 'ADV'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '100') THEN 'AUS'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('400', '402')) THEN 'CM'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9504') THEN 'Delicious'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9505') THEN 'Delicious Specials'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('110', '116')) THEN 'DT'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '350') THEN 'GAD'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '670') THEN 'GCB'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '180') THEN 'Group Shared Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '156') THEN 'Hobart Print Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('301', '303')) THEN 'HS'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5003') THEN 'MDM'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('850', '852')) THEN 'MERCURY'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('961', '963')) THEN 'NTN'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '158') THEN 'Perth Print Services'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = 'Post Courier') THEN 'Post Courier'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5024') THEN 'SC'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('9514', '9515')) THEN 'Taste'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5053') THEN 'TCHRN'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '450') THEN 'TCP'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '475') THEN 'TVB'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9560') THEN 'Vogue'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9556') THEN 'Vogue Living'
    WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '305') THEN 'WT'
    ELSE 'Other'
  END AS publication_name,
  COUNT(1) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
WHERE
  LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')
GROUP BY
  1
ORDER BY
  record_count DESC
LIMIT 5;",7,c441950c-1e3f-432c-9838-847d1d315b9e
"SELECT
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead,
  SUM(SAFE_CAST(t0.Total_Weekly_Sales AS BIGNUMERIC)) AS Total_Weekly_Sales_Sum,
  SUM(SAFE_CAST(t0.Total_Revenue AS BIGNUMERIC)) AS Total_Revenue_Sum,
  SUM(SAFE_CAST(t0.Net_Cancels AS BIGNUMERIC)) AS Net_Cancels_Sum,
  SUM(SAFE_CAST(t0.Gross_Adds AS BIGNUMERIC)) AS Gross_Adds_Sum
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
GROUP BY
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead
ORDER BY
  t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fy_year AS STRING) || '-' || SAFE_CAST(fy_week_of_year AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT masthead) AS unique_mastheads,
  MIN(SAFE_CAST(fy_year AS STRING) || '-' || SAFE_CAST(fy_week_of_year AS STRING)) AS min_fiscal_week,
  MAX(SAFE_CAST(fy_year AS STRING) || '-' || SAFE_CAST(fy_week_of_year AS STRING)) AS max_fiscal_week
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`
LIMIT 1;","SELECT
  CASE
    WHEN MAX(t0.fy_year) = EXTRACT(YEAR FROM CURRENT_DATE()) AND MAX(t0.fy_week_of_year) >= EXTRACT(WEEK FROM CURRENT_DATE()) - 2 THEN 'PASS: Data is recent (within 2 weeks)'
    WHEN MAX(t0.fy_year) = EXTRACT(YEAR FROM CURRENT_DATE()) - 1 AND MAX(t0.fy_week_of_year) >= EXTRACT(WEEK FROM CURRENT_DATE()) - 2 THEN 'PASS: Data is recent (within 2 weeks, prev year)'
    ELSE 'FAIL: Data is not recent'
  END AS data_freshness_check,
  CASE
    WHEN SUM(SAFE_CAST(t0.Total_Weekly_Sales AS BIGNUMERIC)) > 0 THEN 'PASS: Total Weekly Sales > 0'
    ELSE 'FAIL: Total Weekly Sales <= 0'
  END AS key_metric_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  t0.fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`)
  AND t0.fy_week_of_year = (SELECT MAX(fy_week_of_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` WHERE fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`))
LIMIT 1;","SELECT
  CASE
    WHEN masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'States and Community'
    WHEN masthead = 'TA' THEN 'The Australian and Prestige'
    ELSE 'Other'
  END AS masthead_group,
  COUNT(DISTINCT masthead) AS unique_mastheads_in_group,
  COUNT(*) AS total_records_in_group
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`
GROUP BY
  masthead_group
ORDER BY
  masthead_group
LIMIT 10;",8,28082293-c836-46f0-83f8-b5ce909cd051
"SELECT
  SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) AS month,
  metadata.projectId,
  CASE
    WHEN metadata.projectId LIKE ""%dev%"" OR metadata.projectId LIKE ""%nprod%"" OR metadata.projectId LIKE ""%poc%"" THEN ""NonProduction""
    ELSE ""Production""
  END AS environment,
  metadata.bu,
  metadata.department,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)
  AND bill.project.id IN (
    'nca-datapl-dev-genai', 'nca-datapl-dev-finaipoc', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai',
    'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nca-datapl-prod-conintai', 'nca-cts-prod-tddxai',
    'nca-datapl-nonprod-tasteaiconc', 'nca-datapl-prod-tasteaiconc', 'ncau-data-nprod-aitrain',
    'nca-cts-nonprod-tddxai', 'ncau-data-nprod-taiste', 'nca-datapl-dev-contentsearch',
    'nau-data-nprod-dataservices', 'ncau-data-prod-contentlake'
  )
GROUP BY 1, 2, 3, 4, 5
ORDER BY 1 DESC, 2 ASC
LIMIT 10;","SELECT
  (SELECT COUNT(*) FROM `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`) AS total_billing_records,
  (SELECT COUNT(DISTINCT project.id) FROM `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`) AS unique_billing_projects,
  (SELECT COUNT(DISTINCT projectId) FROM `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata`) AS unique_metadata_projects,
  SAFE_CAST(MIN(_PARTITIONTIME) AS DATE) AS min_partition_date,
  SAFE_CAST(MAX(_PARTITIONTIME) AS DATE) AS max_partition_date
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
LIMIT 1;","SELECT
  CASE WHEN SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) > 0 THEN 'PASS' ELSE 'FAIL' END AS cost_positive_check,
  CASE WHEN MAX(bill._PARTITIONTIME) >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)
LIMIT 1;","SELECT
  CASE
    WHEN metadata.projectId LIKE ""%dev%"" OR metadata.projectId LIKE ""%nprod%"" OR metadata.projectId LIKE ""%poc%"" THEN ""NonProduction""
    ELSE ""Production""
  END AS environment,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
GROUP BY 1
LIMIT 10;",9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
"WITH
  OSandFACT AS (
    SELECT
      os.source_system_name,
      os.Actual_Amount,
      calendar.fy_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
        WHERE
          1 = 1
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  fy_year,
  source_system_name,
  SUM(Actual_Amount) AS total_actual_amount,
  COUNT(1) AS record_count
FROM
  OSandFACT
GROUP BY
  fy_year,
  source_system_name
ORDER BY
  fy_year DESC, total_actual_amount DESC
LIMIT 10","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t1.source_system_name AS STRING)) AS unique_source_systems,
  COUNT(DISTINCT SAFE_CAST(t1.fiscal_week_id AS INT64)) AS unique_fiscal_weeks,
  COUNT(DISTINCT SAFE_CAST(t1.gl_publication_code AS STRING)) AS unique_publications,
  MIN(SAFE_CAST(t2.fy_first_day_of_week AS DATE)) AS min_date,
  MAX(SAFE_CAST(t2.fy_last_day_of_week AS DATE)) AS max_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t1
LEFT JOIN
  (SELECT DISTINCT CAST(fy_year_week_number AS INT64) AS fy_year_week_number, CAST(fy_first_day_of_week AS DATE) AS fy_first_day_of_week, CAST(fy_last_day_of_week AS DATE) AS fy_last_day_of_week FROM `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar`) AS t2
  ON SAFE_CAST(t1.fiscal_week_id AS INT64) = SAFE_CAST(t2.fy_year_week_number AS INT64)
LIMIT 1","WITH
  OSandFACT AS (
    SELECT
      os.Actual_Amount,
      calendar.fy_last_day_of_week
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
        WHERE
          1 = 1
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
  )
SELECT
  CASE WHEN SUM(SAFE_CAST(Actual_Amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_check,
  CASE WHEN MAX(SAFE_CAST(fy_last_day_of_week AS DATE)) >= DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  OSandFACT
LIMIT 1","SELECT
  CASE
    WHEN SAFE_CAST(c.fy_last_day_of_week AS DATE) = SAFE_CAST(c.fy_last_day_of_month AS DATE) THEN 'Y'
    ELSE 'N'
  END AS month_end_flag,
  COUNT(1) AS flag_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
GROUP BY
  month_end_flag
LIMIT 12",10,d7412673-0af1-4efe-8374-ca475b001fb6
"SELECT
    t0.movement_date,
    t0.advertiser_parent,
    t0.revenue_type,
    CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND'
         WHEN (SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO' OR (t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER' AND t0.revenue_sub_type = 'DIGITAL')) THEN 'PROGRAMMATIC'
         WHEN t0.revenue_sub_type = 'DIGITAL' THEN 'ADPT DIGITAL'
         WHEN SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY' THEN 'SUNDRY'
         ELSE t0.revenue_sub_type
    END AS revenue_category_complex,
    SUM(t0.GROSS_AMOUNT_DIFF) AS total_gross_amount_diff,
    SUM(CASE WHEN t0.revenue_type = 'DIGITAL' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS digital_gross_amount_diff,
    SUM(CASE WHEN t0.revenue_type = 'PRINT' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS print_gross_amount_diff
FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
WHERE t0.movement_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
GROUP BY t0.movement_date, t0.advertiser_parent, t0.revenue_type, revenue_category_complex
ORDER BY t0.movement_date DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT t0.booking_line_id) AS unique_booking_lines,
    COUNT(DISTINCT t0.advertiser_parent) AS unique_advertiser_parents,
    MIN(t0.movement_date) AS min_movement_date,
    MAX(t0.movement_date) AS max_movement_date
FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(t0.GROSS_AMOUNT_DIFF) > 0 THEN 'PASS' ELSE 'FAIL' END AS total_revenue_check,
    CASE WHEN MAX(t0.movement_date) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
WHERE t0.movement_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)
LIMIT 1;","SELECT
    CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND'
         WHEN (SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO' OR (t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER' AND t0.revenue_sub_type = 'DIGITAL')) THEN 'PROGRAMMATIC'
         WHEN t0.revenue_sub_type = 'DIGITAL' THEN 'ADPT DIGITAL'
         WHEN SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY' THEN 'SUNDRY'
         ELSE t0.revenue_sub_type
    END AS revenue_category_complex,
    COUNT(1) AS record_count
FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
GROUP BY revenue_category_complex
ORDER BY record_count DESC
LIMIT 10;",11,a1b901e6-c4fb-44bc-955a-3a7070c15829
"SELECT
    SAFE_CAST(t0.financial_year AS STRING) AS financial_year,
    t0.revenue_group_subtype AS revenue_group_subtype,
    t0.unified_publication_name AS unified_publication_name,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue_amount
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
WHERE
    SAFE_CAST(t0.financial_year AS STRING) IN ('2024', '2023')
    AND t0.revenue_group_subtype IN ('DIGITAL', 'PRINT', 'PROGRAMMATIC EXCHANGE', 'PROGRAMMATIC SOURCE')
GROUP BY
    1, 2, 3
ORDER BY
    financial_year DESC, total_gross_revenue_amount DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT t0.unified_publication_name) AS unique_publications,
    COUNT(DISTINCT t0.revenue_group_subtype) AS unique_revenue_subtypes,
    COUNT(DISTINCT SAFE_CAST(t0.financial_year AS STRING)) AS unique_financial_years,
    MIN(SAFE_CAST(t0.financial_year AS STRING) || LPAD(SAFE_CAST(t0.fiscal_month_number AS STRING), 2, '0')) AS min_year_month,
    MAX(SAFE_CAST(t0.financial_year AS STRING) || LPAD(SAFE_CAST(t0.fiscal_month_number AS STRING), 2, '0')) AS max_year_month
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(CASE WHEN SAFE_CAST(t0.financial_year AS STRING) = FORMAT_DATE('%Y', CURRENT_DATE()) THEN t0.gross_revenue_amount ELSE 0 END) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS current_year_revenue_check,
    CASE
        WHEN MAX(SAFE_CAST(t0.financial_year AS STRING)) >= FORMAT_DATE('%Y', DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR)) THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    (CASE
        WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'DIGITAL' THEN 'DIGITAL (excl.XTEND)'
        WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'PRINT' THEN 'PRINT'
        WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'XTEND' THEN 'XTEND ONLY'
        ELSE 'OTHER/NULL'
    END) AS derived_revenue_type_grouping,
    COUNT(1) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    1
ORDER BY
    record_count DESC
LIMIT 10;",12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
"SELECT
    t0.financial_quarter,
    t0.financial_short_month,
    t0.publishing_division_group,
    CASE
        WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home'
        WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul'
        WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape'
        WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate'
        WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge'
        WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine'
        ELSE 'Others'
    END AS derived_publication_group,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    1, 2, 3, 4
ORDER BY
    t0.financial_quarter DESC, t0.financial_short_month DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    MIN(t0.dw_asl_load_timestamp) AS min_load_timestamp,
    MAX(t0.dw_asl_load_timestamp) AS max_load_timestamp,
    COUNT(DISTINCT SAFE_CAST(t0.unified_publication_name AS STRING)) AS unique_publications,
    COUNT(DISTINCT SAFE_CAST(t0.publishing_division_group AS STRING)) AS unique_division_groups
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN MAX(t0.dw_asl_load_timestamp) IS NOT NULL AND MAX(t0.dw_asl_load_timestamp) >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY) THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check,
    CASE
        WHEN COUNT(*) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS record_count_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home'
        WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul'
        WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape'
        WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate'
        WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge'
        WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine'
        ELSE 'Others'
    END AS derived_publication_group,
    COUNT(*) AS group_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    1
ORDER BY
    group_count DESC
LIMIT 10;",14,dd0544cd-634f-43bd-a385-158c78dace66
"SELECT Masthead_name, Year, SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) AS total_sales_volume FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` GROUP BY Masthead_name, Year ORDER BY Masthead_name, Year DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT Masthead_name) AS unique_mastheads, COUNT(DISTINCT Sales_channel_level_4) AS unique_sales_channels_4, MIN(SAFE_CAST(Year AS INT64)) AS min_year, MAX(SAFE_CAST(Year AS INT64)) AS max_year FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` LIMIT 1;","SELECT CASE WHEN SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS sales_volume_positive_check, CASE WHEN MAX(SAFE_CAST(Year AS INT64)) >= 2023 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` LIMIT 1;","SELECT Masthead_name, SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) AS total_sales_volume FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` GROUP BY Masthead_name ORDER BY total_sales_volume DESC LIMIT 5;",15,b3eace25-3ec3-427a-839f-0639faf377ea
"SELECT
  SAFE_CAST(t0.fiscal_week_id AS STRING) AS fiscal_week,
  t0.category_name,
  t0.gl_publication_code,
  SUM(t0.add_volume) AS total_add_volume,
  SUM(t0.earned_amount) AS total_earned_amount,
  SUM(t0.closing_base) AS total_closing_base
FROM
  `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0
GROUP BY
  1, 2, 3
ORDER BY
  fiscal_week DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT t0.category_name) AS unique_categories,
  MIN(SAFE_CAST(t0.fiscal_week_id AS STRING)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(t0.fiscal_week_id AS STRING)) AS max_fiscal_week_id
FROM
  `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN COUNTIF(t0.add_volume > 0) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS add_volume_positive_check,
  CASE
    WHEN MAX(SAFE_CAST(t0.fiscal_week_id AS STRING)) >= FORMAT_DATE('%Y%W', CURRENT_DATE() - INTERVAL 2 WEEK) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0
LIMIT 1;","SELECT
  t0.business_unit_status,
  COUNT(*) AS status_count
FROM
  `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0
GROUP BY
  t0.business_unit_status
ORDER BY
  status_count DESC
LIMIT 5;",16,23c8b213-a9f0-4158-b8fa-bff14425abb5
"SELECT
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead,
  SUM(t0.Total_Revenue) AS total_revenue,
  SUM(t0.Total_Weekly_Sales) AS total_weekly_sales,
  SUM(t0.Total_Closing_Base) AS total_closing_base
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
GROUP BY
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead
ORDER BY
  t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_rows,
  COUNT(DISTINCT SAFE_CAST(t0.masthead AS STRING)) AS unique_mastheads,
  COUNT(DISTINCT SAFE_CAST(t0.fy_year AS INT64)) AS unique_fy_years,
  COUNT(DISTINCT SAFE_CAST(t0.fy_week_of_year AS INT64)) AS unique_fy_weeks,
  MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
  MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
  MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
  MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.Total_Revenue) > 0 THEN 'PASS' ELSE 'FAIL' END AS total_revenue_check,
  CASE WHEN MAX(t0.fy_year) >= 2025 THEN 'PASS' ELSE 'FAIL' END AS latest_fy_year_check
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'TA' THEN 'The Australian'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'DT' THEN 'Daily Telegraph'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'HS' THEN 'Herald Sun'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'WT' THEN 'Weekly Times'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'GA' THEN 'Geelong Advertiser'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'CM' THEN 'Courier Mail'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'CP' THEN 'Cairns Post'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'TB' THEN 'Townsville Bulletin'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'TC' THEN 'Toowoomba Chronicles'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'GC' THEN 'Gold Coast'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'TM' THEN 'The Mercury'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'NT' THEN 'NT News'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'AA' THEN 'The Advertiser'
    ELSE 'Other'
  END AS masthead_name,
  CASE
    WHEN SAFE_CAST(t0.masthead AS STRING) IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'States and Community'
    WHEN SAFE_CAST(t0.masthead AS STRING) = 'TA' THEN 'The Australian and Prestige'
    ELSE 'Other Group'
  END AS masthead_group,
  CASE
    WHEN SAFE_CAST(t0.masthead AS STRING) IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro'
    WHEN SAFE_CAST(t0.masthead AS STRING) IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'Regional'
    ELSE 'Other Region'
  END AS masthead_region,
  COUNT(1) AS record_count
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
GROUP BY 1, 2, 3
LIMIT 5;",17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
"SELECT
    t0.financial_year,
    t0.product_group,
    t0.publishing_division_parent,
    SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS current_year_gross_revenue,
    SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) AS last_year_gross_revenue,
    SUM(t0.pub_lgb) AS total_pub_lgb
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    t0.financial_year,
    t0.product_group,
    t0.publishing_division_parent
ORDER BY
    t0.financial_year DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT t0.product_group) AS unique_product_groups,
    COUNT(DISTINCT t0.publishing_division_parent) AS unique_publishing_divisions,
    COUNT(DISTINCT t0.unified_publication_name) AS unique_publications,
    MIN(t0.financial_year) AS min_financial_year,
    MAX(t0.financial_year) AS max_financial_year,
    MIN(t0.financial_quarter) AS min_financial_quarter,
    MAX(t0.financial_quarter) AS max_financial_quarter
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(t0.gross_revenue_amount) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS gross_revenue_check,
    CASE
        WHEN MAX(t0.financial_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    SAFE_CAST(t0.relative_fy_year_offset AS STRING) AS relative_year_offset,
    COUNT(1) AS record_count,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    relative_year_offset
ORDER BY
    relative_year_offset
LIMIT 5;",18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
"SELECT
    t0.CG_EMPLOYEE_FULL_NAME,
    t0.CG_EMPLOYEE_SALES_REGION,
    t0.revenue_type,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue,
    SUM(CASE WHEN t0.revenue_type = 'Digital' THEN t0.gross_revenue_amount ELSE 0 END) AS digital_revenue,
    SUM(CASE WHEN t0.revenue_type = 'Print' THEN t0.gross_revenue_amount ELSE 0 END) AS print_revenue
FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
GROUP BY
    t0.CG_EMPLOYEE_FULL_NAME,
    t0.CG_EMPLOYEE_SALES_REGION,
    t0.revenue_type
ORDER BY
    total_gross_revenue DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.CG_EMPLOYEE_FULL_NAME) AS unique_employees,
    COUNT(DISTINCT t0.advertiser_group) AS unique_advertiser_groups,
    MIN(SAFE_CAST(t0.booking_line_created_date_not_null AS DATE)) AS min_booking_date,
    MAX(SAFE_CAST(t0.booking_line_created_date_not_null AS DATE)) AS max_booking_date,
    MIN(SAFE_CAST(t0.reporting_date AS DATE)) AS min_reporting_date,
    MAX(SAFE_CAST(t0.reporting_date AS DATE)) AS max_reporting_date
FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(t0.gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS gross_revenue_check,
    CASE WHEN MAX(SAFE_CAST(t0.booking_line_created_date_not_null AS DATE)) >= CURRENT_DATE() - INTERVAL 7 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN (t0.progo_flag = 'Y') THEN
            CASE
                WHEN (t0.booking_line_created_date_not_null >= t0.PROGO_INITIAL_START AND t0.booking_line_created_date_not_null <= t0.PROGO_INITIAL_END) THEN 'INITIAL'
                WHEN (t0.booking_line_created_date_not_null > t0.PROGO_INITIAL_END AND t0.booking_line_created_date_not_null <= DATETIME_ADD(SAFE_CAST(t0.PROGO_INITIAL_START AS DATETIME), INTERVAL 365 DAY)) THEN 'FOLLOWING'
                ELSE 'NOT ELIGIBLE'
            END
        WHEN (t0.CG_EXCEPTION_FLAG = 'Y' AND t0.booking_type IS NOT NULL) THEN UPPER(SAFE_CAST(t0.booking_type AS STRING))
        WHEN (t0.CG_Retention_Type_SQL = 'Existing Customer') THEN 'ONE-OFF'
        WHEN ((t0.CG_EMPLOYEE_SALES_REGION = 'Client Growth') AND (t0.booking_line_created_date_not_null >= t0.initial_booking_date) AND (SAFE_CAST(t0.booking_line_created_date_not_null AS DATETIME) <= DATETIME_ADD(SAFE_CAST(t0.initial_booking_date AS DATETIME), INTERVAL 27 DAY)) AND (t0.reporting_date_greater_than_initbooking = 'Y') AND (t0.reporting_date_less_than_initbookingplus365 = 'Y')) THEN 'INITIAL'
        WHEN ((t0.CG_EMPLOYEE_SALES_REGION != 'Client Growth') AND (t0.booking_line_created_date_not_null >= t0.initial_booking_date) AND (SAFE_CAST(t0.booking_line_created_date_not_null AS DATETIME) <= DATETIME_ADD(SAFE_CAST(t0.initial_booking_date AS DATETIME), INTERVAL 27 DAY)) AND (t0.reporting_date_greater_than_initbooking = 'Y') AND (t0.reporting_date_less_than_initbookingplus365 = 'Y')) THEN 'FOLLOWING'
        WHEN ((SAFE_CAST(t0.booking_line_created_date_not_null AS DATETIME) > DATETIME_ADD(SAFE_CAST(t0.initial_booking_date AS DATETIME), INTERVAL 27 DAY)) AND (t0.reporting_date_greater_than_initbooking = 'Y') AND (t0.reporting_date_less_than_initbookingplus365 = 'Y')) THEN 'FOLLOWING'
        ELSE 'NOT ELIGIBLE'
    END AS client_growth_status,
    COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
GROUP BY
    client_growth_status
ORDER BY
    record_count DESC
LIMIT 5;",19,507bd07a-24bc-4402-ba8b-fcfbfac83996
"SELECT
  SAFE_CAST(t0.financial_year AS STRING) AS financial_year,
  t0.financial_short_month AS financial_short_month,
  t0.revenue_group_subtype AS revenue_group_subtype,
  t0.revenue_type AS revenue_type,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0
GROUP BY
  1, 2, 3, 4
ORDER BY
  financial_year DESC, financial_short_month DESC
LIMIT 12;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.financial_year AS STRING)) AS unique_financial_years,
  COUNT(DISTINCT t0.revenue_group_subtype) AS unique_revenue_subtypes,
  COUNT(DISTINCT t0.revenue_type) AS unique_revenue_types,
  MIN(t0.dw_asl_load_timestamp) AS min_load_timestamp,
  MAX(t0.dw_asl_load_timestamp) AS max_load_timestamp
FROM
  `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS data_exists_check,
  CASE WHEN MAX(t0.dw_asl_load_timestamp) >= CURRENT_TIMESTAMP() - INTERVAL 7 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0
LIMIT 1;","SELECT
  t0.financial_short_month AS financial_short_month,
  SAFE_CAST(
    CASE
      WHEN (t0.financial_short_month = 'Jul') THEN 1
      WHEN (t0.financial_short_month = 'Aug') THEN 2
      WHEN (t0.financial_short_month = 'Sep') THEN 3
      WHEN (t0.financial_short_month = 'Oct') THEN 4
      WHEN (t0.financial_short_month = 'Nov') THEN 5
      WHEN (t0.financial_short_month = 'Dec') THEN 6
      WHEN (t0.financial_short_month = 'Jan') THEN 7
      WHEN (t0.financial_short_month = 'Feb') THEN 8
      WHEN (t0.financial_short_month = 'Mar') THEN 9
      WHEN (t0.financial_short_month = 'Apr') THEN 10
      WHEN (t0.financial_short_month = 'May') THEN 11
      WHEN (t0.financial_short_month = 'Jun') THEN 12
      ELSE NULL
    END AS INT64
  ) AS month_numeric_mapping,
  COUNT(*) AS count_of_records
FROM
  `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0
GROUP BY
  1, 2
ORDER BY
  month_numeric_mapping ASC
LIMIT 12;",20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
"WITH
  table_list AS (
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
  ),
  table_update_list AS (
    SELECT
      meta.dataset_id,
      meta.table_id,
      datetime(timestamp_millis(meta.last_modified_time), ""Australia/Sydney"") AS last_update_time,
      meta.row_count,
      meta.size_bytes / power(2, 30) AS size_gb,
      table_list.update_frequency
    FROM
      `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
      JOIN
      table_list
      ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
  ),
  load_stats AS (
    SELECT
      * EXCEPT (last_update_time),
      CAST(FORMAT_DATETIME('%F %X', last_update_time) AS STRING) AS last_update_time,
      `current_datetime`(""Australia/Sydney"") AS time_now,
      datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
      `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
    FROM
      table_update_list
  ),
  alert_sts AS (
    SELECT
      *,
      CASE
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
        WHEN row_count = 0 THEN -3
        ELSE 0
      END AS alert_status
    FROM
      load_stats
  )
SELECT
  CASE
    WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
    ELSE alert_status
  END AS alert_status_final,
  COUNT(table_id) AS table_count,
  ARRAY_AGG(table_id ORDER BY table_id LIMIT 5) AS sample_tables
FROM
  alert_sts
GROUP BY 1
ORDER BY 1
LIMIT 12;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(vendor_name AS STRING)) AS unique_vendors,
  COUNT(DISTINCT SAFE_CAST(draw_date AS DATE)) AS unique_draw_dates,
  MIN(SAFE_CAST(draw_date AS DATE)) AS min_draw_date,
  MAX(SAFE_CAST(draw_date AS DATE)) AS max_draw_date
FROM
  `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
WHERE
  SAFE_CAST(dw_tgt_partition_date AS DATE) >= CURRENT_DATE('Australia/Sydney') - 1
LIMIT 1;","WITH
  finance_health AS (
    WITH
      table_list AS (
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
        SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
        SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
      ),
      table_update_list AS (
        SELECT
          meta.dataset_id,
          meta.table_id,
          datetime(timestamp_millis(meta.last_modified_time), ""Australia/Sydney"") AS last_update_time,
          meta.row_count,
          table_list.update_frequency
        FROM
          `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
          JOIN
          table_list
          ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
      ),
      load_stats AS (
        SELECT
          *,
          `current_datetime`(""Australia/Sydney"") AS time_now,
          datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago
        FROM
          table_update_list
      ),
      alert_sts AS (
        SELECT
          *,
          CASE
            WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
            WHEN row_count = 0 THEN -3
            ELSE 0
          END AS alert_status
        FROM
          load_stats
      )
    SELECT
      COUNT(CASE WHEN (CASE WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1 ELSE alert_status END) IN (-2, -3) THEN table_id ELSE NULL END) AS tables_in_bad_status,
      COUNT(table_id) AS total_monitored_tables
    FROM
      alert_sts
  ),
  circulation_data AS (
    SELECT
      SUM(SAFE_CAST(data_total AS INT64)) AS total_records_last_day
    FROM (
      SELECT DISTINCT
        Count(*) AS data_total
      FROM
        `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
      WHERE
        SAFE_CAST(dw_tgt_partition_date AS DATE) = CURRENT_DATE('Australia/Sydney') - 1
        AND SAFE_CAST(draw_date AS DATE) = CURRENT_DATE('Australia/Sydney') - 1
    )
  )
SELECT
  CASE
    WHEN (SELECT tables_in_bad_status FROM finance_health) = 0 AND (SELECT total_monitored_tables FROM finance_health) > 0 THEN 'PASS: Finance Health OK'
    ELSE 'FAIL: Finance Health Issues'
  END AS finance_health_status,
  CASE
    WHEN (SELECT total_records_last_day FROM circulation_data) > 0 THEN 'PASS: Circulation Data Fresh'
    ELSE 'FAIL: Circulation Data Stale or Empty'
  END AS circulation_data_status
LIMIT 1;","WITH
  table_list AS (
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
  ),
  table_update_list AS (
    SELECT
      meta.dataset_id,
      meta.table_id,
      datetime(timestamp_millis(meta.last_modified_time), ""Australia/Sydney"") AS last_update_time,
      meta.row_count,
      table_list.update_frequency
    FROM
      `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
      JOIN
      table_list
      ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
  ),
  load_stats AS (
    SELECT
      *,
      `current_datetime`(""Australia/Sydney"") AS time_now,
      datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago
    FROM
      table_update_list
  ),
  alert_sts AS (
    SELECT
      *,
      CASE
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
        WHEN row_count = 0 THEN -3
        ELSE 0
      END AS alert_status
    FROM
      load_stats
  )
SELECT
  CASE
    WHEN SAFE_CAST(CASE WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1 ELSE alert_status END AS INT64) = 0 THEN 'OK'
    WHEN SAFE_CAST(CASE WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1 ELSE alert_status END AS INT64) = -1 THEN 'Budget/Forecast Table (Ignored)'
    WHEN SAFE_CAST(CASE WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1 ELSE alert_status END AS INT64) = -2 THEN 'Severely Delayed'
    WHEN SAFE_CAST(CASE WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1 ELSE alert_status END AS INT64) = -3 THEN 'Zero Rows'
    ELSE 'Other Status'
  END AS alert_status_description,
  COUNT(table_id) AS table_count
FROM
  alert_sts
GROUP BY 1
ORDER BY 1
LIMIT 12;",21,f9b52275-5924-4afb-8222-2c55854183ba
"SELECT
    SAFE_CAST(t0.Category AS STRING) AS category_dimension,
    SUM(SAFE_CAST(t0.Product_Revenue AS NUMERIC)) AS total_product_revenue,
    SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5', '6') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS total_expense_all_margin_levels
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0
GROUP BY
    category_dimension
ORDER BY
    total_product_revenue DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.Category AS STRING)) AS unique_categories,
    COUNT(DISTINCT SAFE_CAST(t0.Product_Name AS STRING)) AS unique_product_names,
    COUNT(DISTINCT SAFE_CAST(t0.Margin_Level AS STRING)) AS unique_margin_levels
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(SAFE_CAST(t0.Product_Revenue AS NUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS product_revenue_check,
    CASE WHEN SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5', '6') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) > 0 THEN 'PASS' ELSE 'FAIL' END AS total_expense_check
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0
LIMIT 1;","SELECT
    SAFE_CAST(t0.Margin_Level AS STRING) AS margin_level,
    COUNT(*) AS record_count,
    SUM(SAFE_CAST(t0.Expense AS NUMERIC)) AS total_expense_for_level
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0
GROUP BY
    margin_level
ORDER BY
    margin_level
LIMIT 10;",22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
"SELECT
  t0.payment_gateway,
  t0.subscription_classification_type,
  COUNT(DISTINCT t0.subscriber_id_src) AS unique_subscribers
FROM (
  WITH driver AS (
    SELECT
      subscriber_id_src,
      subscription_id_src,
      max(tran_date) AS latest_tran_date
    FROM
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
    WHERE
      tran_date BETWEEN `current_date`() - 60 AND `current_date`()
    GROUP BY 1, 2
  )
  SELECT
    b.payment_gateway,
    b.subscriber_id_src,
    b.subscription_classification_type,
    b.latest_attempt_flag
  FROM
    driver AS a
    JOIN
    `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
    ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  WHERE
    b.latest_attempt_flag = 'Y'
) AS t0
GROUP BY
  t0.payment_gateway,
  t0.subscription_classification_type
ORDER BY
  unique_subscribers DESC
LIMIT 12;","SELECT
  COUNT(1) AS total_rows,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS unique_subscribers,
  COUNT(DISTINCT SAFE_CAST(subscription_id_src AS STRING)) AS unique_subscriptions,
  COUNT(DISTINCT SAFE_CAST(payment_gateway AS STRING)) AS unique_payment_gateways,
  MIN(SAFE_CAST(tran_date AS DATE)) AS min_tran_date,
  MAX(SAFE_CAST(tran_date AS DATE)) AS max_tran_date
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
LIMIT 1;","SELECT
  CASE WHEN COUNT(DISTINCT t0.subscriber_id_src) > 0 THEN 'PASS' ELSE 'FAIL' END AS check_metric_positive,
  CASE WHEN MAX(SAFE_CAST(t0.tran_date AS DATE)) >= CURRENT_DATE() - 2 THEN 'PASS' ELSE 'FAIL' END AS check_data_freshness
FROM (
  WITH driver AS (
    SELECT
      subscriber_id_src,
      subscription_id_src,
      max(tran_date) AS latest_tran_date
    FROM
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
    WHERE
      tran_date BETWEEN `current_date`() - 60 AND `current_date`()
    GROUP BY 1, 2
  )
  SELECT
    b.subscriber_id_src,
    b.tran_date,
    b.subscription_classification_type,
    b.latest_attempt_flag
  FROM
    driver AS a
    JOIN
    `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
    ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  WHERE
    b.latest_attempt_flag = 'Y'
) AS t0
WHERE t0.subscription_classification_type IN ('Standard Paid')
LIMIT 1;","SELECT
  SAFE_CAST(subscription_classification_type AS STRING) AS subscription_type,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS unique_subscribers_count
FROM (
  WITH driver AS (
    SELECT
      subscriber_id_src,
      subscription_id_src,
      max(tran_date) AS latest_tran_date
    FROM
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
    WHERE
      tran_date BETWEEN `current_date`() - 60 AND `current_date`()
    GROUP BY 1, 2
  )
  SELECT
    b.subscriber_id_src,
    b.subscription_classification_type,
    b.latest_attempt_flag
  FROM
    driver AS a
    JOIN
    `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
    ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  WHERE
    b.latest_attempt_flag = 'Y'
) AS t0
GROUP BY
  subscription_type
ORDER BY
  unique_subscribers_count DESC
LIMIT 12;",23,da5dcd47-2e80-45e8-94b8-5b71d81182f5
"SELECT
    t0.financial_year,
    t0.revenue_group_subtype,
    t0.advertiser_group,
    COUNT(DISTINCT t0.account_number) AS distinct_accounts
FROM
    `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0
GROUP BY
    t0.financial_year,
    t0.revenue_group_subtype,
    t0.advertiser_group
ORDER BY
    t0.financial_year DESC, distinct_accounts DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.account_number) AS unique_account_numbers,
    COUNT(DISTINCT t0.advertiser_group) AS unique_advertiser_groups,
    MIN(SAFE_CAST(t0.calendar_year AS STRING)) AS min_calendar_year,
    MAX(SAFE_CAST(t0.calendar_year AS STRING)) AS max_calendar_year,
    MIN(SAFE_CAST(t0.financial_year AS STRING)) AS min_financial_year,
    MAX(SAFE_CAST(t0.financial_year AS STRING)) AS max_financial_year,
    MIN(SAFE_CAST(t0.calendar_month AS STRING)) AS min_calendar_month,
    MAX(SAFE_CAST(t0.calendar_month AS STRING)) AS max_calendar_month,
    MIN(SAFE_CAST(t0.financial_month AS STRING)) AS min_financial_month,
    MAX(SAFE_CAST(t0.financial_month AS STRING)) AS max_financial_month
FROM
    `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN COUNTIF(t0.financial_year = '2025') > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS financial_year_2025_check,
    CASE
        WHEN COUNTIF(t0.revenue_group_subtype = 'SUNDRY ADSALES OVERLAY') > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS sundry_adsales_overlay_check,
    CASE
        WHEN MAX(t0.financial_year) IS NOT NULL AND SAFE_CAST(MAX(t0.financial_year) AS INT64) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS'
        ELSE 'FAIL'
    END AS recent_financial_year_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0
LIMIT 1;","SELECT
    t0.revenue_group_subtype,
    COUNT(*) AS subtype_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0
GROUP BY
    t0.revenue_group_subtype
ORDER BY
    subtype_count DESC
LIMIT 10;",24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
"SELECT
  calendar.fy_quarter_of_year,
  CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END AS Standardized_Publication_Name,
  CASE WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END = 'The Daily Telegraph') THEN ' NSW' WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END IN ('The Herald Sun', 'Geelong Advertiser', 'Weekly Times')) THEN '  VIC' WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END = 'The Advertiser') THEN '   SA' WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END IN ('Courier Mail', 'Cairns Post', 'GCB', 'Townsville Bulletin', 'The Chronicle', 'Daily Mercury', 'Sunshine Coast')) THEN '     QLD' WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END = 'Northern Territory News') THEN '      NT' WHEN (CASE WHEN (pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (pub.publication_name IN ('Weekly Times')) THEN 'Weekly Times' WHEN (pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' WHEN (pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (pub.publication_name = 'Toowoomba') THEN 'The Chronicle' WHEN (pub.publication_name = 'Townsville Bulletin') THEN 'Townsville Bulletin' WHEN (pub.publication_name = 'Gold Coast Bulletin') THEN 'GCB' WHEN (pub.publication_name = 'Geelong Advertiser') THEN 'Geelong Advertiser' WHEN (pub.publication_name = 'Cairns Post') THEN 'Cairns Post' WHEN (pub.publication_name = 'Sunshine Coast') THEN 'Sunshine Coast' WHEN (pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'Courier Mail' WHEN (pub.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury' WHEN (pub.publication_name IN ('Sunday Territorian', 'NT News')) THEN 'Northern Territory News' WHEN (pub.publication_name = 'Mackay') THEN 'Daily Mercury' ELSE NULL END = 'Mercury') THEN '    TAS' ELSE NULL END AS Publication_State_Region,
  CASE WHEN os.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN os.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN os.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN os.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN os.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END AS Sales_Channel_Group,
  SUM(os.Actual_Amount) AS Total_Actual_Amount,
  SUM(os.Budget_Amount) AS Total_Budget_Amount,
  SUM(os.volume) AS Total_Actual_Volume,
  SUM(os.Budget_Volume) AS Total_Budget_Volume
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.l04_publication_code <> 'Free News & Lifestyle'
  AND os.l06_publication_code NOT IN ('Food', 'Prestige')
  AND os.gl_hierarchy_code = 'FY2025'
GROUP BY
  1, 2, 3, 4
ORDER BY
  1, 2, 3, 4
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT os.fiscal_week_id) AS unique_fiscal_weeks,
  COUNT(DISTINCT os.gl_publication_code) AS unique_publications,
  COUNT(DISTINCT os.os_level_8) AS unique_os_level_8,
  MIN(calendar.fy_first_day_of_week) AS min_date,
  MAX(calendar.fy_first_day_of_week) AS max_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  CASE WHEN SUM(os.Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_check,
  CASE WHEN MAX(calendar.fy_first_day_of_week) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 WEEK) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  CASE WHEN os.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN os.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN os.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN os.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN os.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END AS Sales_Channel_Group,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.gl_hierarchy_code = 'FY2025'
GROUP BY
  Sales_Channel_Group
ORDER BY
  record_count DESC
LIMIT 10;",25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
"SELECT
  t0c0d1.fy_year,
  t0c0d1.fy_week_of_year,
  t0c0d1.masthead_group,
  t0c0d1.finance_recognition,
  t0c0d1.closing_base,
  t0c0d1.wow_closing_movement,
  t0c0d1.yoy_closing_movement,
  t0c0d1.yoy_closing_base
FROM
  (
    SELECT
      fy_year,
      fy_week_of_year,
      masthead,
      CASE
        WHEN masthead IN ('TA') THEN 'The Australian'
        WHEN masthead IN ('AA', 'CM', 'DT', 'HS') THEN 'Metros'
        WHEN masthead IN ('CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM') THEN 'Regionals'
        WHEN masthead IN ('WT') THEN 'Other Publications'
        ELSE 'Exclude'
      END AS masthead_group,
      CASE
        WHEN masthead IN ('TA') THEN 'The Australian & Prestige'
        WHEN masthead IN ('AA', 'CM', 'DT', 'HS', 'CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM', 'WT') THEN 'States & Community'
        ELSE 'Exclude'
      END AS masthead_pillar,
      CASE
        WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle'
        ELSE delivery_medium_type
      END AS delivery_medium_type_adjusted,
      subscriber_has_email_flag,
      CASE
        WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription'
        WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription'
        WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription'
        WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription'
      END AS finance_recognition,
      closing_base,
      closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_year ORDER BY fy_week_of_year) AS wow_closing_movement,
      closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) AS yoy_closing_movement,
      LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) AS yoy_closing_base
    FROM
      (
        SELECT
          fy_year,
          fy_week_of_year,
          masthead,
          delivery_medium_type,
          subscriber_has_email_flag,
          SUM(subscription_count) AS closing_base
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
        WHERE
          sunday_flag = 'Y'
          AND delivery_medium_type != 'Digital'
          AND classification_level_1 IN ('Standard Paid', 'Other Paid')
          AND fy_year >= 2024
        GROUP BY 1, 2, 3, 4, 5
      )
  ) AS t0c0d1
WHERE
  t0c0d1.wow_closing_movement IS NOT NULL
  AND t0c0d1.yoy_closing_movement IS NOT NULL
ORDER BY
  t0c0d1.fy_year DESC, t0c0d1.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fy_year AS STRING) || '-' || SAFE_CAST(fy_week_of_year AS STRING)) AS total_distinct_weeks,
  MIN(SAFE_CAST(fy_year AS INT64)) AS min_fy_year,
  MAX(SAFE_CAST(fy_year AS INT64)) AS max_fy_year,
  MIN(SAFE_CAST(fy_week_of_year AS INT64)) AS min_fy_week_of_year,
  MAX(SAFE_CAST(fy_week_of_year AS INT64)) AS max_fy_week_of_year,
  COUNT(DISTINCT masthead) AS distinct_mastheads,
  COUNT(DISTINCT delivery_medium_type) AS distinct_delivery_medium_types,
  COUNT(DISTINCT classification_level_1) AS distinct_classification_levels
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
WHERE
  sunday_flag = 'Y'
  AND delivery_medium_type != 'Digital'
  AND classification_level_1 IN ('Standard Paid', 'Other Paid')
LIMIT 1;","SELECT
  CASE
    WHEN MAX(SAFE_CAST(fy_year AS INT64)) >= (SELECT MAX(SAFE_CAST(fy_year AS INT64)) FROM `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`) - 1 THEN 'PASS'
    ELSE 'FAIL'
  END AS fy_year_freshness_check,
  CASE
    WHEN SUM(CASE WHEN SAFE_CAST(fy_year AS INT64) = (SELECT MAX(SAFE_CAST(fy_year AS INT64)) FROM `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`) THEN subscription_count ELSE 0 END) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS latest_year_closing_base_positive_check,
  CASE
    WHEN MAX(SAFE_CAST(fy_year AS INT64) * 100 + SAFE_CAST(fy_week_of_year AS INT64)) >= (SELECT MAX(SAFE_CAST(fy_year AS INT64) * 100 + SAFE_CAST(fy_week_of_year AS INT64)) FROM `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`) - 5 THEN 'PASS'
    ELSE 'FAIL'
  END AS latest_week_freshness_check
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
WHERE
  sunday_flag = 'Y'
  AND delivery_medium_type != 'Digital'
  AND classification_level_1 IN ('Standard Paid', 'Other Paid')
LIMIT 1;","SELECT
  CASE
    WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription'
    WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription'
    WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription'
    WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription'
    ELSE 'Other/Undefined'
  END AS finance_recognition_category,
  COUNT(1) AS record_count
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
WHERE
  fy_year >= 2024
GROUP BY
  1
ORDER BY
  record_count DESC
LIMIT 5;",26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
"SELECT
  t0.agency_parent,
  t0.revenue_group_subtype,
  SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS current_fy_gross_revenue,
  SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) AS previous_fy_gross_revenue,
  SUM(CASE
    WHEN t0.relative_fy_month_offset < -12 THEN (CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END)
    ELSE (CASE WHEN (t0.relative_fy_year_offset = -1 AND SAFE_CAST(FORMAT_TIMESTAMP('%Y-%m-%d', SAFE_CAST(t0.booking_line_created_date AS TIMESTAMP)) AS DATETIME) <= DATETIME_ADD(DATE(TIMESTAMP '2025-05-23 01:19:32.916346+00', 'Australia/Sydney'), INTERVAL -365 DAY)) THEN t0.gross_revenue_amount ELSE 0 END)
  END) AS prior_period_gross_revenue_conditional
FROM
  `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0
WHERE
  (t0.revenue_group_subtype != 'PROGRAMMATIC EXCHANGE' OR t0.revenue_group_subtype IS NULL)
GROUP BY
  t0.agency_parent,
  t0.revenue_group_subtype
ORDER BY
  current_fy_gross_revenue DESC
LIMIT 10;","SELECT
  (SELECT COUNT(*) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_total_records,
  (SELECT COUNT(DISTINCT agency_parent) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_unique_agencies,
  (SELECT MIN(booking_line_created_date) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_min_date,
  (SELECT MAX(booking_line_created_date) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_max_date,
  (SELECT COUNT(*) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_total_records,
  (SELECT COUNT(DISTINCT account_number) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_unique_accounts,
  (SELECT MIN(movement_date) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_min_date,
  (SELECT MAX(movement_date) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_max_date
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_positive_check,
  CASE WHEN MAX(t0.booking_line_created_date) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0
LIMIT 1;","SELECT
  t0.revenue_group_subtype,
  COUNT(*) AS record_count,
  SUM(CASE WHEN t0.revenue_group_subtype != 'PROGRAMMATIC EXCHANGE' OR t0.revenue_group_subtype IS NULL THEN 1 ELSE 0 END) AS non_programmatic_count
FROM
  `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0
GROUP BY
  t0.revenue_group_subtype
ORDER BY
  record_count DESC
LIMIT 5;",27,fed70b12-c274-4cde-9920-592ca4c4dab0
"SELECT
  t0.fy_year,
  t0.fy_week_of_year,
  t0.os_level_4,
  t0.publication_name,
  SUM(t0.Budget_Amount) AS total_budget_amount,
  SUM(t0.Actual_Amount) AS total_actual_amount
FROM
  (
    SELECT
      os.Budget_Amount,
      os.Actual_Amount,
      os.fiscal_week_id,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      os.os_level_9,
      os.os_level_12,
      os.is_print_digital_flag,
      pub.l03_publication_code,
      pub.l12_publication_code,
      pub.publication_name,
      calendar.fy_week_of_year,
      calendar.fy_year,
      dep.gl_hierarchy_code
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
      LEFT JOIN (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department` AS dep ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  t0.gl_hierarchy_code = 'FY2025'
  AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses')
GROUP BY
  t0.fy_year,
  t0.fy_week_of_year,
  t0.os_level_4,
  t0.publication_name
ORDER BY
  t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT gl_publication_code) AS unique_publications,
  MIN(SAFE_CAST(fiscal_week_id AS INT)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS INT)) AS max_fiscal_week_id
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_positive_check,
  CASE WHEN MAX(SAFE_CAST(t0.fy_year_week_number AS INT)) >= (SELECT MAX(SAFE_CAST(source_week_number AS INT)) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_period_control` WHERE period_name = 'CP') THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  (
    SELECT
      os.Actual_Amount,
      calendar.fy_year_week_number
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
  ) AS t0
LIMIT 1;","SELECT
  period_name,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_period_control`
GROUP BY
  period_name
ORDER BY
  period_name
LIMIT 12;",28,b1c5901f-a535-42eb-870d-05cc025f7c27
"SELECT
  SAFE_CAST(t0.fiscal_month_id AS STRING) AS fiscal_month_id,
  t0.service_model AS service_model,
  SUM(t0.revenue_served_after_exclusion) AS total_revenue_served_after_exclusion,
  SUM(t0.sales_cost) AS total_sales_cost,
  SUM(t0.total_2nd_margin_rev) AS total_2nd_margin_revenue
FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
WHERE
  (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid')
GROUP BY
  fiscal_month_id,
  service_model
ORDER BY
  fiscal_month_id ASC
LIMIT 12;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT t0.service_model) AS unique_service_models,
  COUNT(DISTINCT SAFE_CAST(t0.fiscal_month_id AS STRING)) AS unique_fiscal_months,
  MIN(SAFE_CAST(t0.fiscal_month_id AS STRING)) AS min_fiscal_month_id,
  MAX(SAFE_CAST(t0.fiscal_month_id AS STRING)) AS max_fiscal_month_id
FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.revenue_served_after_exclusion) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_check,
  CASE WHEN MAX(SAFE_CAST(t0.fiscal_month_id AS STRING)) >= FORMAT_DATE('%Y%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) THEN 'PASS' ELSE 'FAIL' END AS freshness_check
FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
LIMIT 1;","SELECT
  t0.service_model,
  COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
GROUP BY
  t0.service_model
ORDER BY
  record_count DESC
LIMIT 12;",30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
"SELECT
    t0.L03_publication_name,
    t0.business_unit_code,
    t0.scenario,
    SUM(t0.earned_amount) AS total_earned_amount
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    (CASE WHEN (SAFE_CAST(t0.classification_level_1_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_1_description AS STRING) END NOT IN ('Complimentary', 'Free Staff', 'Free Trials'))
    AND
    (CASE WHEN (SAFE_CAST(t0.classification_level_2_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_2_description AS STRING) END NOT IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access'))
GROUP BY
    t0.L03_publication_name,
    t0.business_unit_code,
    t0.scenario
ORDER BY
    total_earned_amount DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.L03_publication_name AS STRING)) AS unique_publications,
    COUNT(DISTINCT SAFE_CAST(t0.business_unit_code AS STRING)) AS unique_business_units,
    COUNT(DISTINCT SAFE_CAST(t0.fiscal_week_id AS INT64)) AS unique_fiscal_weeks,
    MIN(SAFE_CAST(t0.fiscal_week_id AS INT64)) AS min_fiscal_week_id,
    MAX(SAFE_CAST(t0.fiscal_week_id AS INT64)) AS max_fiscal_week_id,
    MIN(SAFE_CAST(t0.earned_amount AS BIGNUMERIC)) AS min_earned_amount,
    MAX(SAFE_CAST(t0.earned_amount AS BIGNUMERIC)) AS max_earned_amount
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN MAX(SAFE_CAST(t0.fiscal_week_id AS INT64)) >= SAFE_CAST(FORMAT_DATE('%Y%W', CURRENT_DATE()) AS INT64) - 4 THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check,
    CASE
        WHEN SUM(CASE WHEN SAFE_CAST(t0.fiscal_week_id AS INT64) = (SELECT MAX(SAFE_CAST(fiscal_week_id AS INT64)) FROM `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct`) THEN SAFE_CAST(t0.earned_amount AS BIGNUMERIC) ELSE 0 END) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS latest_earned_amount_positive_check
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN (CASE WHEN (SAFE_CAST(t0.classification_level_1_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_1_description AS STRING) END NOT IN ('Complimentary', 'Free Staff', 'Free Trials'))
             AND
             (CASE WHEN (SAFE_CAST(t0.classification_level_2_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_2_description AS STRING) END NOT IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access'))
        THEN 'Included (Non-Complimentary/Free)'
        ELSE 'Excluded (Complimentary/Free)'
    END AS classification_filter_status,
    COUNT(1) AS record_count
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
GROUP BY
    classification_filter_status
LIMIT 2;",31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
"SELECT
    SAFE_CAST(DATETIME_TRUNC(t0.SubscriptionDateTime, DAY) AS DATE) AS registration_date,
    t0.PublicationGroup,
    t0.Website,
    COUNT(1) AS total_registrations,
    COUNTIF(SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.categorytopic_path AS STRING), 'Wealth|wealth') OR SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.ArticleDominantSection1 AS STRING), 'Wealth|wealth')) AS wealth_registrations
FROM
    `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0
WHERE
    t0.SubscriptionDateTime >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)
GROUP BY
    1, 2, 3
ORDER BY
    registration_date DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    MIN(t0.SubscriptionDateTime) AS min_subscription_datetime,
    MAX(t0.SubscriptionDateTime) AS max_subscription_datetime,
    APPROX_COUNT_DISTINCT(t0.ArticleDominantSection1) AS unique_article_sections,
    APPROX_COUNT_DISTINCT(t0.ArticleRightsSource) AS unique_rights_sources,
    APPROX_COUNT_DISTINCT(t0.PublicationGroup) AS unique_publication_groups,
    APPROX_COUNT_DISTINCT(t0.Website) AS unique_websites
FROM
    `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS registrations_exist_check,
    CASE WHEN MAX(t0.SubscriptionDateTime) >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 2 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0
WHERE
    (SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.categorytopic_path AS STRING), 'Wealth|wealth') OR SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.ArticleDominantSection1 AS STRING), 'Wealth|wealth'))
    AND t0.SubscriptionDateTime >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)
LIMIT 1;","SELECT
    CASE
        WHEN SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.categorytopic_path AS STRING), 'Wealth|wealth') OR SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.ArticleDominantSection1 AS STRING), 'Wealth|wealth') THEN 'Wealth Related'
        ELSE 'Non-Wealth Related'
    END AS wealth_category,
    COUNT(1) AS total_registrations
FROM
    `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0
WHERE
    t0.SubscriptionDateTime >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY)
GROUP BY
    1
LIMIT 2;",32,9c992f02-f13b-4c32-a400-90135fdff180
"WITH OSandFACT AS (
    SELECT
      os.Actual_Amount,
      os.Last_Year_Actual_Amount,
      os.Budget_Amount,
      os.gl_publication_code,
      os.os_level_4,
      os.os_level_5,
      calendar.fy_year,
      calendar.fy_week_of_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  SAFE_CAST(t0.fy_year AS STRING) AS fiscal_year,
  SAFE_CAST(t0.fy_week_of_year AS STRING) AS fiscal_week,
  t0.gl_publication_code,
  t0.os_level_4,
  t0.os_level_5,
  SUM(t0.Actual_Amount) AS total_actual_amount,
  SUM(t0.Last_Year_Actual_Amount) AS total_last_year_actual_amount,
  SUM(t0.Budget_Amount) AS total_budget_amount
FROM
  OSandFACT AS t0
WHERE
  SAFE_CAST(t0.fy_year AS INT) = 2025 AND SAFE_CAST(t0.fy_week_of_year AS INT) = 40
GROUP BY
  fiscal_year, fiscal_week, t0.gl_publication_code, t0.os_level_4, t0.os_level_5
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  MIN(SAFE_CAST(fiscal_week_id AS STRING)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS STRING)) AS max_fiscal_week_id,
  COUNT(DISTINCT gl_publication_code) AS unique_gl_publication_codes
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1;","WITH OSandFACT AS (
    SELECT
      os.Actual_Amount,
      calendar.fy_year,
      calendar.fy_week_of_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
  )
SELECT
  CASE WHEN SUM(t0.Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_check,
  CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT)) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  OSandFACT AS t0
LIMIT 1;","SELECT
  month_end_flag,
  COUNT(*) AS count_of_weeks
FROM
  (
    SELECT DISTINCT
      CASE
        WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
        ELSE 'N'
      END AS month_end_flag
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
      ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
  )
GROUP BY
  month_end_flag
LIMIT 2;",33,cbab66df-64cb-4ec6-a112-088557684b7e
"SELECT
  SAFE_CAST(t0.advertiser_name AS STRING) AS advertiser_name,
  SAFE_CAST(t0.booking_number AS STRING) AS booking_number,
  COUNT(*) AS total_records
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
  advertiser_name,
  booking_number
ORDER BY
  total_records DESC
LIMIT 12;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.advertiser_name AS STRING)) AS unique_advertiser_names,
  COUNT(DISTINCT SAFE_CAST(t0.booking_number AS STRING)) AS unique_booking_numbers,
  COUNT(DISTINCT SAFE_CAST(t0.account_number AS STRING)) AS unique_account_numbers,
  MIN(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS min_load_timestamp,
  MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS max_load_timestamp
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 12;","SELECT
  CASE
    WHEN COUNT(*) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS record_count_check,
  CASE
    WHEN MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) IS NOT NULL AND MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 90 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
  CASE WHEN ('Cal' = 'Cal') THEN 'Calendar Period' ELSE NULL END AS calendar_period_type,
  COUNT(*) AS count_of_records
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
  calendar_period_type
LIMIT 12;",34,70ed3b92-987b-479b-9ed7-d2903bd2787e
"SELECT
  t0.fy_year,
  t0.fy_year_week_number,
  t0.os_level_7 AS sales_channel,
  CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END AS publication_group,
  SUM(t0.Actual_Amount) AS total_actual_amount,
  SUM(t0.volume) AS total_volume,
  SUM(t0.Last_Year_Actual_Amount) AS total_last_year_actual_amount,
  SUM(t0.Budget_Amount) AS total_budget_amount,
  SUM(t0.Forecast_Amount) AS total_forecast_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON t0.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
GROUP BY
  t0.fy_year,
  t0.fy_year_week_number,
  t0.os_level_7,
  publication_group
ORDER BY
  t0.fy_year DESC, t0.fy_year_week_number DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_rows,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT gl_publication_code) AS unique_publications,
  COUNT(DISTINCT os_level_7) AS unique_sales_channels,
  MIN(calendar.fy_first_day_of_week) AS min_date,
  MAX(calendar.fy_last_day_of_week) AS max_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number
LIMIT 1;","SELECT
  CASE
    WHEN SUM(t0.Actual_Amount) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS actual_amount_check,
  CASE
    WHEN MAX(calendar.fy_last_day_of_week) >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END AS publication_group,
  COUNT(1) AS record_count,
  SUM(t0.Actual_Amount) AS total_actual_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
GROUP BY
  publication_group
ORDER BY
  record_count DESC
LIMIT 10;",35,aca2f032-b796-49a2-89fe-781ca947aa33
"SELECT
    t0.source_system_name,
    t0.fiscal_week_id,
    SAFE_CAST(DATETIME_TRUNC(t0.dw_prstn_load_datetime, DAY) AS DATE) AS load_date,
    SUM(t0.records_count) AS total_records_loaded,
    COUNT(DISTINCT t0.scenario) AS distinct_scenarios
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
WHERE
    t0.dw_prstn_load_datetime >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY)
GROUP BY
    t0.source_system_name, t0.fiscal_week_id, load_date
ORDER BY
    load_date DESC, total_records_loaded DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_rows,
    COUNT(DISTINCT t0.fiscal_week_id) AS unique_fiscal_weeks,
    COUNT(DISTINCT t0.scenario) AS unique_scenarios,
    COUNT(DISTINCT t0.source_system_name) AS unique_source_systems,
    MIN(t0.dw_prstn_load_datetime) AS min_load_datetime,
    MAX(t0.dw_prstn_load_datetime) AS max_load_datetime
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN MAX(t0.dw_prstn_load_datetime) >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 2 DAY) THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check,
    CASE
        WHEN (SELECT SUM(t1.records_count) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t1 WHERE t1.dw_prstn_load_datetime >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY)) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS recent_records_exist_check
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
LIMIT 1;","SELECT
    t0.source_system_name,
    SUM(t0.records_count) AS total_records_by_source
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
WHERE
    t0.dw_prstn_load_datetime >= DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 30 DAY)
GROUP BY
    t0.source_system_name
ORDER BY
    total_records_by_source DESC
LIMIT 5;",36,2dfb1b58-42eb-44cb-b550-66469ae7df3c
"SELECT
  t0.os_level_7,
  t0.os_level_10,
  CASE WHEN t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry') THEN 'M-F' WHEN t0.day_of_week = 'Sat' THEN 'SAT' WHEN t0.day_of_week = 'Sun' THEN 'SUN' ELSE NULL END AS day_category,
  SUM(t0.Actual_Amount) AS total_actual_amount,
  SUM(t0.Budget_Amount) AS total_budget_amount,
  SUM(t0.volume) AS total_volume
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
LEFT JOIN
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
  ON t0.gl_publication_code = pub.publication_code
LEFT JOIN
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
  ON t0.fiscal_week_id = calendar.fy_year_week_number
LEFT JOIN
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_gl_department` AS dep
  ON t0.os_level_12 = dep.department_code
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND pub.l04_publication_code <> 'Free News & Lifestyle'
  AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
GROUP BY
  t0.os_level_7,
  t0.os_level_10,
  day_category
ORDER BY
  total_actual_amount DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  MIN(SAFE_CAST(fiscal_week_id AS STRING)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS STRING)) AS max_fiscal_week_id,
  COUNT(DISTINCT gl_publication_code) AS unique_publication_codes,
  COUNT(DISTINCT os_level_7) AS unique_os_level_7,
  COUNT(DISTINCT os_level_10) AS unique_os_level_10
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1;","SELECT
  CASE WHEN SUM(Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_check,
  CASE WHEN MAX(calendar.fy_last_day_of_week) >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
LEFT JOIN
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
  ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  CASE
    WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels'
    WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations'
    WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies'
    WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions'
    WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets'
    ELSE 'Unspec Channel'
  END AS channel_category,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.gl_hierarchy_code = 'FY2025'
GROUP BY
  channel_category
ORDER BY
  record_count DESC
LIMIT 10;",37,2104a3f5-9424-4087-a928-e67fecae789a
"SELECT t0.fy_year, t0.fy_week_of_year, t0.masthead, SUM(t0.Total_Revenue) AS total_revenue, SUM(t0.Total_Weekly_Sales) AS total_weekly_sales, SUM(t0.Net_Growth_Consumer) AS net_growth_consumer FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 GROUP BY t0.fy_year, t0.fy_week_of_year, t0.masthead ORDER BY t0.fy_year DESC, t0.fy_week_of_year DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT t0.masthead) AS unique_mastheads, MIN(t0.fy_year) AS min_fy_year, MAX(t0.fy_year) AS max_fy_year, MIN(t0.fy_week_of_year) AS min_fy_week, MAX(t0.fy_week_of_year) AS max_fy_week FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 LIMIT 1;","SELECT CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS record_count_check, CASE WHEN MAX(t0.fy_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) THEN 'PASS' ELSE 'FAIL' END AS latest_year_check, CASE WHEN SUM(t0.Total_Revenue) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_positive_check FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`) AND t0.fy_week_of_year = (SELECT MAX(fy_week_of_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` WHERE fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`)) LIMIT 1;","SELECT CASE WHEN t0.masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro' WHEN t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'Regionals' ELSE 'Other' END AS masthead_group_type, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 GROUP BY masthead_group_type ORDER BY record_count DESC LIMIT 5;",38,57d87efe-c112-4d42-be1b-045f0c8ca73e
"SELECT
  SAFE_CAST(t0.masthead AS STRING) AS masthead,
  SAFE_CAST(t0.rate_plan_code AS STRING) AS rate_plan_code,
  COUNT(1) AS total_records,
  SUM(t0.should_be_allocated_to_revenue_gst_exclusive) AS total_allocated_revenue_gst_exclusive
FROM
  (
    WITH
      core AS (
        SELECT
          *,
          greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", '20250101')) AS week_prorata_allocation_start,
          least(allocation_end_date, PARSE_DATE(""%Y%m%d"", '20250131')) AS week_prorata_allocation_end
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
        WHERE
          PARSE_DATE(""%Y%m%d"", '20250101') BETWEEN allocation_start_date AND allocation_end_date OR (allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
            '20250101') AND PARSE_DATE(""%Y%m%d"", '20250131')) OR (allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
            '20250101') AND PARSE_DATE(""%Y%m%d"", '20250131'))
      ),
      core_2 AS (
        SELECT
          * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year,
          fy_year, allocation_end_date_ext),
          (date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount AS should_be_allocated_to_revenue_gst_inclusive,
          ((date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount) / 1.1 AS should_be_allocated_to_revenue_gst_exclusive
        FROM
          core
      )
    SELECT
      * FROM core_2
  ) AS t0
GROUP BY
  1, 2
ORDER BY
  total_allocated_revenue_gst_exclusive DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(subscription_order_id_src AS STRING)) AS unique_subscription_orders,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS unique_subscribers,
  MIN(SAFE_CAST(allocation_start_date AS DATE)) AS min_allocation_start_date,
  MAX(SAFE_CAST(allocation_end_date AS DATE)) AS max_allocation_end_date
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
LIMIT 1;","SELECT
  CASE
    WHEN SUM(SAFE_CAST(t0.should_be_allocated_to_revenue_gst_exclusive AS BIGNUMERIC)) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS revenue_check,
  CASE
    WHEN MAX(SAFE_CAST(t0.allocation_end_date AS DATE)) >= CURRENT_DATE() - INTERVAL 7 DAY THEN 'PASS'
    ELSE 'FAIL'
  END AS freshness_check
FROM
  (
    WITH
      core AS (
        SELECT
          *,
          greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", '20240101')) AS week_prorata_allocation_start,
          least(allocation_end_date, PARSE_DATE(""%Y%m%d"", '20241231')) AS week_prorata_allocation_end
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
        WHERE
          PARSE_DATE(""%Y%m%d"", '20240101') BETWEEN allocation_start_date AND allocation_end_date OR (allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
            '20240101') AND PARSE_DATE(""%Y%m%d"", '20241231')) OR (allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
            '20240101') AND PARSE_DATE(""%Y%m%d"", '20241231'))
      ),
      core_2 AS (
        SELECT
          * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year,
          fy_year, allocation_end_date_ext),
          (date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount AS should_be_allocated_to_revenue_gst_inclusive,
          ((date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount) / 1.1 AS should_be_allocated_to_revenue_gst_exclusive
        FROM
          core
      )
    SELECT
      * FROM core_2
  ) AS t0
LIMIT 1;","SELECT
  SAFE_CAST(subscription_status AS STRING) AS subscription_status,
  COUNT(DISTINCT SAFE_CAST(dw_subscription_id AS STRING)) AS unique_subscriptions
FROM
  (
    WITH
      contracts_in_scope_active_and_cancelled AS (
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id,
          term_period_name,
          'active' AS subscription_status,
          date(null) AS cancellation_date,
          masthead,
          rate_plan_code,
          offer_category_name,
          offer_category_group_name
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND subscription_status_code =
          'active'
        UNION ALL
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id,
          term_period_name,
          'cancelled' AS subscription_status,
          report_date AS cancellation_date,
          masthead,
          rate_plan_code,
          offer_category_name,
          offer_category_group_name
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_movement`
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND subscription_movement_count_type =
          'cancellation' AND report_date > '2022-07-01'
      ),
      contracts_in_scope_active_cancelled_inactivenotcancelled AS (
        SELECT
          *
        FROM
          contracts_in_scope_active_and_cancelled
        UNION ALL
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id,
          term_period_name,
          'inactive not cancelled - contract in the past' AS subscription_status,
          date(null) AS cancellation_date,
          masthead,
          rate_plan_code,
          offer_category_name,
          offer_category_group_name
        FROM
          (
            SELECT
              *,
              row_number() OVER (PARTITION BY dw_subscription_id, dw_rate_plan_id
                ORDER BY date(dw_effective_start_datetime) DESC) AS xrank
            FROM
              `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
          )
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND dw_subscription_id NOT IN
          (
            SELECT DISTINCT
              dw_subscription_id
            FROM
              contracts_in_scope_active_and_cancelled
          ) AND xrank = 1
      )
    SELECT
      subscription_status, dw_subscription_id
    FROM
      contracts_in_scope_active_cancelled_inactivenotcancelled
  )
GROUP BY
  1
ORDER BY
  unique_subscriptions DESC
LIMIT 5;",39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
"SELECT t0.financial_year, t0.nca_industry_pillar, t0.revenue_type, t0.unified_publication_name, SUM(t0.gross_revenue_amount) AS total_gross_revenue FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year IN ('2024', '2025') GROUP BY 1, 2, 3, 4 ORDER BY t0.financial_year DESC, total_gross_revenue DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT t0.booking_number) AS unique_bookings, COUNT(DISTINCT t0.unified_publication_name) AS unique_publications, MIN(t0.data_load_datetime) AS min_data_load_datetime, MAX(t0.data_load_datetime) AS max_data_load_datetime, MIN(t0.financial_year) AS min_financial_year, MAX(t0.financial_year) AS max_financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 1;","SELECT CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS record_count_check, CASE WHEN MAX(t0.data_load_datetime) > DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 30 DAY) THEN 'PASS' ELSE 'FAIL' END AS freshness_check, CASE WHEN (SELECT SUM(t1.gross_revenue_amount) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t1 WHERE t1.financial_year = '2025' LIMIT 1) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_check FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 1;","SELECT CASE WHEN t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') THEN 'Valid Publication' ELSE 'Excluded Publication' END AS publication_status, COUNT(*) AS count_records FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 GROUP BY 1 LIMIT 10;",40,f502f44a-e283-405f-ab8f-6a641edb4194
"SELECT fiscal_year, month_short_name, os_level_6, SUM(TM1_Amount) AS total_tm1_amount, SUM(Tableau_Actual_Amount) AS total_tableau_actual_amount, SUM(ABS(Tableau_Actual_Amount - TM1_Amount)) AS total_abs_variance FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` WHERE SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$') GROUP BY fiscal_year, month_short_name, os_level_6 ORDER BY fiscal_year DESC, month_short_name DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT SAFE_CAST(fiscal_year AS STRING)) AS unique_fiscal_years, COUNT(DISTINCT os_level_6) AS unique_os_level_6, MIN(fiscal_year) AS min_fiscal_year, MAX(fiscal_year) AS max_fiscal_year FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` LIMIT 1;","SELECT CASE WHEN SUM(TM1_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS tm1_amount_check, CASE WHEN SUM(Tableau_Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS tableau_amount_check, CASE WHEN COUNTIF(SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$')) > 0 THEN 'PASS' ELSE 'FAIL' END AS publication_code_regex_check, CASE WHEN MAX(fiscal_year) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS recent_data_check FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` LIMIT 1;","SELECT CASE WHEN SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$') THEN 'Numeric' ELSE 'Non-Numeric' END AS publication_code_type, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` GROUP BY 1 LIMIT 2;",41,f353b933-30eb-4853-9976-0d35371db7d7
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) AS masthead_name,
    SUM(t0.Total_Revenue) AS total_revenue,
    SUM(t0.Total_Weekly_Sales) AS total_weekly_sales,
    SUM(t0.Total_Cancels) AS total_cancels,
    SUM(t0.Total_Closing_Base) AS total_closing_base
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
WHERE
    (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus'
GROUP BY
    t0.fy_year,
    t0.fy_week_of_year,
    masthead_name
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.masthead) AS unique_mastheads,
    MIN(t0.fy_year) AS min_fy_year,
    MAX(t0.fy_year) AS max_fy_year,
    MIN(t0.fy_week_of_year) AS min_fy_week_of_year,
    MAX(t0.fy_week_of_year) AS max_fy_week_of_year
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(t0.Total_Revenue) > 0 THEN 'PASS: Total Revenue is positive'
        ELSE 'FAIL: Total Revenue is not positive'
    END AS revenue_check,
    CASE
        WHEN MAX(t0.fy_year) >= 2025 THEN 'PASS: Data includes current fiscal year (2025)'
        ELSE 'FAIL: Data does not include current fiscal year (2025)'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
LIMIT 1;","SELECT
    t0.masthead,
    (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) AS mapped_masthead_name,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
GROUP BY
    t0.masthead,
    mapped_masthead_name
ORDER BY
    record_count DESC
LIMIT 10;",42,61cc5171-703d-44b5-acd7-e9db7cf81778
"SELECT
    t0.CUSTOMER_NAME,
    t0.YEAR,
    t0.MONTH,
    t0.CURR_PV_FLAG,
    t0.STLY_PV_FLAG,
    CASE WHEN (SAFE_CAST(t0.GM AS STRING) IS NULL) THEN SAFE_CAST(t0.sales_region_name AS STRING) ELSE SAFE_CAST(t0.GM AS STRING) END AS gm_or_sales_region,
    CASE WHEN (SAFE_CAST(t0.GSD AS STRING) IS NULL) THEN SAFE_CAST(t0.sales_team_name AS STRING) ELSE SAFE_CAST(t0.GSD AS STRING) END AS gsd_or_sales_team,
    SUM(SAFE_CAST(t0.LGR AS BIGNUMERIC)) AS total_ledger_revenue,
    SUM(SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC)) AS total_relative_fy_month_offset
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
WHERE
    ((SAFE_CAST(t0.CURR_PV_FLAG AS STRING) = 'NPV' OR SAFE_CAST(t0.STLY_PV_FLAG AS STRING) = 'NPV')
    AND SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC) >= 0
    AND SAFE_CAST(t0.LGR AS BIGNUMERIC) != 0.000000)
GROUP BY
    t0.CUSTOMER_NAME,
    t0.YEAR,
    t0.MONTH,
    t0.CURR_PV_FLAG,
    t0.STLY_PV_FLAG,
    gm_or_sales_region,
    gsd_or_sales_team
ORDER BY
    t0.YEAR DESC, t0.MONTH DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.CUSTOMER_NAME AS STRING)) AS unique_customers,
    COUNT(DISTINCT SAFE_CAST(t0.PURE_ACCOUNT_NUMBER AS STRING)) AS unique_account_numbers,
    MIN(SAFE_CAST(t0.YEAR AS INT64)) AS min_year,
    MAX(SAFE_CAST(t0.YEAR AS INT64)) AS max_year,
    MIN(SAFE_CAST(t0.MONTH AS STRING)) AS min_month,
    MAX(SAFE_CAST(t0.MONTH AS STRING)) AS max_month,
    MIN(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS min_load_timestamp,
    MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS max_load_timestamp
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN (SELECT SUM(SAFE_CAST(t0.LGR AS BIGNUMERIC)) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0 WHERE SAFE_CAST(t0.LGR AS BIGNUMERIC) != 0.000000) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS check_total_revenue_positive,
    CASE
        WHEN (SELECT MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0) >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR) THEN 'PASS'
        ELSE 'FAIL'
    END AS check_data_freshness
LIMIT 1;","SELECT
    SAFE_CAST(t0.CURR_PV_FLAG AS STRING) AS curr_pv_flag,
    SAFE_CAST(t0.STLY_PV_FLAG AS STRING) AS stly_pv_flag,
    COUNT(1) AS record_count,
    SUM(CASE WHEN SAFE_CAST(t0.GM AS STRING) IS NULL THEN 1 ELSE 0 END) AS gm_null_count,
    SUM(CASE WHEN SAFE_CAST(t0.GSD AS STRING) IS NULL THEN 1 ELSE 0 END) AS gsd_null_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
GROUP BY
    curr_pv_flag,
    stly_pv_flag
ORDER BY
    record_count DESC
LIMIT 10;",43,7ada02b8-e93e-41d8-9a7e-05013ff81247
"SELECT t0.fiscal_year, t0.month_short_name, t0.os_level_6, SUM(t0.TM1_Net_Revenue) AS total_tm1_net_revenue, SUM(t0.Tableau_Actual) AS total_tableau_actual, SUM(t0.Tableau_Actual - t0.TM1_Net_Revenue) AS revenue_variance FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 GROUP BY 1, 2, 3 ORDER BY 1 DESC, 2 DESC, 3 DESC LIMIT 12;","SELECT COUNT(1) AS total_records, COUNT(DISTINCT t0.os_level_6) AS unique_os_level_6, COUNT(DISTINCT t0.publication_code) AS unique_publication_codes, MIN(t0.fiscal_year) AS min_fiscal_year, MAX(t0.fiscal_year) AS max_fiscal_year FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 LIMIT 1;","SELECT CASE WHEN SUM(t0.TM1_Net_Revenue) > 0 THEN 'PASS' ELSE 'FAIL' END AS tm1_revenue_check, CASE WHEN MAX(t0.fiscal_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 LIMIT 1;","SELECT CASE WHEN SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$') THEN 'Numeric Publication Code' ELSE 'Non-Numeric Publication Code' END AS publication_code_type, COUNT(1) AS record_count FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 GROUP BY 1 LIMIT 12;",44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
"SELECT
    SAFE_CAST(t0.draw_date AS DATE) AS draw_date,
    SAFE_CAST(t0.vendor AS STRING) AS vendor,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_rcti_files_check` AS t0
WHERE
    SAFE_CAST(t0.draw_date AS DATE) IS NOT NULL
GROUP BY
    1, 2
ORDER BY
    draw_date DESC, record_count DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.vendor AS STRING)) AS unique_vendors,
    COUNT(DISTINCT SAFE_CAST(t0.draw_date AS DATE)) AS unique_draw_dates,
    MIN(SAFE_CAST(t0.draw_date AS DATE)) AS min_draw_date,
    MAX(SAFE_CAST(t0.draw_date AS DATE)) AS max_draw_date
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_rcti_files_check` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN (SELECT SUM(SAFE_CAST(t0.rev AS BIGNUMERIC)) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_persisted_os_nulls_Check` AS t0) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS rev_positive_check,
    CASE
        WHEN (SELECT MAX(SAFE_CAST(t0.draw_date AS DATE)) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_rcti_files_check` AS t0) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS'
        ELSE 'FAIL'
    END AS rcti_data_freshness_check
LIMIT 1;","SELECT
    CASE
        WHEN SAFE_CAST(t0.rev AS BIGNUMERIC) IS NULL THEN 'Null_Rev'
        ELSE 'Non_Null_Rev'
    END AS rev_status,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_persisted_os_nulls_Check` AS t0
GROUP BY
    1
LIMIT 10;",45,712ca6fe-b491-4a01-af6e-1495fb3c7d12
"SELECT
    t0.financial_year,
    t0.financial_short_month,
    t0.portfolio_group_name_current,
    COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
    t0.financial_year,
    t0.financial_short_month,
    t0.portfolio_group_name_current
ORDER BY
    t0.financial_year DESC, t0.financial_short_month DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.sort_caption) AS unique_sort_captions,
    COUNT(DISTINCT t0.portfolio_conformed_name_current) AS unique_portfolio_names,
    MIN(SAFE_CAST(t0.publication_date AS DATE)) AS min_publication_date,
    MAX(SAFE_CAST(t0.publication_date AS DATE)) AS max_publication_date
FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS has_data_check,
    CASE WHEN MAX(SAFE_CAST(t0.publication_date AS DATE)) >= CURRENT_DATE() - INTERVAL 7 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
    t0.calendar_year,
    t0.financial_year,
    t0.portfolio_conformed_name_current,
    t0.portfolio_conformed_name_sync,
    COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
    t0.calendar_year,
    t0.financial_year,
    t0.portfolio_conformed_name_current,
    t0.portfolio_conformed_name_sync
LIMIT 10;",47,d4d68a71-2b12-4caf-bc6b-96fc2d18a025
"SELECT
  t0c0d1.fy_year AS fiscal_year,
  t0c0d1.fy_week_of_year AS fiscal_week_of_year,
  t0c0d1.fy_week_of_year_name AS fiscal_week_name,
  SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(t0c0d1.calendar_date AS DATETIME), ISOWEEK) AS DATE) AS iso_week_start_date
FROM
  `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
GROUP BY
  fiscal_year,
  fiscal_week_of_year,
  fiscal_week_name,
  iso_week_start_date
ORDER BY
  fiscal_year DESC, fiscal_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0c0d1.fy_year AS STRING)) AS unique_fiscal_years,
  COUNT(DISTINCT SAFE_CAST(t0c0d1.fy_week_of_year AS STRING)) AS unique_fiscal_weeks_of_year,
  MIN(SAFE_CAST(t0c0d1.calendar_date AS DATE)) AS min_calendar_date,
  MAX(SAFE_CAST(t0c0d1.calendar_date AS DATE)) AS max_calendar_date
FROM
  `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS has_data_check,
  CASE WHEN MAX(SAFE_CAST(t0c0d1.calendar_date AS DATE)) >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
LIMIT 1;","SELECT
  SAFE_CAST(t0c0d1.fy_year AS STRING) AS fiscal_year,
  COUNT(*) AS records_count
FROM
  `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
GROUP BY
  fiscal_year
ORDER BY
  fiscal_year DESC
LIMIT 5;",48,a1c16d3b-d19a-4abd-b96c-7a87580815db
"SELECT t0.fy_year_week_number, t0.revenue_type, SUM(t0.amount) AS total_amount FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 WHERE SAFE_CAST(FLOOR(SAFE_DIVIDE(t0.fy_year_week_number, 100)) AS INT64) = EXTRACT(YEAR FROM CURRENT_DATE()) GROUP BY t0.fy_year_week_number, t0.revenue_type ORDER BY t0.fy_year_week_number DESC LIMIT 12","SELECT COUNT(*) AS total_rows, COUNT(DISTINCT t0.revenue_type) AS unique_revenue_types, COUNT(DISTINCT t0.fy_year_week_number) AS unique_fiscal_weeks, MIN(t0.fy_year_week_number) AS min_fiscal_week, MAX(t0.fy_year_week_number) AS max_fiscal_week FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 LIMIT 1","SELECT CASE WHEN SUM(t0.amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS amount_check, CASE WHEN MAX(SAFE_CAST(FLOOR(SAFE_DIVIDE(t0.fy_year_week_number, 100)) AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS' ELSE 'FAIL' END AS freshness_check FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 LIMIT 1","SELECT 'Amount' AS selected_metric_type, COUNTIF('Amount' = 'Amount') AS count_of_amount_selections, 'Volume' AS alternative_metric_type, COUNTIF('Amount' = 'Volume') AS count_of_volume_selections FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 LIMIT 1",49,c32d96e5-38f4-48a8-9b70-3d89a83f03aa
"SELECT
  t0.fy_year,
  t0.fy_month_of_year,
  t0.masthead_group,
  SUM(t0.BudgetEarnedAmount) AS total_budget_earned_amount,
  SUM(t0.EarnedAmount) AS total_earned_amount,
  SUM(t0.ClosingBase) AS total_closing_base,
  SUM(t0.OpeningBase) AS total_opening_base
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
WHERE t0.masthead_group != 'Discontinued'
  AND t0.finance_recognition = 'Digital Recognition'
GROUP BY 1, 2, 3
ORDER BY 1 DESC, 2 DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.fy_year AS STRING)) AS unique_fiscal_years,
  COUNT(DISTINCT t0.masthead_group) AS unique_masthead_groups,
  COUNT(DISTINCT t0.finance_recognition) AS unique_finance_recognitions,
  MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fiscal_year,
  MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fiscal_year
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.BudgetEarnedAmount) > 0 THEN 'PASS' ELSE 'FAIL' END AS budget_earned_amount_check,
  CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS recent_data_check,
  CASE WHEN COUNT(DISTINCT t0.masthead_group) > 1 THEN 'PASS' ELSE 'FAIL' END AS multiple_masthead_groups_check
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
WHERE t0.finance_recognition = 'Digital Recognition'
LIMIT 1;","SELECT
  t0.finance_recognition,
  COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
GROUP BY t0.finance_recognition
ORDER BY record_count DESC
LIMIT 5;",51,bb49fa78-5abe-4e68-a9c1-8172a832e724
"SELECT
    SAFE_CAST(t0.scenario AS STRING) AS scenario,
    COUNT(1) AS records_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
GROUP BY
    scenario
ORDER BY
    records_count DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.scenario AS STRING)) AS distinct_scenarios
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS data_exists_check,
    'N/A' AS freshness_check -- No date column identified for freshness check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
    SAFE_CAST(t0.scenario AS STRING) AS scenario_type,
    COUNT(1) AS count_of_records
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
GROUP BY
    scenario_type
ORDER BY
    count_of_records DESC
LIMIT 5;",52,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3
