primary_analysis_sql,structure_sql,validation_sql,business_rules_sql,response_id,dashboard_id
"SELECT
  t0.masthead,
  t0.rate_plan_code,
  COUNT(1) AS unearned_revenue_record_count,
  SUM(t0.should_be_allocated_to_revenue_gst_exclusive) AS total_allocated_revenue_gst_exclusive
FROM (
  WITH
    core AS (
      SELECT
        *,
        greatest(allocation_start_date, DATE '2024-01-01') AS week_prorata_allocation_start,
        least(allocation_end_date, DATE '2024-01-07') AS week_prorata_allocation_end
      FROM
        `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
      WHERE
        DATE '2024-01-01' BETWEEN allocation_start_date AND allocation_end_date
        OR (allocation_start_date BETWEEN DATE '2024-01-01' AND DATE '2024-01-07')
        OR (allocation_end_date BETWEEN DATE '2024-01-01' AND DATE '2024-01-07')
    ),
    core_2 AS (
      SELECT
        * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year, fy_year, allocation_end_date_ext),
        (date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days * payment_base_amount AS should_be_allocated_to_revenue_gst_inclusive,
        ((date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days * payment_base_amount) / 1.1 AS should_be_allocated_to_revenue_gst_exclusive
      FROM
        core
    )
  SELECT
    * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year, fy_year, allocation_end_date_ext)
  FROM
    core_2
) AS t0
GROUP BY
  t0.masthead,
  t0.rate_plan_code
ORDER BY
  unearned_revenue_record_count DESC
LIMIT 12","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(subscription_id_src AS STRING)) AS unique_subscriptions,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS unique_subscribers,
  MIN(allocation_start_date) AS min_allocation_start_date,
  MAX(allocation_end_date) AS max_allocation_end_date
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
LIMIT 12","SELECT
  CASE
    WHEN SUM(SAFE_CAST(t0.should_be_allocated_to_revenue_gst_exclusive AS BIGNUMERIC)) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS total_revenue_check,
  CASE
    WHEN MAX(t0.allocation_end_date) >= CURRENT_DATE() - INTERVAL 30 DAY THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM (
  WITH
    core AS (
      SELECT
        *,
        greatest(allocation_start_date, DATE '2024-01-01') AS week_prorata_allocation_start,
        least(allocation_end_date, DATE '2024-01-31') AS week_prorata_allocation_end
      FROM
        `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
      WHERE
        DATE '2024-01-01' BETWEEN allocation_start_date AND allocation_end_date
        OR (allocation_start_date BETWEEN DATE '2024-01-01' AND DATE '2024-01-31')
        OR (allocation_end_date BETWEEN DATE '2024-01-01' AND DATE '2024-01-31')
    ),
    core_2 AS (
      SELECT
        * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year, fy_year, allocation_end_date_ext),
        (date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days * payment_base_amount AS should_be_allocated_to_revenue_gst_inclusive,
        ((date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days * payment_base_amount) / 1.1 AS should_be_allocated_to_revenue_gst_exclusive
      FROM
        core
    )
  SELECT
    allocation_end_date,
    should_be_allocated_to_revenue_gst_exclusive
  FROM
    core_2
) AS t0
LIMIT 1","SELECT
  subscription_status,
  COUNT(DISTINCT dw_subscription_id) AS unique_subscriptions_count
FROM (
  WITH
    contracts_in_scope_active_and_cancelled AS (
      SELECT DISTINCT
        dw_subscription_id,
        dw_rate_plan_id,
        term_period_name,
        'active' AS subscription_status,
        DATE(NULL) AS cancellation_date,
        masthead,
        rate_plan_code,
        offer_category_name,
        offer_category_group_name
      FROM
        `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
      WHERE
        offer_category_group_name = 'Contract'
        AND LOWER(offer_category_name) NOT LIKE '%upfront%'
        AND subscription_status_code = 'active'
      UNION ALL
      SELECT DISTINCT
        dw_subscription_id,
        dw_rate_plan_id,
        term_period_name,
        'cancelled' AS subscription_status,
        report_date AS cancellation_date,
        masthead,
        rate_plan_code,
        offer_category_name,
        offer_category_group_name
      FROM
        `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_movement`
      WHERE
        offer_category_group_name = 'Contract'
        AND LOWER(offer_category_name) NOT LIKE '%upfront%'
        AND subscription_movement_count_type = 'cancellation'
        AND report_date > '2022-07-01'
    )
  SELECT
    subscription_status,
    dw_subscription_id
  FROM
    contracts_in_scope_active_and_cancelled
  UNION ALL
  SELECT
    'inactive not cancelled - contract in the past' AS subscription_status,
    dw_subscription_id
  FROM
    (
      SELECT
        *,
        row_number() OVER (PARTITION BY dw_subscription_id, dw_rate_plan_id ORDER BY DATE(dw_effective_start_datetime) DESC) AS xrank
      FROM
        `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
    )
  WHERE
    offer_category_group_name = 'Contract'
    AND LOWER(offer_category_name) NOT LIKE '%upfront%'
    AND dw_subscription_id NOT IN (
      SELECT DISTINCT
        dw_subscription_id
      FROM
        contracts_in_scope_active_and_cancelled
    )
    AND xrank = 1
)
GROUP BY
  subscription_status
LIMIT 12",0,be4575e4-3850-46e2-9ba9-73a4393c5d2a
"SELECT
    t0.fy_year_week_number,
    t0.revenue_type,
    SUM(t0.amount) AS total_amount,
    SUM(t0.volume) AS total_volume
FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0
GROUP BY
    t0.fy_year_week_number,
    t0.revenue_type
ORDER BY
    t0.fy_year_week_number DESC, t0.revenue_type
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.fy_year_week_number AS STRING)) AS unique_fy_year_week_numbers,
    COUNT(DISTINCT t0.revenue_type) AS unique_revenue_types,
    MIN(t0.fy_year_week_number) AS min_fy_year_week_number,
    MAX(t0.fy_year_week_number) AS max_fy_year_week_number
FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(t0.amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS total_amount_check,
    CASE WHEN MAX(t0.fy_year_week_number) >= 202401 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0
LIMIT 1;","SELECT
    SAFE.LEFT(t0.revenue_type, 2) AS revenue_type_prefix,
    COUNT(1) AS record_count,
    SUM(t0.amount) AS total_amount_for_prefix
FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0
GROUP BY
    revenue_type_prefix
ORDER BY
    record_count DESC
LIMIT 5;",1,c32d96e5-38f4-48a8-9b70-3d89a83f03aa
"SELECT
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead,
  SUM(t0.Total_Revenue_B) AS Total_Revenue_Budget,
  SUM(t0.Gross_Adds) AS Gross_Adds,
  SUM(t0.Net_Adds) AS Net_Adds,
  SUM(t0.Total_Cancels_including_3rd_Party_B) AS Total_Cancels_Budget
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  t0.fy_year = 2026 AND t0.masthead IN ('TA', 'DT', 'HS', 'AA')
GROUP BY
  t0.fy_year,
  t0.fy_week_of_year,
  t0.masthead
ORDER BY
  t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(year_id AS STRING)) AS unique_years,
  COUNT(DISTINCT SAFE_CAST(week_id AS STRING)) AS unique_weeks,
  COUNT(DISTINCT masthead) AS unique_mastheads,
  MIN(SAFE_CAST(dw_partition_date AS DATE)) AS min_partition_date,
  MAX(SAFE_CAST(dw_partition_date AS DATE)) AS max_partition_date
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_consumer_acquisition_budget_forecast`
LIMIT 1;","SELECT
  CASE
    WHEN SUM(Total_Revenue_B) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS total_revenue_check,
  CASE
    WHEN MAX(fy_year) >= 2024 THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`
LIMIT 1;","SELECT
  CASE
    WHEN masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro'
    WHEN masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'Regionals'
    WHEN masthead = 'TA' THEN 'The Australian and Prestige'
    ELSE 'Other'
  END AS masthead_group,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`
GROUP BY
  masthead_group
ORDER BY
  record_count DESC
LIMIT 10;",2,28082293-c836-46f0-83f8-b5ce909cd051
"SELECT
  CASE WHEN SAFE_CAST(t0.adpoint_account_number AS STRING) IN ('13019', '52246', '18387') THEN 'CTR_2023_AFL Sports CTR_2023_Sydney Swans CTR_2023_GWS Giants' ELSE SAFE_CAST(t0.advertiser_name AS STRING) END AS grouped_advertiser_name,
  CASE WHEN SAFE_CAST(t0.adpoint_account_number AS STRING) IN ('13019', '52246', '18387') THEN 'ctr1' ELSE SAFE_CAST(t0.adpoint_account_number AS STRING) END AS grouped_adpoint_account_number,
  SUM(t0.gross_revenue_amount) AS total_gross_revenue,
  SUM(CASE WHEN SAFE_CAST(t0.revenue_type AS STRING) = 'Digital' THEN t0.gross_revenue_amount ELSE 0 END) AS digital_revenue,
  SUM(CASE WHEN SAFE_CAST(t0.revenue_type AS STRING) = 'Print' THEN t0.gross_revenue_amount ELSE 0 END) AS print_revenue,
  SUM(CASE WHEN SAFE_CAST(t0.relative_fy_year_offset AS INT64) = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS current_fy_revenue
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client_daily` AS t0
WHERE
  lower(SAFE_CAST(LEFT(t0.advertiser_name, 3) AS STRING)) = 'ctr'
  AND SAFE_CAST(t0.adpoint_account_number AS STRING) != '20696'
  AND NOT(SAFE_CAST(t0.cost_model_type AS STRING) = 'Guaranteed' AND SAFE_CAST(t0.revenue_group_name AS STRING) = 'Exchange')
  AND UPPER(IFNULL(SAFE_CAST(t0.revenue_transaction_status AS STRING), 'XXX')) IN ('BILLED', 'BOOKED')
  AND UPPER(IFNULL(SAFE_CAST(t0.style_name AS STRING), 'XXX')) <> 'ROP COMPOSITE'
  AND UPPER(IFNULL(SAFE_CAST(t0.source_publishing_division AS STRING), 'XXX')) <> 'MEDIUM RARE CONTENT AGENCY'
  AND (UPPER(IFNULL(SAFE_CAST(t0.publication_name AS STRING), 'XXX')) NOT LIKE 'SUDDENLY%' OR (UPPER(SAFE_CAST(t0.publication_name AS STRING)) LIKE 'SUDDENLY%' AND (SAFE_CAST(t0.account_number AS STRING) IN ('17114', '29172', '52809') OR SAFE_CAST(t0.adtype_name AS STRING) = '-')))
  AND (CASE WHEN SAFE_CAST(t0.adpoint_account_number AS STRING) IN (SELECT DISTINCT NMBS_T_Number FROM `ncau-data-newsquery-prd.sbx_dcp.contra_sheet_data` WHERE SAFE_CAST(Status AS STRING) = 'Closed') THEN 'Closed' ELSE 'Open' END) = 'Open'
GROUP BY
  grouped_advertiser_name,
  grouped_adpoint_account_number
ORDER BY
  total_gross_revenue DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(adpoint_account_number AS STRING)) AS unique_adpoint_accounts,
  COUNT(DISTINCT SAFE_CAST(advertiser_name AS STRING)) AS unique_advertisers,
  MIN(SAFE_CAST(financial_year AS INT64)) AS min_financial_year,
  MAX(SAFE_CAST(financial_year AS INT64)) AS max_financial_year,
  MIN(SAFE_CAST(calendar_year_month AS STRING)) AS min_calendar_year_month,
  MAX(SAFE_CAST(calendar_year_month AS STRING)) AS max_calendar_year_month
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client_daily`
LIMIT 1;","SELECT
  CASE WHEN SUM(SAFE_CAST(gross_revenue_amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS gross_revenue_positive_check,
  CASE WHEN MAX(SAFE_CAST(calendar_year_month AS STRING)) > FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client_daily`
LIMIT 1;","SELECT
  CASE WHEN SAFE_CAST(adpoint_account_number AS STRING) IN (SELECT DISTINCT NMBS_T_Number FROM `ncau-data-newsquery-prd.sbx_dcp.contra_sheet_data` WHERE SAFE_CAST(Status AS STRING) = 'Closed') THEN 'Closed' ELSE 'Open' END AS derived_status_asl,
  COUNT(1) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client_daily`
GROUP BY
  derived_status_asl
LIMIT 5;",3,b9dfd2f4-92fa-4f81-a5b1-17de880470f9
"SELECT
  SAFE_CAST(t0.fiscal_month_id AS STRING) AS fiscal_month_id,
  t0.service_model AS service_model,
  SUM(t0.revenue_served_after_exclusion) AS total_revenue_served_after_exclusion,
  SUM(t0.sales_cost) AS total_sales_cost,
  SUM(t0.total_2nd_margin_rev) AS total_2nd_margin_revenue,
  SUM(t0.total_other_margin_rev) AS total_other_margin_revenue,
  SUM(t0.revenue_served) AS total_revenue_served,
  AVG(t0.target_cost_to_serve_percentage) AS avg_target_cost_to_serve_percentage
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
WHERE
  (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING)
  AND t0.service_model != 'V1. Hybrid')
GROUP BY
  SAFE_CAST(t0.fiscal_month_id AS STRING),
  t0.service_model
ORDER BY
  SAFE_CAST(t0.fiscal_month_id AS STRING) DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT t0.service_model) AS unique_service_models,
  COUNT(DISTINCT SAFE_CAST(t0.fiscal_month_id AS STRING)) AS unique_fiscal_months,
  MIN(SAFE_CAST(t0.fiscal_month_id AS STRING)) AS min_fiscal_month_id,
  MAX(SAFE_CAST(t0.fiscal_month_id AS STRING)) AS max_fiscal_month_id
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.revenue_served_after_exclusion) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_check,
  CASE WHEN MAX(SAFE_CAST(t0.fiscal_month_id AS STRING)) IS NOT NULL THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
LIMIT 1;","SELECT
  t0.service_model,
  COUNT(*) AS record_count,
  SUM(CASE WHEN SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) THEN 1 ELSE 0 END) AS historical_records_count,
  SUM(CASE WHEN t0.service_model = 'V1. Hybrid' THEN 1 ELSE 0 END) AS v1_hybrid_records_count
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0
GROUP BY
  t0.service_model
ORDER BY
  t0.service_model
LIMIT 12;",4,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
"SELECT
    SAFE_CAST(t0.fiscal_week_id AS INT64) AS fiscal_week,
    SAFE_CAST(t0.L03_publication_name AS STRING) AS publication_name,
    SAFE_CAST(t0.scenario AS STRING) AS scenario,
    SUM(t0.earned_amount) AS total_earned_amount_unfiltered,
    SUM(CASE
        WHEN SAFE_CAST(t0.classification_level_1_description AS STRING) NOT IN ('Complimentary', 'Free Staff', 'Free Trials')
        AND SAFE_CAST(t0.classification_level_2_description AS STRING) NOT IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access')
        AND SAFE_CAST(t0.L03_publication_name AS STRING) = 'News Media Publishing'
        THEN t0.earned_amount
        ELSE 0
    END) AS total_earned_amount_filtered
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
GROUP BY
    1, 2, 3
ORDER BY
    fiscal_week DESC, publication_name, scenario
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.fiscal_week_id AS INT64)) AS unique_fiscal_weeks,
    MIN(SAFE_CAST(t0.fiscal_week_id AS INT64)) AS min_fiscal_week_id,
    MAX(SAFE_CAST(t0.fiscal_week_id AS INT64)) AS max_fiscal_week_id,
    COUNT(DISTINCT SAFE_CAST(t0.L03_publication_name AS STRING)) AS unique_publications,
    COUNT(DISTINCT SAFE_CAST(t0.gl_publication_code AS STRING)) AS unique_gl_publications,
    COUNT(DISTINCT SAFE_CAST(t0.scenario AS STRING)) AS unique_scenarios
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
LIMIT 1;","SELECT
    CASE WHEN MAX(SAFE_CAST(t0.fiscal_week_id AS INT64)) >= 202501 THEN 'PASS' ELSE 'FAIL' END AS latest_data_check,
    CASE WHEN SUM(CASE WHEN SAFE_CAST(t0.fiscal_week_id AS INT64) = (SELECT MAX(SAFE_CAST(fiscal_week_id AS INT64)) FROM `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct`) THEN t0.earned_amount ELSE 0 END) > 0 THEN 'PASS' ELSE 'FAIL' END AS earned_amount_positive_check
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
LIMIT 1;","SELECT
    SAFE_CAST(t0.classification_level_1_description AS STRING) AS cl1_desc,
    SAFE_CAST(t0.classification_level_2_description AS STRING) AS cl2_desc,
    COUNT(1) AS record_count,
    SUM(t0.earned_amount) AS total_earned_amount
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    SAFE_CAST(t0.classification_level_1_description AS STRING) IN ('Complimentary', 'Free Staff', 'Free Trials')
    OR SAFE_CAST(t0.classification_level_2_description AS STRING) IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access')
GROUP BY
    1, 2
ORDER BY
    record_count DESC
LIMIT 10;",5,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
"SELECT
    t0.CURR_PV_FLAG,
    t0.CUSTOMER_NAME,
    t0.FIRST_LAST,
    t0.MONTH,
    t0.PURE_ACCOUNT_NUMBER,
    t0.RELATED_PORTFOLIO,
    t0.STLY_PV_FLAG,
    t0.YEAR,
    CASE WHEN t0.GM IS NULL THEN t0.sales_region_name ELSE t0.GM END AS effective_gm_or_sales_region,
    CASE WHEN t0.GSD IS NULL THEN t0.sales_team_name ELSE t0.GSD END AS effective_gsd_or_sales_team,
    SUM(SAFE_CAST(t0.LGR AS BIGNUMERIC)) AS total_lgr,
    SUM(SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC)) AS total_relative_fy_month_offset
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
WHERE (t0.CURR_PV_FLAG = 'NPV' OR t0.STLY_PV_FLAG = 'NPV')
  AND SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC) >= 0
  AND SAFE_CAST(t0.LGR AS BIGNUMERIC) != 0.000000
GROUP BY
    t0.CURR_PV_FLAG,
    t0.CUSTOMER_NAME,
    t0.FIRST_LAST,
    t0.MONTH,
    t0.PURE_ACCOUNT_NUMBER,
    t0.RELATED_PORTFOLIO,
    t0.STLY_PV_FLAG,
    t0.YEAR,
    effective_gm_or_sales_region,
    effective_gsd_or_sales_team
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.PURE_ACCOUNT_NUMBER AS STRING)) AS unique_pure_account_numbers,
    COUNT(DISTINCT SAFE_CAST(t0.CUSTOMER_NAME AS STRING)) AS unique_customer_names,
    MIN(PARSE_DATE('%Y%m', CONCAT(SAFE_CAST(t0.YEAR AS STRING), LPAD(SAFE_CAST(t0.MONTH AS STRING), 2, '0')))) AS min_data_month,
    MAX(PARSE_DATE('%Y%m', CONCAT(SAFE_CAST(t0.YEAR AS STRING), LPAD(SAFE_CAST(t0.MONTH AS STRING), 2, '0')))) AS max_data_month
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(CASE WHEN SAFE_CAST(t0.LGR AS BIGNUMERIC) > 0 THEN 1 ELSE 0 END) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS has_positive_lgr_check,
    CASE
        WHEN MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 2 DAY) THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
LIMIT 1;","SELECT
    COUNT(CASE WHEN t0.GM IS NOT NULL THEN 1 END) AS gm_present_count,
    COUNT(CASE WHEN t0.GM IS NULL THEN 1 END) AS gm_fallback_to_sales_region_count,
    COUNT(CASE WHEN t0.GSD IS NOT NULL THEN 1 END) AS gsd_present_count,
    COUNT(CASE WHEN t0.GSD IS NULL THEN 1 END) AS gsd_fallback_to_sales_team_count,
    COUNT(*) AS total_records_evaluated
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
LIMIT 1;",6,7ada02b8-e93e-41d8-9a7e-05013ff81247
"SELECT
    t0.financial_year,
    SAFE_CAST(t0.financial_month AS FLOAT64) AS financial_month_num,
    t0.unified_publication_name,
    t0.fin_adtype_name,
    t0.revenue_type,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.revenue_type = 'DIGITAL'
    AND t0.financial_year IN ('2024', '2025')
    AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-')
    AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')
GROUP BY
    t0.financial_year,
    financial_month_num,
    t0.unified_publication_name,
    t0.fin_adtype_name,
    t0.revenue_type
ORDER BY
    t0.financial_year DESC, financial_month_num DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    APPROX_COUNT_DISTINCT(t0.unified_publication_name) AS unique_publications,
    APPROX_COUNT_DISTINCT(t0.booking_number) AS unique_bookings,
    APPROX_COUNT_DISTINCT(t0.fin_adtype_name) AS unique_ad_types,
    MIN(t0.data_load_datetime) AS min_data_load_datetime,
    MAX(t0.data_load_datetime) AS max_data_load_datetime
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
LIMIT 1;","SELECT
    CASE WHEN SUM(t0.gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_check,
    CASE WHEN MAX(t0.data_load_datetime) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
WHERE
    t0.revenue_type = 'DIGITAL'
    AND t0.financial_year IN ('2024', '2025')
    AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-')
    AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')
LIMIT 1;","SELECT
    CASE
        WHEN t0.unified_publication_name IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') THEN 'Excluded Publication'
        ELSE 'Included Publication'
    END AS publication_category,
    CASE
        WHEN t0.fin_adtype_name IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') THEN 'Excluded Ad Type'
        ELSE 'Included Ad Type'
    END AS ad_type_category,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
GROUP BY
    publication_category,
    ad_type_category
LIMIT 12;",7,4114bd43-f752-4628-9b6c-1941b3c0d962
"SELECT fy_year, fy_week_of_year, masthead, SUM(SAFE_CAST(Total_Revenue AS BIGNUMERIC)) AS total_revenue, SUM(SAFE_CAST(Total_Weekly_Sales AS BIGNUMERIC)) AS total_weekly_sales, SUM(SAFE_CAST(Total_Closing_Base AS BIGNUMERIC)) AS total_closing_base FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` GROUP BY 1, 2, 3 ORDER BY 1 DESC, 2 DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT fy_year) AS unique_years, COUNT(DISTINCT fy_week_of_year) AS unique_weeks_per_year, COUNT(DISTINCT masthead) AS unique_mastheads, MIN(fy_year) AS min_fy_year, MIN(fy_week_of_year) AS min_fy_week, MAX(fy_year) AS max_fy_year, MAX(fy_week_of_year) AS max_fy_week FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` LIMIT 1;","SELECT CASE WHEN SUM(SAFE_CAST(Total_Revenue AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS total_revenue_positive_check, CASE WHEN MAX(fy_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` LIMIT 1;","SELECT masthead, CASE WHEN masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro' WHEN masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT') THEN 'Regional' WHEN masthead = 'TA' THEN 'The Australian and Prestige' ELSE 'Other' END AS masthead_category, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` GROUP BY 1, 2 ORDER BY record_count DESC LIMIT 5;",8,5e3be025-a96e-4f5d-8172-dfef07e60f6d
"SELECT
    t0.publishing_division_group,
    SAFE_CAST(t0.financial_quarter AS INT64) AS financial_quarter,
    CASE WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home' WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul' WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape' WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate' WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge' WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine' ELSE 'Others' END AS publication_group,
    COUNT(1) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    1, 2, 3
ORDER BY
    record_count DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT t0.publishing_division_group) AS distinct_publishing_division_groups,
    COUNT(DISTINCT t0.unified_publication_name) AS distinct_unified_publication_names,
    MIN(t0.dw_asl_load_timestamp) AS min_load_timestamp,
    MAX(t0.dw_asl_load_timestamp) AS max_load_timestamp,
    MIN(t0.financial_quarter) AS min_financial_quarter,
    MAX(t0.financial_quarter) AS max_financial_quarter
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS has_data,
    CASE WHEN MAX(t0.dw_asl_load_timestamp) > DATETIME_SUB(CURRENT_DATETIME(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
    CASE WHEN COUNT(DISTINCT t0.unified_publication_name) > 10 THEN 'PASS' ELSE 'FAIL' END AS sufficient_publication_diversity
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home' WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul' WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape' WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate' WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge' WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine' ELSE 'Others' END AS publication_group,
    COUNT(DISTINCT t0.unified_publication_name) AS distinct_publications_in_group,
    COUNT(1) AS total_records_in_group
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    publication_group
ORDER BY
    total_records_in_group DESC
LIMIT 10;",9,dd0544cd-634f-43bd-a385-158c78dace66
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END AS masthead_region_grouping,
    CASE WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Consumer', 'Gift Receiver')) THEN 'B2C' WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Campus', 'Corporate', 'Corporate excluding IP', 'Corporate IP', 'IP Access', 'SMB')) THEN 'B2B' ELSE 'Others' END AS business_type,
    CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END AS subscription_type,
    SUM(t0.acquisition_count) AS total_acquisitions,
    SUM(t0.free_to_paid_conversion_count) AS total_free_to_paid_conversions,
    SUM(t0.reactivation_30day_acquisition_count) AS total_30day_reactivations,
    SUM(t0.switch_acquisition_count) AS total_switch_acquisitions
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
    CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
    AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END = 'Digital Subscriptions'
    AND t0.table_nm != 'op'
    AND CASE WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Consumer', 'Gift Receiver')) THEN 'B2C' WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Campus', 'Corporate', 'Corporate excluding IP', 'Corporate IP', 'IP Access', 'SMB')) THEN 'B2B' ELSE 'Others' END = 'B2C'
GROUP BY
    1, 2, 3, 4, 5
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.budfor_product) AS unique_budfor_products,
    COUNT(DISTINCT t0.masthead) AS unique_mastheads,
    COUNT(DISTINCT t0.classification_level_2) AS unique_classification_levels,
    MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
    MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
    MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
    MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(t0.acquisition_count) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS acquisition_count_check,
    CASE
        WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check,
    CASE
        WHEN COUNT(DISTINCT t0.table_nm) > 0 AND SUM(CASE WHEN t0.table_nm = 'op' THEN 1 ELSE 0 END) = 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS table_nm_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
    SAFE_CAST(t0.fy_year AS INT64) = EXTRACT(YEAR FROM CURRENT_DATE())
LIMIT 1;","SELECT
    CASE
        WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Consumer', 'Gift Receiver')) THEN 'B2C'
        WHEN (CASE WHEN (t0.classification_level_2 IN ('App Subscribers', 'Bundles', 'Digital', 'DPE only', 'Essentials', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games', 'Press Reader', 'Print-only', 'Wine Club')) THEN 'Consumer' WHEN (t0.classification_level_2 IN ('Campus Activation', 'Campus Sub')) THEN 'Campus' WHEN (t0.classification_level_2 IN ('Corp Volume Print', 'Corporate Activation', 'Corporate Enterprise Sub', 'Corporate Enterprise Activation', 'Corporate Enterprise Activation - Amex', 'Corporate Enterprise Activation - Qantas', 'Corporate Sub', 'Corporate Volume Activation', 'Corporate Volume Sub', 'SMB Activation', 'SMB Digital')) THEN 'Corporate excluding IP' WHEN (t0.classification_level_2 = 'Free Staff') THEN 'Staff' WHEN (t0.classification_level_2 = 'IP Access') THEN 'Corporate IP' WHEN (t0.classification_level_2 IN ('Teachers Bundle', 'Teachers Digital', 'Teachers Print', 'University Bundle', 'University Digital')) THEN 'Education' ELSE NULL END IN ('Campus', 'Corporate', 'Corporate excluding IP', 'Corporate IP', 'IP Access', 'SMB')) THEN 'B2B'
        ELSE 'Others'
    END AS business_type,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
GROUP BY
    1
LIMIT 10;",10,0e05b4ce-cb33-488a-8537-b9e68a844e2e
"WITH
  base_data AS (
    WITH
      driver AS (
        SELECT
          subscriber_id_src,
          subscription_id_src,
          max(tran_date) AS latest_tran_date
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
        WHERE
          tran_date BETWEEN `current_date`() - 60 AND `current_date`()
        GROUP BY 1, 2
      )
    SELECT
      b.payment_gateway,
      b.subscriber_id_src,
      b.subscription_classification_type,
      b.tran_date
    FROM
      driver AS a
      JOIN
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
      ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
    WHERE
      b.latest_attempt_flag = 'Y'
  )
SELECT
  SAFE_CAST(payment_gateway AS STRING) AS payment_gateway,
  SAFE_CAST(subscription_classification_type AS STRING) AS subscription_type,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS distinct_subscribers,
  COUNT(DISTINCT CASE WHEN SAFE_CAST(subscription_classification_type AS STRING) = 'Standard Paid' THEN SAFE_CAST(subscriber_id_src AS STRING) END) AS distinct_subscribers_standard_paid,
  COUNT(DISTINCT CASE WHEN SAFE_CAST(subscription_classification_type AS STRING) = 'Standard Paid' AND (SAFE_CAST(payment_gateway AS STRING) NOT IN ('Stripe', 'B-Point', 'PayPal', 'Bpay', 'Australia Post') OR SAFE_CAST(payment_gateway AS STRING) IS NULL) THEN SAFE_CAST(subscriber_id_src AS STRING) END) AS distinct_subscribers_standard_paid_other_gateways
FROM
  base_data
GROUP BY
  1, 2
ORDER BY
  distinct_subscribers DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS unique_subscribers,
  COUNT(DISTINCT SAFE_CAST(subscription_id_src AS STRING)) AS unique_subscriptions,
  MIN(SAFE_CAST(tran_date AS DATE)) AS min_transaction_date,
  MAX(SAFE_CAST(tran_date AS DATE)) AS max_transaction_date
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
LIMIT 1;","WITH
  base_data AS (
    WITH
      driver AS (
        SELECT
          subscriber_id_src,
          subscription_id_src,
          max(tran_date) AS latest_tran_date
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
        WHERE
          tran_date BETWEEN `current_date`() - 60 AND `current_date`()
        GROUP BY 1, 2
      )
    SELECT
      b.subscriber_id_src,
      b.subscription_classification_type,
      b.tran_date
    FROM
      driver AS a
      JOIN
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
      ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
    WHERE
      b.latest_attempt_flag = 'Y'
  )
SELECT
  CASE WHEN COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) > 0 THEN 'PASS' ELSE 'FAIL' END AS standard_paid_subscribers_check,
  CASE WHEN MAX(SAFE_CAST(tran_date AS DATE)) >= `current_date`() - 2 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  base_data
WHERE
  SAFE_CAST(subscription_classification_type AS STRING) = 'Standard Paid'
LIMIT 1;","WITH
  base_data AS (
    WITH
      driver AS (
        SELECT
          subscriber_id_src,
          subscription_id_src,
          max(tran_date) AS latest_tran_date
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
        WHERE
          tran_date BETWEEN `current_date`() - 60 AND `current_date`()
        GROUP BY 1, 2
      )
    SELECT
      b.subscriber_id_src,
      b.subscription_classification_type,
      b.latest_attempt_flag
    FROM
      driver AS a
      JOIN
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
      ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  )
SELECT
  SAFE_CAST(subscription_classification_type AS STRING) AS subscription_type,
  SAFE_CAST(latest_attempt_flag AS STRING) AS latest_attempt_flag,
  COUNT(DISTINCT SAFE_CAST(subscriber_id_src AS STRING)) AS distinct_subscribers
FROM
  base_data
GROUP BY
  1, 2
ORDER BY
  distinct_subscribers DESC
LIMIT 10;",11,da5dcd47-2e80-45e8-94b8-5b71d81182f5
"WITH SourceData AS (
  SELECT
    t0.BudgetEarnedAmount AS BudgetEarnedAmount,
    t0.EarnedAmount AS EarnedAmount,
    t0.ForecastBudgetEarnedAmount AS ForecastBudgetEarnedAmount,
    t0.NFEarnedAmount AS NFEarnedAmount,
    t0.NYBudgetEarnedAmount AS NYBudgetEarnedAmount,
    t0.classification_level_1_description AS classification_level_1_description,
    t0.delivery_medium_type AS delivery_medium_type,
    t0.fy_month_of_year AS fy_month_of_year,
    t0.fy_quarter_of_year AS fy_quarter_of_year,
    t0.fy_week_of_year AS fy_week_of_year,
    t0.fy_year AS fy_year,
    t0.gl_publication_code AS gl_publication_code,
    t0.masthead_code AS masthead_code,
    t0.subscriber_has_email_flag AS subscriber_has_email_flag,
    t0.table_union_source AS table_union_source
  FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
),
DerivedColumns AS (
  SELECT
    BudgetEarnedAmount, EarnedAmount, ForecastBudgetEarnedAmount, NFEarnedAmount, NYBudgetEarnedAmount,
    fy_year, fy_week_of_year, table_union_source,
    -- clmn106_ (Masthead Name)
    CASE
      WHEN (gl_publication_code = '101' OR gl_publication_code = '100' OR masthead_code = 'TA') THEN 'The Australian'
      WHEN (gl_publication_code = '401' OR gl_publication_code = '402' OR gl_publication_code = '36' OR masthead_code = 'CM') THEN 'Courier Mail'
      WHEN (gl_publication_code = '110' OR gl_publication_code = '111' OR gl_publication_code = '32' OR masthead_code = 'DT') THEN 'Daily Telegraph'
      WHEN (gl_publication_code = '301' OR gl_publication_code = '303' OR gl_publication_code = '63' OR masthead_code = 'HS') THEN 'Herald Sun'
      WHEN (gl_publication_code = '500' OR gl_publication_code = '501' OR gl_publication_code = '560' OR masthead_code = 'AA') THEN 'The Advertiser'
      WHEN (gl_publication_code = '450' OR gl_publication_code = '460' OR masthead_code = 'CP') THEN 'Cairns Post'
      WHEN (gl_publication_code = '350' OR gl_publication_code = '351' OR masthead_code = 'GA') THEN 'Geelong'
      WHEN (gl_publication_code = '670' OR gl_publication_code = '685' OR masthead_code = 'GC') THEN 'Gold Coast'
      WHEN (gl_publication_code = '961' OR gl_publication_code = '963' OR gl_publication_code = '962' OR masthead_code = 'NT') THEN 'NT News'
      WHEN (gl_publication_code = '850' OR gl_publication_code = '851' OR gl_publication_code = '852' OR masthead_code = 'TM') THEN 'The Mercury'
      WHEN (gl_publication_code = '5053' OR gl_publication_code = '5253' OR masthead_code = 'TC') THEN 'Toowoomba'
      WHEN (gl_publication_code = '475' OR gl_publication_code = '490' OR masthead_code = 'TB') THEN 'Townsville'
      WHEN (gl_publication_code = '305' OR gl_publication_code = '307' OR masthead_code = 'WT') THEN 'Weekly Times'
      WHEN (gl_publication_code = '9001' OR masthead_code = 'CS') THEN 'Code'
      WHEN (gl_publication_code = '8821' OR gl_publication_code = 'Punters.com.au' OR masthead_code = 'PU') THEN 'Punters'
      WHEN (gl_publication_code = '8822' OR gl_publication_code = 'Racenet' OR masthead_code = 'RN') THEN 'Racenet'
      WHEN (gl_publication_code = '9653' OR masthead_code = 'SC') THEN 'Supercoach Plus'
      WHEN (gl_publication_code = '9600' OR masthead_code = 'TS') THEN 'Taste Online'
      WHEN (gl_publication_code = '9003' OR masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
      WHEN (gl_publication_code = '103' OR masthead_code = 'The Oz') THEN 'The Oz'
      WHEN (gl_publication_code = '9000' OR masthead_code = 'NW') THEN 'news.com.au'
      WHEN (gl_publication_code = '121') THEN 'Others'
      WHEN (gl_publication_code = '9002' OR masthead_code = 'BG') THEN 'Brain Games'
      WHEN (gl_publication_code = '9504' OR gl_publication_code = '9514' OR gl_publication_code = '9556' OR gl_publication_code = '9558' OR gl_publication_code = '9560' OR gl_publication_code = '9603' OR gl_publication_code = '9623') THEN 'Others'
      WHEN (gl_publication_code = '9644') THEN 'Suddenly'
      WHEN (gl_publication_code = '9903') THEN 'News Corporate'
      WHEN (gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
      ELSE NULL
    END AS clmn106_,
    -- clmn105_
    CASE
      WHEN (subscriber_has_email_flag = 'subsnapfact') THEN 'Y'
      WHEN (classification_level_1_description = 'Standard Paid' AND delivery_medium_type = 'Bundle') THEN subscriber_has_email_flag
      ELSE 'Y'
    END AS clmn105_,
    -- clmn109_ (Recognition Type)
    CASE
      WHEN (delivery_medium_type = 'Print') THEN 'Print Recognition'
      WHEN (
        CASE
          WHEN (subscriber_has_email_flag = 'subsnapfact') THEN 'Y'
          WHEN (classification_level_1_description = 'Standard Paid' AND delivery_medium_type = 'Bundle') THEN subscriber_has_email_flag
          ELSE 'Y'
        END
      ) = 'N' THEN 'Print Recognition'
      ELSE 'Digital Recognition'
    END AS clmn109_,
    -- clmn148_ (Masthead Group)
    CASE
      WHEN (gl_publication_code = 'The Australian') THEN 'The Australian'
      WHEN (masthead_code = 'CM' OR masthead_code = 'DT' OR masthead_code = 'HS' OR masthead_code = 'AA') THEN 'Metros'
      WHEN (masthead_code = 'CP' OR masthead_code = 'GA' OR masthead_code = 'GC' OR masthead_code = 'NT' OR masthead_code = 'TM' OR masthead_code = 'TC' OR masthead_code = 'TB') THEN 'Regionals'
      WHEN (gl_publication_code = 'Weekly Times') THEN 'Others'
      WHEN (masthead_code = 'SC' OR masthead_code = 'CS' OR masthead_code = 'TS' OR masthead_code = 'AP' OR masthead_code = 'RN' OR masthead_code = 'PU' OR masthead_code = 'Others') THEN 'Deep Niche Publications'
      ELSE 'Discontinued'
    END AS clmn148_
  FROM SourceData
)
SELECT
  clmn109_ AS recognition_type,
  clmn148_ AS masthead_group,
  SUM(
    CASE
      WHEN (fy_year = 2025 AND fy_week_of_year = 42 AND table_union_source = 'subsnapfact')
      THEN EarnedAmount
      ELSE NULL
    END
  ) AS sum_earned_amount_current_fy_wk42,
  SUM(
    CASE
      WHEN (fy_year = 2024 AND fy_week_of_year = 42 AND table_union_source = 'nfmanualhist')
      THEN NFEarnedAmount
      ELSE 0
    END
  ) AS sum_earned_amount_previous_fy_wk42,
  SUM(
    CASE
      WHEN (fy_year = 2025 AND fy_week_of_year = 42)
      THEN ForecastBudgetEarnedAmount
      ELSE NULL
    END
  ) AS sum_forecast_budget_earned_amount_current_fy_wk42
FROM DerivedColumns
WHERE
  clmn109_ = 'Digital Recognition'
  AND clmn148_ != 'Discontinued'
GROUP BY 1, 2
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.gl_publication_code AS STRING)) AS unique_publication_codes,
  COUNT(DISTINCT SAFE_CAST(t0.masthead_code AS STRING)) AS unique_masthead_codes,
  MIN(t0.fy_year) AS min_fy_year,
  MAX(t0.fy_year) AS max_fy_year,
  MIN(t0.fy_week_of_year) AS min_fy_week_of_year,
  MAX(t0.fy_week_of_year) AS max_fy_week_of_year
FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.EarnedAmount) > 0 THEN 'PASS' ELSE 'FAIL' END AS earned_amount_positive_check,
  CASE WHEN MAX(t0.fy_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","WITH SourceData AS (
  SELECT
    t0.gl_publication_code AS gl_publication_code,
    t0.masthead_code AS masthead_code,
    t0.classification_level_1_description AS classification_level_1_description,
    t0.delivery_medium_type AS delivery_medium_type,
    t0.subscriber_has_email_flag AS subscriber_has_email_flag
  FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
),
DerivedColumns AS (
  SELECT
    -- clmn106_ (Masthead Name)
    CASE
      WHEN (gl_publication_code = '101' OR gl_publication_code = '100' OR masthead_code = 'TA') THEN 'The Australian'
      WHEN (gl_publication_code = '401' OR gl_publication_code = '402' OR gl_publication_code = '36' OR masthead_code = 'CM') THEN 'Courier Mail'
      WHEN (gl_publication_code = '110' OR gl_publication_code = '111' OR gl_publication_code = '32' OR masthead_code = 'DT') THEN 'Daily Telegraph'
      WHEN (gl_publication_code = '301' OR gl_publication_code = '303' OR gl_publication_code = '63' OR masthead_code = 'HS') THEN 'Herald Sun'
      WHEN (gl_publication_code = '500' OR gl_publication_code = '501' OR gl_publication_code = '560' OR masthead_code = 'AA') THEN 'The Advertiser'
      WHEN (gl_publication_code = '450' OR gl_publication_code = '460' OR masthead_code = 'CP') THEN 'Cairns Post'
      WHEN (gl_publication_code = '350' OR gl_publication_code = '351' OR masthead_code = 'GA') THEN 'Geelong'
      WHEN (gl_publication_code = '670' OR gl_publication_code = '685' OR masthead_code = 'GC') THEN 'Gold Coast'
      WHEN (gl_publication_code = '961' OR gl_publication_code = '963' OR gl_publication_code = '962' OR masthead_code = 'NT') THEN 'NT News'
      WHEN (gl_publication_code = '850' OR gl_publication_code = '851' OR gl_publication_code = '852' OR masthead_code = 'TM') THEN 'The Mercury'
      WHEN (gl_publication_code = '5053' OR gl_publication_code = '5253' OR masthead_code = 'TC') THEN 'Toowoomba'
      WHEN (gl_publication_code = '475' OR gl_publication_code = '490' OR masthead_code = 'TB') THEN 'Townsville'
      WHEN (gl_publication_code = '305' OR gl_publication_code = '307' OR masthead_code = 'WT') THEN 'Weekly Times'
      WHEN (gl_publication_code = '9001' OR masthead_code = 'CS') THEN 'Code'
      WHEN (gl_publication_code = '8821' OR gl_publication_code = 'Punters.com.au' OR masthead_code = 'PU') THEN 'Punters'
      WHEN (gl_publication_code = '8822' OR gl_publication_code = 'Racenet' OR masthead_code = 'RN') THEN 'Racenet'
      WHEN (gl_publication_code = '9653' OR masthead_code = 'SC') THEN 'Supercoach Plus'
      WHEN (gl_publication_code = '9600' OR masthead_code = 'TS') THEN 'Taste Online'
      WHEN (gl_publication_code = '9003' OR masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
      WHEN (gl_publication_code = '103' OR masthead_code = 'The Oz') THEN 'The Oz'
      WHEN (gl_publication_code = '9000' OR masthead_code = 'NW') THEN 'news.com.au'
      WHEN (gl_publication_code = '121') THEN 'Others'
      WHEN (gl_publication_code = '9002' OR masthead_code = 'BG') THEN 'Brain Games'
      WHEN (gl_publication_code = '9504' OR gl_publication_code = '9514' OR gl_publication_code = '9556' OR gl_publication_code = '9558' OR gl_publication_code = '9560' OR gl_publication_code = '9603' OR gl_publication_code = '9623') THEN 'Others'
      WHEN (gl_publication_code = '9644') THEN 'Suddenly'
      WHEN (gl_publication_code = '9903') THEN 'News Corporate'
      WHEN (gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
      ELSE NULL
    END AS clmn106_,
    -- clmn148_ (Masthead Group)
    CASE
      WHEN (gl_publication_code = 'The Australian') THEN 'The Australian'
      WHEN (masthead_code = 'CM' OR masthead_code = 'DT' OR masthead_code = 'HS' OR masthead_code = 'AA') THEN 'Metros'
      WHEN (masthead_code = 'CP' OR masthead_code = 'GA' OR masthead_code = 'GC' OR masthead_code = 'NT' OR masthead_code = 'TM' OR masthead_code = 'TC' OR masthead_code = 'TB') THEN 'Regionals'
      WHEN (gl_publication_code = 'Weekly Times') THEN 'Others'
      WHEN (masthead_code = 'SC' OR masthead_code = 'CS' OR masthead_code = 'TS' OR masthead_code = 'AP' OR masthead_code = 'RN' OR masthead_code = 'PU' OR masthead_code = 'Others') THEN 'Deep Niche Publications'
      ELSE 'Discontinued'
    END AS clmn148_,
    -- clmn149_ (Masthead Category)
    CASE
      WHEN (masthead_code = 'TA' OR gl_publication_code = '9556' OR gl_publication_code = '9560') THEN 'The Australian and Prestige'
      WHEN (masthead_code = 'CM' OR masthead_code = 'DT' OR masthead_code = 'HS' OR masthead_code = 'AA' OR masthead_code = 'CP' OR masthead_code = 'GA' OR masthead_code = 'GC' OR masthead_code = 'NT' OR masthead_code = 'TM' OR masthead_code = 'TC' OR masthead_code = 'TB' OR masthead_code = 'WT' OR masthead_code = 'CS' OR masthead_code = 'AP' OR gl_publication_code = '121' OR gl_publication_code = '9504') THEN 'States & Community'
      WHEN (masthead_code = 'RN' OR masthead_code = 'PU') THEN 'Commercial Content'
      WHEN (masthead_code = 'TS' OR gl_publication_code = '9514') THEN 'Free & Lifestyle'
      ELSE 'Discontinued'
    END AS clmn149_
  FROM SourceData
)
SELECT
  clmn148_ AS masthead_group,
  clmn149_ AS masthead_category,
  COUNT(*) AS record_count
FROM DerivedColumns
GROUP BY 1, 2
ORDER BY record_count DESC
LIMIT 10;",12,449b9707-f939-42e1-b6f5-11998369f473
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    SUM(t0.Total_Revenue) AS Total_Revenue,
    SUM(t0.Total_Closing_Base) AS Total_Closing_Base,
    SUM(t0.Total_Weekly_Sales) AS Total_Weekly_Sales,
    SUM(t0.Failed_Payment_Volume) AS Failed_Payment_Volume
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
WHERE
    (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus'
          WHEN (t0.masthead = 'CS') THEN 'Code Sports'
          WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X'
          WHEN (t0.masthead = 'TS') THEN 'Taste Online'
          WHEN (t0.masthead = 'PU') THEN 'Punters'
          WHEN (t0.masthead = 'RN') THEN 'Racenet'
          WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport'
          ELSE NULL END) = 'SuperCoach Plus'
GROUP BY
    t0.fy_year,
    t0.fy_week_of_year
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.fy_year AS STRING)) AS unique_fy_years,
    MIN(SAFE_CAST(t0.fy_year AS STRING) || '-' || LPAD(SAFE_CAST(t0.fy_week_of_year AS STRING), 2, '0')) AS min_fy_period,
    MAX(SAFE_CAST(t0.fy_year AS STRING) || '-' || LPAD(SAFE_CAST(t0.fy_week_of_year AS STRING), 2, '0')) AS max_fy_period,
    COUNT(DISTINCT t0.masthead) AS unique_mastheads
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(t0.Total_Revenue) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS total_revenue_check,
    CASE
        WHEN MAX(t0.fy_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
LIMIT 1;","SELECT
    (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus'
          WHEN (t0.masthead = 'CS') THEN 'Code Sports'
          WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X'
          WHEN (t0.masthead = 'TS') THEN 'Taste Online'
          WHEN (t0.masthead = 'PU') THEN 'Punters'
          WHEN (t0.masthead = 'RN') THEN 'Racenet'
          WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport'
          ELSE 'Other' END) AS masthead_category,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0
GROUP BY
    masthead_category
ORDER BY
    record_count DESC
LIMIT 5;",13,61cc5171-703d-44b5-acd7-e9db7cf81778
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead_group,
    SUM(t0.EarnedAmount) AS total_earned_amount,
    SUM(t0.BudgetEarnedAmount) AS total_budget_earned_amount,
    SUM(t0.ClosingBase) AS total_closing_base,
    SUM(t0.OpeningBase) AS total_opening_base
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
WHERE
    t0.masthead_group != 'Discontinued'
    AND t0.finance_recognition = 'Digital Recognition'
GROUP BY
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead_group
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.fy_year AS STRING)) AS unique_fy_years,
    COUNT(DISTINCT SAFE_CAST(t0.masthead_group AS STRING)) AS unique_masthead_groups,
    MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
    MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
    MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
    MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year,
    MIN(SAFE_CAST(t0.fy_month_of_year AS INT64)) AS min_fy_month_of_year,
    MAX(SAFE_CAST(t0.fy_month_of_year AS INT64)) AS max_fy_month_of_year,
    MIN(SAFE_CAST(t0.fy_quarter_of_year AS INT64)) AS min_fy_quarter_of_year,
    MAX(SAFE_CAST(t0.fy_quarter_of_year AS INT64)) AS max_fy_quarter_of_year
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS check_record_count,
    CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS check_recent_data,
    CASE WHEN SUM(t0.EarnedAmount) > 0 THEN 'PASS' ELSE 'FAIL' END AS check_positive_earned_amount
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
WHERE
    t0.finance_recognition = 'Digital Recognition'
LIMIT 1;","SELECT
    t0.finance_recognition AS category_type,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
GROUP BY
    t0.finance_recognition
UNION ALL
SELECT
    t0.masthead_group AS category_type,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
GROUP BY
    t0.masthead_group
LIMIT 12;",14,bb49fa78-5abe-4e68-a9c1-8172a832e724
"SELECT
  t0c0d1.fy_year,
  t0c0d1.fy_week_of_year,
  t0c0d1.fy_week_of_year_name,
  SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(t0c0d1.calendar_date AS DATETIME), ISOWEEK) AS DATE) AS iso_week_start_date,
  COUNT(*) AS record_count
FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
GROUP BY 1, 2, 3, 4
ORDER BY 1 DESC, 2 DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0c0d1.fy_year AS STRING)) AS unique_fiscal_years,
  COUNT(DISTINCT SAFE_CAST(t0c0d1.fy_week_of_year AS STRING)) AS unique_fiscal_weeks,
  MIN(SAFE_CAST(t0c0d1.calendar_date AS DATE)) AS min_calendar_date,
  MAX(SAFE_CAST(t0c0d1.calendar_date AS DATE)) AS max_calendar_date
FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS has_data_check,
  CASE WHEN MAX(SAFE_CAST(t0c0d1.calendar_date AS DATE)) >= CURRENT_DATE() - INTERVAL 365 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
LIMIT 1;","SELECT
  t0c0d1.fy_year,
  t0c0d1.fy_week_of_year_name,
  COUNT(*) AS records_in_week
FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1
GROUP BY 1, 2
ORDER BY 1 DESC, 3 DESC
LIMIT 10;",15,a1c16d3b-d19a-4abd-b96c-7a87580815db
"SELECT
    t0.financial_year,
    t0.financial_quarter,
    t0.product_group,
    t0.publishing_division_parent,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue,
    SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS current_year_gross_revenue,
    SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) AS previous_year_gross_revenue,
    SUM(t0.pub_lgb) AS total_pub_lgb
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    t0.financial_year,
    t0.financial_quarter,
    t0.product_group,
    t0.publishing_division_parent
ORDER BY
    t0.financial_year DESC, t0.financial_quarter DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT t0.financial_year) AS unique_financial_years,
    COUNT(DISTINCT t0.financial_quarter) AS unique_financial_quarters,
    COUNT(DISTINCT t0.product_group) AS unique_product_groups,
    COUNT(DISTINCT t0.publishing_division_parent) AS unique_publishing_divisions,
    MIN(t0.financial_year) AS min_financial_year,
    MAX(t0.financial_year) AS max_financial_year
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(SAFE_CAST(t0.gross_revenue_amount AS BIGNUMERIC)) > 0 THEN 'PASS: Gross Revenue is positive'
        ELSE 'FAIL: Gross Revenue is not positive'
    END AS gross_revenue_check,
    CASE
        WHEN MAX(t0.financial_year) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS: Data is recent (within last fiscal year)'
        ELSE 'FAIL: Data is not recent'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
LIMIT 1;","SELECT
    t0.relative_fy_year_offset,
    COUNT(*) AS record_count,
    SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0
GROUP BY
    t0.relative_fy_year_offset
ORDER BY
    t0.relative_fy_year_offset
LIMIT 12;",16,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
"SELECT
    t0.source_system_name,
    t0.fiscal_week_id,
    SAFE_CAST(DATETIME_TRUNC(t0.dw_prstn_load_datetime, DAY) AS DATE) AS load_date,
    SUM(t0.records_count) AS total_records_count,
    COUNT(DISTINCT t0.scenario) AS distinct_scenarios
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
WHERE
    t0.dw_prstn_load_datetime >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)
GROUP BY
    1, 2, 3
ORDER BY
    load_date DESC, t0.source_system_name
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT t0.fiscal_week_id) AS unique_fiscal_weeks,
    COUNT(DISTINCT t0.source_system_name) AS unique_source_systems,
    MIN(t0.dw_prstn_load_datetime) AS min_load_datetime,
    MAX(t0.dw_prstn_load_datetime) AS max_load_datetime
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
LIMIT 1;","SELECT
    CASE WHEN MAX(t0.dw_prstn_load_datetime) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
    CASE WHEN SUM(t0.records_count) > 0 THEN 'PASS' ELSE 'FAIL' END AS records_count_positive_check
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
WHERE
    t0.dw_prstn_load_datetime >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)
LIMIT 1;","SELECT
    t0.source_system_name,
    COUNT(1) AS record_count
FROM
    `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0
WHERE
    t0.dw_prstn_load_datetime >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)
GROUP BY
    t0.source_system_name
ORDER BY
    record_count DESC
LIMIT 5;",17,2dfb1b58-42eb-44cb-b550-66469ae7df3c
"SELECT
  COUNT(t0.table_id) AS total_tables_monitored,
  COUNT(CASE WHEN t0.alert_status_final IN (0, -1) THEN t0.table_id ELSE NULL END) AS tables_ok_or_excluded
FROM (
  WITH
    table_list AS (
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
    ),
    table_update_list AS (
      SELECT
        dataset_id,
        table_id,
        datetime(timestamp_millis(last_modified_time), ""Australia/Sydney"") AS last_update_time,
        row_count,
        size_bytes / power(2, 30) AS size_gb,
        table_list.update_frequency
      FROM
        `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
        JOIN
        table_list
        ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
    ),
    load_stats AS (
      SELECT
        dataset_id,
        table_id,
        last_update_time,
        row_count,
        size_gb,
        update_frequency,
        `current_datetime`(""Australia/Sydney"") AS time_now,
        datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
        `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
      FROM
        table_update_list
    ),
    alert_sts AS (
      SELECT
        *,
        CASE
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
          WHEN row_count = 0 THEN -3
          ELSE 0
        END AS alert_status
      FROM
        load_stats
    )
  SELECT
    table_id,
    CASE
      WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
      ELSE alert_status
    END AS alert_status_final
  FROM
    alert_sts
) AS t0
LIMIT 1","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(table_id AS STRING)) AS unique_table_ids,
  MIN(SAFE_CAST(timestamp_millis(last_modified_time) AS DATETIME)) AS min_last_modified_time,
  MAX(SAFE_CAST(timestamp_millis(last_modified_time) AS DATETIME)) AS max_last_modified_time
FROM
  `your-gcp-project-id.bdm_finance.__TABLES__`
LIMIT 1","SELECT
  CASE
    WHEN COUNT(t0.table_id) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS check_total_tables_positive,
  CASE
    WHEN COUNT(CASE WHEN t0.alert_status_final IN (0, -1) THEN t0.table_id ELSE NULL END) <= COUNT(t0.table_id) THEN 'PASS'
    ELSE 'FAIL'
  END AS check_ok_or_excluded_less_than_total,
  CASE
    WHEN MAX(t0.last_update_time) >= DATETIME_SUB(CURRENT_DATETIME(""Australia/Sydney""), INTERVAL 24 HOUR) THEN 'PASS'
    ELSE 'FAIL'
  END AS check_data_freshness
FROM (
  WITH
    table_list AS (
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
    ),
    table_update_list AS (
      SELECT
        dataset_id,
        table_id,
        datetime(timestamp_millis(last_modified_time), ""Australia/Sydney"") AS last_update_time,
        row_count,
        size_bytes / power(2, 30) AS size_gb,
        table_list.update_frequency
      FROM
        `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
        JOIN
        table_list
        ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
    ),
    load_stats AS (
      SELECT
        dataset_id,
        table_id,
        last_update_time,
        row_count,
        size_gb,
        update_frequency,
        `current_datetime`(""Australia/Sydney"") AS time_now,
        datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
        `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
      FROM
        table_update_list
    ),
    alert_sts AS (
      SELECT
        *,
        CASE
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
          WHEN row_count = 0 THEN -3
          ELSE 0
        END AS alert_status
      FROM
        load_stats
    )
  SELECT
    table_id,
    last_update_time,
    CASE
      WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
      ELSE alert_status
    END AS alert_status_final
  FROM
    alert_sts
) AS t0
LIMIT 1","SELECT
  SAFE_CAST(t0.alert_status_final AS STRING) AS alert_status_code,
  COUNT(t0.table_id) AS count_of_tables
FROM (
  WITH
    table_list AS (
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
      SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
      SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
      SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
      SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
      SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
    ),
    table_update_list AS (
      SELECT
        dataset_id,
        table_id,
        datetime(timestamp_millis(last_modified_time), ""Australia/Sydney"") AS last_update_time,
        row_count,
        size_bytes / power(2, 30) AS size_gb,
        table_list.update_frequency
      FROM
        `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
        JOIN
        table_list
        ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
    ),
    load_stats AS (
      SELECT
        dataset_id,
        table_id,
        last_update_time,
        row_count,
        size_gb,
        update_frequency,
        `current_datetime`(""Australia/Sydney"") AS time_now,
        datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
        `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
      FROM
        table_update_list
    ),
    alert_sts AS (
      SELECT
        *,
        CASE
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
          WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
          WHEN row_count = 0 THEN -3
          ELSE 0
        END AS alert_status
      FROM
        load_stats
    )
  SELECT
    table_id,
    CASE
      WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
      ELSE alert_status
    END AS alert_status_final
  FROM
    alert_sts
) AS t0
GROUP BY
  alert_status_code
ORDER BY
  alert_status_code
LIMIT 12",18,8f848270-688f-4455-82a6-3bc9a7d39cce
"SELECT
  financial_year,
  calendar_year,
  revenue_type,
  publishing_division,
  SUM(agency_commission_amount) AS total_agency_commission,
  SUM(gross_revenue_ex_adj_amount + adjustment_amount) AS total_revenue
FROM
  `asl_advertising.v_adsales_revenue_client`
WHERE
  reporting_date >= '2022-01-01'
  AND record_type_code = 'STD'
  AND source_system_code = 'ADPT'
  AND revenue_transaction_status IN ('Billed', 'Booked')
  AND revenue_type = 'Digital'
  AND financial_year BETWEEN '2023' AND '2026'
GROUP BY
  financial_year,
  calendar_year,
  revenue_type,
  publishing_division
ORDER BY
  financial_year DESC, calendar_year DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT booking_line_number) AS unique_booking_lines,
  COUNT(DISTINCT booking_number) AS unique_bookings,
  COUNT(DISTINCT advertiser_name) AS unique_advertisers,
  COUNT(DISTINCT agency_name) AS unique_agencies,
  MIN(reporting_date) AS min_reporting_date,
  MAX(reporting_date) AS max_reporting_date
FROM
  `asl_advertising.v_adsales_revenue_client`
LIMIT 1;","SELECT
  CASE WHEN MAX(reporting_date) >= CURRENT_DATE() - INTERVAL 30 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
  CASE WHEN SUM(gross_revenue_ex_adj_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_positive_check
FROM
  `asl_advertising.v_adsales_revenue_client`
WHERE
  reporting_date = (SELECT MAX(reporting_date) FROM `asl_advertising.v_adsales_revenue_client`)
LIMIT 1;","SELECT
  revenue_transaction_status,
  COUNT(1) AS record_count
FROM
  `asl_advertising.v_adsales_revenue_client`
WHERE
  reporting_date >= '2022-01-01'
  AND record_type_code = 'STD'
  AND source_system_code = 'ADPT'
GROUP BY
  revenue_transaction_status
ORDER BY
  record_count DESC
LIMIT 5;",19,5515c1c6-18fe-449d-b621-d47631023320
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead_group,
    t0.delivery_medium_type,
    SUM(t0.ClosingBase) AS total_closing_base,
    SUM(t0.EarnedAmount) AS total_earned_amount,
    SUM(t0.BudgetClosingBase) AS total_budget_closing_base
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
WHERE
    t0.fy_year = 2025
GROUP BY
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead_group,
    t0.delivery_medium_type
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
    'asl_finance_derived.digital_subscriptions' AS table_name,
    COUNT(*) AS total_rows,
    COUNT(DISTINCT t0.gl_publication_code) AS distinct_publication_codes,
    COUNT(DISTINCT t0.masthead_code) AS distinct_masthead_codes,
    COUNT(DISTINCT t0.delivery_medium_type) AS distinct_delivery_types
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
UNION ALL
SELECT
    'sbx_fda_corefin.dt_digital_subscriptions' AS table_name,
    COUNT(*) AS total_rows,
    COUNT(DISTINCT t0.fy_year) AS distinct_fiscal_years,
    MIN(t0.fy_year) AS min_fiscal_year,
    MAX(t0.fy_year) AS max_fiscal_year
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
LIMIT 12;","SELECT
    CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS row_count_check,
    CASE WHEN MAX(t0.fy_year) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
    CASE WHEN SUM(t0.ClosingBase) > 0 THEN 'PASS' ELSE 'FAIL' END AS closing_base_positive_check
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
LIMIT 1;","SELECT
    t0.masthead_group,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0
GROUP BY
    t0.masthead_group
ORDER BY
    record_count DESC
LIMIT 10;",20,5dae02f0-dc48-418c-bdf9-5e5d2b1d6e26
"SELECT
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead,
    SUM(t0.Total_Revenue_V) AS total_revenue_v,
    SUM(t0.Total_Weekly_Sales_V) AS total_weekly_sales_v,
    SUM(t0.Net_Growth_incl_3rd_Party_V) AS net_growth_incl_3rd_party_v,
    SUM(t0.Total_Closing_Base_V) AS total_closing_base_v
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
    t0.fy_year = 2025 AND t0.fy_week_of_year = 37
GROUP BY
    t0.fy_year,
    t0.fy_week_of_year,
    t0.masthead
ORDER BY
    t0.fy_year DESC, t0.fy_week_of_year DESC, t0.masthead
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.masthead AS STRING)) AS unique_mastheads,
    MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
    MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
    MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
    MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(SAFE_CAST(t0.Total_Revenue_V AS BIGNUMERIC)) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS total_revenue_check,
    CASE
        WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE('Australia/Sydney')) AND MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) >= DATETIME_DIFF(CURRENT_DATETIME('Australia/Sydney'), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1 THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
    t0.fy_year = (SELECT MAX(SAFE_CAST(fy_year AS INT64)) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`)
    AND t0.fy_week_of_year = (SELECT MAX(SAFE_CAST(fy_week_of_year AS INT64)) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` WHERE SAFE_CAST(fy_year AS INT64) = (SELECT MAX(SAFE_CAST(fy_year AS INT64)) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard`))
LIMIT 1;","SELECT
    t0.masthead,
    CASE
        WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community'
        WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige'
        ELSE 'Other'
    END AS masthead_group_community,
    CASE
        WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro'
        WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regionals'
        ELSE 'Other'
    END AS masthead_group_region,
    COUNT(*) AS record_count
FROM
    `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
GROUP BY
    t0.masthead,
    masthead_group_community,
    masthead_group_region
ORDER BY
    record_count DESC
LIMIT 10;",21,57d87efe-c112-4d42-be1b-045f0c8ca73e
"SELECT financial_year, revenue_type, nca_industry_pillar, SUM(gross_revenue_amount) AS total_gross_revenue FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` GROUP BY 1, 2, 3 ORDER BY financial_year DESC, total_gross_revenue DESC LIMIT 12;","SELECT COUNT(1) AS total_records, COUNT(DISTINCT booking_number) AS unique_bookings, COUNT(DISTINCT unified_publication_name) AS unique_publications, COUNT(DISTINCT fin_adtype_name) AS unique_ad_types, MIN(data_load_datetime) AS min_data_load_datetime, MAX(data_load_datetime) AS max_data_load_datetime FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` LIMIT 1;","SELECT CASE WHEN (SELECT SUM(gross_revenue_amount) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` WHERE financial_year = '2024') > 0 THEN 'PASS' ELSE 'FAIL' END AS revenue_check, CASE WHEN (SELECT MAX(data_load_datetime) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard`) >= CURRENT_DATETIME() - INTERVAL 90 DAY THEN 'PASS' ELSE 'FAIL' END AS freshness_check LIMIT 1;","SELECT revenue_type, COUNT(1) AS count_records FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` GROUP BY revenue_type ORDER BY count_records DESC LIMIT 12;",22,f502f44a-e283-405f-ab8f-6a641edb4194
"SELECT SAFE_CAST(fiscal_week_id AS STRING) AS fiscal_week_id, COUNT(1) AS record_count FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_subs_rateplangroup_check` GROUP BY fiscal_week_id ORDER BY fiscal_week_id DESC LIMIT 12;","SELECT COUNT(1) AS total_records, COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks, MIN(SAFE_CAST(fiscal_week_id AS STRING)) AS min_fiscal_week, MAX(SAFE_CAST(fiscal_week_id AS STRING)) AS max_fiscal_week FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_subs_rateplangroup_check` LIMIT 1;","SELECT (SELECT CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_subs_rateplangroup_check` WHERE SAFE_CAST(fiscal_week_id AS STRING) = (SELECT MAX(SAFE_CAST(fiscal_week_id AS STRING)) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_subs_rateplangroup_check`)) AS latest_week_data_check, (SELECT CASE WHEN SUM(SAFE_CAST(rev AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_persisted_os_nulls_Check`) AS total_revenue_positive_check, (SELECT CASE WHEN COUNT(DISTINCT SAFE_CAST(fiscal_month_id AS STRING)) > 0 THEN 'PASS' ELSE 'FAIL' END FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_missing_Bus_check`) AS distinct_months_present_check LIMIT 1;",SELECT COUNT(1) AS records_with_null_or_zero_revenue FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_persisted_os_nulls_Check` WHERE rev IS NULL OR SAFE_CAST(rev AS BIGNUMERIC) = 0 LIMIT 12;,23,712ca6fe-b491-4a01-af6e-1495fb3c7d12
"SELECT
  t0.source_system_name,
  t0.fy_year,
  SUM(t0.Actual_Amount) AS Total_Actual_Amount,
  COUNT(1) AS Record_Count
FROM
  (
    SELECT
      os.source_system_name,
      os.Actual_Amount,
      calendar.fy_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
        ON SAFE_CAST(os.fiscal_week_id AS INT64) = SAFE_CAST(calendar.fy_year_week_number AS INT64)
  ) AS t0
GROUP BY
  t0.source_system_name,
  t0.fy_year
ORDER BY
  t0.fy_year DESC, Total_Actual_Amount DESC
LIMIT 10","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(source_system_name AS STRING)) AS unique_source_systems,
  COUNT(DISTINCT SAFE_CAST(gl_publication_code AS STRING)) AS unique_publications,
  MIN(SAFE_CAST(fiscal_week_id AS INT64)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS INT64)) AS max_fiscal_week_id
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1","SELECT
  CASE WHEN SUM(SAFE_CAST(Actual_Amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_check,
  CASE WHEN MAX(SAFE_CAST(calendar.fy_year AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
    ON SAFE_CAST(os.fiscal_week_id AS INT64) = SAFE_CAST(calendar.fy_year_week_number AS INT64)
LIMIT 1","SELECT
  CASE
    WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
    ELSE 'N'
  END AS month_end_flag,
  COUNT(1) AS count_of_weeks
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
GROUP BY
  month_end_flag
LIMIT 2",24,d7412673-0af1-4efe-8374-ca475b001fb6
"SELECT
  calendar.fy_quarter_of_year AS fiscal_quarter,
  CASE
    WHEN pub.publication_name IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN pub.publication_name IN ('Weekly Times') THEN 'Weekly Times'
    WHEN pub.publication_name IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    WHEN pub.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN pub.publication_name = 'Toowoomba' THEN 'The Chronicle'
    WHEN pub.publication_name = 'Townsville Bulletin' THEN 'Townsville Bulletin'
    WHEN pub.publication_name = 'Gold Coast Bulletin' THEN 'GCB'
    WHEN pub.publication_name = 'Geelong Advertiser' THEN 'Geelong Advertiser'
    WHEN pub.publication_name = 'Cairns Post' THEN 'Cairns Post'
    WHEN pub.publication_name = 'Sunshine Coast' THEN 'Sunshine Coast'
    WHEN pub.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'Courier Mail'
    WHEN pub.publication_name IN ('Mercury', 'Sunday Tasmanian') THEN 'Mercury'
    WHEN pub.publication_name IN ('Sunday Territorian', 'NT News') THEN 'Northern Territory News'
    WHEN pub.publication_name = 'Mackay' THEN 'Daily Mercury'
    ELSE NULL
  END AS publication_name_standardized,
  CASE
    WHEN os.os_level_10 IN ('Convenience Stores / Service Stations', 'Newsagencies', 'Supermarkets') THEN 'Retail'
    WHEN os.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels'
    WHEN os.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies'
    WHEN os.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions'
    ELSE 'Unspec Channel'
  END AS sales_channel_group,
  SUM(os.Actual_Amount) AS total_actual_amount,
  SUM(os.Budget_Amount) AS total_budget_amount,
  SUM(os.volume) AS total_actual_volume,
  SUM(os.Budget_Volume) AS total_budget_volume
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_period_control` AS control ON control.source_week_number = calendar.fy_year_week_number AND control.period_name IN ('CP', 'PY')
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.l04_publication_code <> 'Free News & Lifestyle'
  AND os.l06_publication_code NOT IN ('Food', 'Prestige')
  AND os.gl_hierarchy_code = 'FY2025'
GROUP BY
  1, 2, 3
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  MIN(SAFE_CAST(fiscal_week_id AS INT64)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS INT64)) AS max_fiscal_week_id,
  MIN(SAFE_CAST(calendar.fy_first_day_of_week AS DATE)) AS min_date,
  MAX(SAFE_CAST(calendar.fy_last_day_of_week AS DATE)) AS max_date,
  COUNT(DISTINCT os.gl_publication_code) AS unique_publication_codes,
  COUNT(DISTINCT os.os_level_10) AS unique_os_level_10_channels,
  COUNT(DISTINCT os.os_level_8) AS unique_os_level_8_types
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.l04_publication_code <> 'Free News & Lifestyle'
  AND os.l06_publication_code NOT IN ('Food', 'Prestige')
  AND os.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  CASE WHEN SUM(os.Actual_Amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_positive_check,
  CASE WHEN MAX(calendar.fy_last_day_of_week) >= CURRENT_DATE() - INTERVAL 7 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SELECT
  os.os_level_8 AS os_level_8_category,
  COUNT(*) AS record_count,
  SUM(os.Budget_Volume) AS total_budget_volume
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
WHERE
  upper(os.os_level_6) = 'CIRCULATION'
  AND os.l04_publication_code <> 'Free News & Lifestyle'
  AND os.l06_publication_code NOT IN ('Food', 'Prestige')
  AND os.gl_hierarchy_code = 'FY2025'
GROUP BY
  os_level_8_category
ORDER BY
  record_count DESC
LIMIT 5;",25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
"SELECT
  t0.fiscal_year,
  t0.month_short_name,
  t0.os_level_6,
  SUM(t0.TM1_Net_Revenue) AS total_tm1_net_revenue,
  SUM(t0.Tableau_Actual) AS total_tableau_actual_revenue,
  SUM(t0.Tableau_Actual - t0.TM1_Net_Revenue) AS revenue_variance
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0
WHERE SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$')
GROUP BY 1, 2, 3
ORDER BY 1 DESC, 2 DESC, 3
LIMIT 12;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT t0.fiscal_year) AS unique_fiscal_years,
  COUNT(DISTINCT t0.month_short_name) AS unique_months,
  COUNT(DISTINCT t0.os_level_6) AS unique_os_level_6,
  MIN(t0.fiscal_year) AS min_fiscal_year,
  MAX(t0.fiscal_year) AS max_fiscal_year
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.Tableau_Actual) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_revenue_check,
  CASE WHEN MAX(t0.fiscal_year) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0
WHERE SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$')
LIMIT 1;","SELECT
  CASE WHEN SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$') THEN 'Numeric Publication Code' ELSE 'Non-Numeric Publication Code' END AS publication_code_type,
  COUNT(1) AS record_count
FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0
GROUP BY 1
LIMIT 12;",26,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
"SELECT
    SAFE_CAST(fiscal_week_id AS STRING) AS fiscal_week,
    category_name,
    gl_publication_code,
    SUM(SAFE_CAST(earned_amount AS BIGNUMERIC)) AS earned_amount_sum,
    SUM(SAFE_CAST(add_volume AS BIGNUMERIC)) AS add_volume_sum,
    SUM(SAFE_CAST(red_volume AS BIGNUMERIC)) AS red_volume_sum
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions`
GROUP BY
    fiscal_week, category_name, gl_publication_code
ORDER BY
    fiscal_week DESC
LIMIT 10;","SELECT
    COUNT(*) AS total_records,
    COUNT(DISTINCT SAFE_CAST(category_name AS STRING)) AS unique_category_names,
    COUNT(DISTINCT SAFE_CAST(gl_publication_code AS STRING)) AS unique_gl_publication_codes,
    MIN(SAFE_CAST(fiscal_week_id AS INT64)) AS min_fiscal_week_id,
    MAX(SAFE_CAST(fiscal_week_id AS INT64)) AS max_fiscal_week_id
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions`
LIMIT 1;","SELECT
    CASE
        WHEN SUM(SAFE_CAST(earned_amount AS BIGNUMERIC)) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS earned_amount_check,
    CASE
        WHEN MAX(SAFE_CAST(fiscal_week_id AS INT64)) IS NOT NULL THEN 'PASS'
        ELSE 'FAIL'
    END AS fiscal_week_id_check
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions`
LIMIT 1;","SELECT
    SAFE_CAST(business_unit_status AS STRING) AS business_unit_status,
    COUNT(*) AS status_count
FROM
    `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim`
GROUP BY
    business_unit_status
LIMIT 10;",27,23c8b213-a9f0-4158-b8fa-bff14425abb5
"SELECT SAFE_CAST(t0.Category AS STRING) AS Category, SUM(t0.Product_Revenue) AS Total_Product_Revenue, SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5', '6') THEN t0.Expense ELSE 0 END) AS Total_Expense FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0 GROUP BY Category LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT SAFE_CAST(t0.Category AS STRING)) AS unique_categories, COUNT(DISTINCT SAFE_CAST(t0.Margin_Level AS STRING)) AS unique_margin_levels, COUNT(DISTINCT SAFE_CAST(t0.Product_Name AS STRING)) AS unique_product_names FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0 LIMIT 1;",SELECT CASE WHEN SUM(t0.Product_Revenue) > 0 THEN 'PASS' ELSE 'FAIL' END AS product_revenue_check FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0 LIMIT 1;,"SELECT SAFE_CAST(t0.Margin_Level AS STRING) AS Margin_Level, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0 GROUP BY Margin_Level ORDER BY Margin_Level LIMIT 10;",28,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
"WITH
  OSandFACT_Base AS (
    SELECT
      os.Actual_Amount,
      os.Budget_Amount,
      os.Forecast_Amount,
      os.Last_Year_Actual_Amount,
      os.volume,
      os.os_level_10,
      os.os_level_7,
      os.os_level_6,
      os.gl_publication_code,
      pub.l04_publication_code,
      pub.l06_publication_code,
      os.gl_hierarchy_code,
      calendar.fy_week_of_year,
      calendar.fy_year_week_number,
      os.day_of_week,
      pub.publication_name,
      calendar.fy_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  SAFE_CAST(fy_year AS STRING) AS fiscal_year,
  fy_year_week_number AS fiscal_week,
  CASE WHEN (day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (day_of_week = 'Sat') THEN 'SAT' WHEN (day_of_week = 'Sun') THEN 'SUN' ELSE 'Other' END AS day_of_week_grouped,
  CASE WHEN (os_level_10 IN ('Convenience Stores / Service Stations', 'Newsagencies', 'Supermarkets')) THEN 'Retail' ELSE os_level_10 END AS sales_channel_grouped,
  SUM(Actual_Amount) AS total_actual_amount,
  SUM(volume) AS total_volume,
  SUM(CASE WHEN (fy_week_of_year = 1) THEN Budget_Amount ELSE 0 END) AS budget_fy_week_1
FROM
  OSandFACT_Base
WHERE
  upper(os_level_6) = 'CIRCULATION'
  AND l04_publication_code <> 'Free News & Lifestyle'
  AND l06_publication_code NOT IN ('Food', 'Prestige')
  AND gl_hierarchy_code = 'FY2025'
GROUP BY
  fiscal_year,
  fiscal_week,
  day_of_week_grouped,
  sales_channel_grouped
ORDER BY
  fiscal_year DESC, fiscal_week DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT fiscal_week_id) AS unique_fiscal_weeks,
  COUNT(DISTINCT gl_publication_code) AS unique_publications,
  COUNT(DISTINCT os_level_10) AS unique_sales_channels,
  MIN(fiscal_week_id) AS min_fiscal_week_id,
  MAX(fiscal_week_id) AS max_fiscal_week_id,
  MIN(SAFE_CAST(calendar.fy_first_day_of_week AS DATE)) AS min_date,
  MAX(SAFE_CAST(calendar.fy_last_day_of_week AS DATE)) AS max_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
  ON os.fiscal_week_id = calendar.fy_year_week_number
LIMIT 1;","WITH
  OSandFACT_Base AS (
    SELECT
      os.Actual_Amount,
      os.os_level_6,
      os.gl_hierarchy_code,
      pub.l04_publication_code,
      pub.l06_publication_code,
      calendar.fy_year_week_number
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
  )
SELECT
  CASE WHEN SUM(CASE WHEN Actual_Amount > 0 THEN 1 ELSE 0 END) > 0 THEN 'PASS' ELSE 'FAIL' END AS actual_amount_positive_check,
  CASE WHEN MAX(fy_year_week_number) >= SAFE_CAST(FORMAT_DATE('%Y%W', CURRENT_DATE('Australia/Sydney')) AS INT64) - 2 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  OSandFACT_Base
WHERE
  upper(os_level_6) = 'CIRCULATION'
  AND l04_publication_code <> 'Free News & Lifestyle'
  AND l06_publication_code NOT IN ('Food', 'Prestige')
  AND gl_hierarchy_code = 'FY2025'
LIMIT 1;","WITH
  OSandFACT_Base AS (
    SELECT
      os.os_level_10,
      os.day_of_week,
      os.os_level_6,
      os.gl_hierarchy_code,
      pub.l04_publication_code,
      pub.l06_publication_code
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
  )
SELECT
  CASE WHEN (os_level_10 IN ('Convenience Stores / Service Stations', 'Newsagencies', 'Supermarkets')) THEN 'Retail' ELSE os_level_10 END AS sales_channel_group,
  CASE WHEN (day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (day_of_week = 'Sat') THEN 'SAT' WHEN (day_of_week = 'Sun') THEN 'SUN' ELSE 'Other' END AS day_of_week_group,
  COUNT(1) AS record_count
FROM
  OSandFACT_Base
WHERE
  upper(os_level_6) = 'CIRCULATION'
  AND l04_publication_code <> 'Free News & Lifestyle'
  AND l06_publication_code NOT IN ('Food', 'Prestige')
  AND gl_hierarchy_code = 'FY2025'
GROUP BY
  sales_channel_group,
  day_of_week_group
ORDER BY
  record_count DESC
LIMIT 10;",29,2104a3f5-9424-4087-a928-e67fecae789a
"WITH
  temp AS (
    SELECT
      *,
      CASE
        WHEN unified_publication_name LIKE 'TUBI%' THEN 'TUBI'
        WHEN `LEFT`(upper(fin_adtype_name), 5) = 'VIDEO' THEN 'VIDEO'
        ELSE 'OTHER'
      END AS Rev_Type
    FROM
      `ncau-data-newsquery-prd`.asl_finance_derived.details_dashboard
  ),
  team_list AS (
    SELECT DISTINCT
      Team
    FROM
      `ncau-data-newsquery-prd`.sbx_dcp.Progo_Streaming_Tgt
    WHERE
      Type IS NOT null
  ),
  main AS (
    SELECT
      temp.*,
      tgt_1.Team,
      null AS Target,
      'Data' AS source
    FROM
      temp
      LEFT JOIN
      `ncau-data-newsquery-prd`.sbx_dcp.Progo_Streaming_Tgt AS tgt_1
      ON temp.portfolio_group_name_sync = tgt_1.Portfolio_Group AND temp.financial_month = CAST(tgt_1.Month_Num AS STRING)
    UNION ALL
    SELECT
      null AS source_system_code, null AS sales_segment_gm_name_sync, null AS current_portfolio_group_owner_full_name_sync, null AS current_portfolio_conformed_owner_full_name_sync, null AS current_portfolio_group_owner_full, null AS current_portfolio_conformed_owner_full, null AS publisher_vertical, null AS data_load_datetime, null AS relative_day_offset, null AS sales_segment_gm_name, null AS nca_industry_pillar, null AS revenue_type, null AS revenue_group_subtype, null AS fin_adtype_name, null AS cost_model_type, null AS xtend_flag, null AS adsize_name, null AS pos_page_achieved, null AS account_number, null AS advertiser_name, null AS advertiser_group, null AS advertiser_parent, null AS crm_account_number, null AS agency_name, null AS agency_group, null AS agency_parent, null AS booking_number, null AS booking_name, null AS booking_line_number, null AS booking_line_created_date, null AS insertion_name, null AS sort_caption, null AS classification_name, null AS reporting_date, null AS portfolio_group_name_current, null AS portfolio_conformed_name_current, null AS portfolio_parent_group_name_current, null AS portfolio_group_name_sync, null AS portfolio_conformed_name_sync, null AS portfolio_parent_group_name_sync, null AS unified_publication_name, null AS employee_name, null AS financial_year,
      CASE Month_Num WHEN 1 THEN '1' WHEN 2 THEN '1' WHEN 3 THEN '1' WHEN 4 THEN '2' WHEN 5 THEN '2' WHEN 6 THEN '2' WHEN 7 THEN '3' WHEN 8 THEN '3' WHEN 9 THEN '3' WHEN 10 THEN '4' WHEN 11 THEN '4' WHEN 12 THEN '4' END AS financial_quarter,
      null AS financial_week,
      CAST(tgt_2.Month_Num AS string) AS financial_month,
      CASE Month_Num WHEN 1 THEN 'Jul' WHEN 2 THEN 'Aug' WHEN 3 THEN 'Sep' WHEN 4 THEN 'Oct' WHEN 5 THEN 'Nov' WHEN 6 THEN 'Dec' WHEN 7 THEN 'Jan' WHEN 8 THEN 'Feb' WHEN 9 THEN 'Mar' WHEN 10 THEN 'Apr' WHEN 11 THEN 'May' WHEN 12 THEN 'Jun' END AS financial_short_month,
      null AS relative_fy_year_offset, null AS relative_fy_month_offset, null AS relative_cal_year_offset, null AS calendar_year, null AS calendar_week, null AS calendar_month, null AS calendar_month_short_name, null AS dow, null AS revenue_group_level_2_name, null AS publication_date, null AS revenue_category, null AS publishing_division_group, null AS adpoint_account_number, null AS FPE, null AS gross_revenue_amount, null AS gross_revenue_ex_adj_amount, null AS adjustment_amount, null AS col_cms_finance, null AS system_price_amount, null AS gross_less_agency_commission_amount, null AS dw_asl_load_timestamp,
      tgt_2.Type AS Rev_Type,
      tgt_2.Team AS Team,
      tgt_2.Target AS Target,
      'Rep Target' AS source
    FROM
      `ncau-data-newsquery-prd`.sbx_dcp.Progo_Streaming_Tgt AS tgt_2
    WHERE
      Type IS NOT null
  )
SELECT
  main.Rev_Type,
  main.Team,
  main.financial_month,
  SUM(SAFE_CAST(main.gross_revenue_amount AS BIGNUMERIC)) AS total_gross_revenue,
  SUM(SAFE_CAST(main.Target AS BIGNUMERIC)) AS total_target,
  SUM(CASE WHEN SAFE_CAST(main.relative_fy_year_offset AS INT64) = 0 THEN SAFE_CAST(main.gross_revenue_amount AS BIGNUMERIC) ELSE 0 END) AS current_fy_gross_revenue,
  SUM(CASE WHEN SAFE_CAST(main.relative_fy_year_offset AS INT64) = -1 THEN SAFE_CAST(main.gross_revenue_amount AS BIGNUMERIC) ELSE 0 END) AS previous_fy_gross_revenue
FROM
  main
  LEFT JOIN
  team_list
  ON main.Team = team_list.Team
WHERE
  main.Rev_Type IN ('VIDEO', 'TUBI')
GROUP BY
  main.Rev_Type,
  main.Team,
  main.financial_month
ORDER BY
  main.financial_month DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(portfolio_group_name_sync AS STRING)) AS unique_portfolio_groups,
  COUNT(DISTINCT SAFE_CAST(advertiser_name AS STRING)) AS unique_advertisers,
  MIN(SAFE_CAST(reporting_date AS DATE)) AS min_reporting_date,
  MAX(SAFE_CAST(reporting_date AS DATE)) AS max_reporting_date,
  MIN(SAFE_CAST(financial_year AS STRING)) AS min_financial_year,
  MAX(SAFE_CAST(financial_year AS STRING)) AS max_financial_year
FROM
  `ncau-data-newsquery-prd`.asl_finance_derived.details_dashboard
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS has_data_check,
  CASE WHEN MAX(SAFE_CAST(reporting_date AS DATE)) >= CURRENT_DATE() - INTERVAL 30 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check,
  CASE WHEN SUM(SAFE_CAST(gross_revenue_amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS positive_revenue_check
FROM
  `ncau-data-newsquery-prd`.asl_finance_derived.details_dashboard
LIMIT 1;","WITH
  temp AS (
    SELECT
      *,
      CASE
        WHEN unified_publication_name LIKE 'TUBI%' THEN 'TUBI'
        WHEN `LEFT`(upper(fin_adtype_name), 5) = 'VIDEO' THEN 'VIDEO'
        ELSE 'OTHER'
      END AS Rev_Type
    FROM
      `ncau-data-newsquery-prd`.asl_finance_derived.details_dashboard
  )
SELECT
  Rev_Type,
  COUNT(*) AS record_count
FROM
  temp
GROUP BY
  Rev_Type
ORDER BY
  record_count DESC
LIMIT 5;",30,9c8f39dc-bf5f-4292-bfe3-c6e1ec71c588
"SELECT
  t0.agency_parent AS agency_parent,
  SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS current_year_gross_revenue,
  SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) AS previous_year_gross_revenue
FROM
  `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0
WHERE
  t0.revenue_group_subtype != 'PROGRAMMATIC EXCHANGE' OR t0.revenue_group_subtype IS NULL
GROUP BY
  agency_parent
LIMIT 10;","SELECT
  (SELECT COUNT(*) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_total_records,
  (SELECT COUNT(DISTINCT agency_parent) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_unique_agency_parents,
  (SELECT MIN(SAFE_CAST(booking_line_created_date AS DATE)) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_min_booking_date,
  (SELECT MAX(SAFE_CAST(booking_line_created_date AS DATE)) FROM `ncau-data-newsquery-prd.sbx_dcp.ia`) AS ia_max_booking_date,
  (SELECT COUNT(*) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_total_records,
  (SELECT COUNT(DISTINCT account_number) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_unique_account_numbers,
  (SELECT MIN(SAFE_CAST(movement_date AS DATE)) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_min_movement_date,
  (SELECT MAX(SAFE_CAST(movement_date AS DATE)) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement`) AS rm_max_movement_date
LIMIT 1;","SELECT
  CASE WHEN (SELECT SUM(t0.gross_revenue_amount) FROM `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0) > 0 THEN 'PASS' ELSE 'FAIL' END AS ia_revenue_positive_check,
  CASE WHEN (SELECT MAX(SAFE_CAST(t0.booking_line_created_date AS DATE)) FROM `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS ia_freshness_check,
  CASE WHEN (SELECT SUM(t1.GROSS_AMOUNT_DIFF) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t1) IS NOT NULL THEN 'PASS' ELSE 'FAIL' END AS rm_gross_amount_diff_exists_check,
  CASE WHEN (SELECT MAX(SAFE_CAST(t1.movement_date AS DATE)) FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t1) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS rm_freshness_check
LIMIT 1;","SELECT
  t0.revenue_group_subtype,
  COUNT(*) AS record_count,
  SUM(t0.gross_revenue_amount) AS total_gross_revenue
FROM
  `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0
GROUP BY
  t0.revenue_group_subtype
LIMIT 10;",31,fed70b12-c274-4cde-9920-592ca4c4dab0
"SELECT
  SAFE_CAST(bma.fy_year AS INT64) AS fy_year,
  SAFE_CAST(bma.delivery_medium_type AS STRING) AS delivery_medium_type,
  CASE
    WHEN bma.masthead = 'TA' THEN 'The Australian'
    WHEN bma.masthead IN ('AA', 'CM', 'DT', 'HS') THEN 'Metro'
    WHEN bma.masthead IN ('CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM') THEN 'Regional'
    WHEN bma.masthead = 'WT' THEN 'Others'
    WHEN bma.masthead IN ('AP', 'CS', 'PU', 'RN', 'SC', 'TS') THEN 'Deep Niche Publications'
    ELSE 'Discontinued/Excluded'
  END AS masthead_grouping,
  SUM(CASE WHEN bma.sunday_flag = 'Y' THEN bma.subscription_count ELSE NULL END) AS closing_base_sunday,
  SUM(bma.acquisition_count) AS total_acquisition_count
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg` AS bma
WHERE
  bma.fy_year >= 2022 AND bma.fy_year <= 2024
  AND bma.classification_level_1 IN ('Standard Paid', 'Other Paid', 'Offplatform - Paid')
GROUP BY
  1, 2, 3
ORDER BY
  fy_year DESC, delivery_medium_type, masthead_grouping
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(bma.fy_year AS INT64)) AS unique_fy_years,
  COUNT(DISTINCT SAFE_CAST(bma.masthead AS STRING)) AS unique_mastheads,
  COUNT(DISTINCT SAFE_CAST(bma.delivery_medium_type AS STRING)) AS unique_delivery_medium_types,
  MIN(SAFE_CAST(bma.fy_year AS INT64)) AS min_fy_year,
  MAX(SAFE_CAST(bma.fy_year AS INT64)) AS max_fy_year,
  MIN(SAFE_CAST(bma.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
  MAX(SAFE_CAST(bma.fy_week_of_year AS INT64)) AS max_fy_week_of_year
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg` AS bma
LIMIT 1;","SELECT
  (SUM(SAFE_CAST(bma.acquisition_count AS INT64)) > 0) AS acquisition_count_is_positive,
  (MAX(SAFE_CAST(bma.fy_year AS INT64)) >= 2023) AS data_is_recent
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg` AS bma
WHERE
  bma.fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg`)
LIMIT 1;","SELECT
  CASE
    WHEN bma.masthead = 'TA' THEN 'The Australian'
    WHEN bma.masthead IN ('AA', 'CM', 'DT', 'HS') THEN 'Metro'
    WHEN bma.masthead IN ('CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM') THEN 'Regional'
    WHEN bma.masthead = 'WT' THEN 'Others'
    WHEN bma.masthead IN ('AP', 'CS', 'PU', 'RN', 'SC', 'TS') THEN 'Deep Niche Publications'
    ELSE 'Discontinued/Excluded'
  END AS masthead_group,
  COUNT(DISTINCT SAFE_CAST(bma.masthead AS STRING)) AS distinct_mastheads_in_group,
  COUNT(*) AS total_records_in_group
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg` AS bma
WHERE
  bma.fy_year = (SELECT MAX(fy_year) FROM `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg`)
GROUP BY
  1
ORDER BY
  total_records_in_group DESC
LIMIT 5;",32,d828e66e-2476-4e31-91af-3a202a45f99d
"SELECT SAFE_CAST(t0.advertiser_name AS STRING) AS advertiser_name, SAFE_CAST(t0.booking_number AS STRING) AS booking_number, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 GROUP BY 1, 2 ORDER BY record_count DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT SAFE_CAST(t0.advertiser_name AS STRING)) AS unique_advertisers, COUNT(DISTINCT SAFE_CAST(t0.booking_number AS STRING)) AS unique_bookings, COUNT(DISTINCT SAFE_CAST(t0.account_number AS STRING)) AS unique_accounts, COUNT(DISTINCT SAFE_CAST(t0.crm_account_number AS STRING)) AS unique_crm_accounts, MIN(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS min_load_timestamp, MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) AS max_load_timestamp FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 1;","SELECT CASE WHEN COUNT(DISTINCT SAFE_CAST(t0.booking_number AS STRING)) > 0 THEN 'PASS' ELSE 'FAIL' END AS booking_count_check, CASE WHEN MAX(SAFE_CAST(t0.dw_asl_load_timestamp AS TIMESTAMP)) > TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 1;","SELECT CASE WHEN ('Cal' = 'Cal') THEN 'Calendar Period' ELSE NULL END AS period_type, COUNT(*) AS count_of_period_type FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 GROUP BY 1 LIMIT 1;",33,70ed3b92-987b-479b-9ed7-d2903bd2787e
"SELECT
  financial_year,
  calendar_year,
  revenue_type,
  revenue_transaction_status,
  SUM(gross_revenue_amount) AS total_gross_revenue,
  SUM(agency_commission_amount) AS total_agency_commission
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
WHERE
  SAFE_CAST(financial_year AS STRING) BETWEEN '2023' AND '2026'
  AND revenue_transaction_status IN ('Billed', 'Booked')
  AND source_system_code = 'ADPT'
  AND revenue_type = 'Digital'
  AND record_type_code = 'STD'
GROUP BY
  financial_year,
  calendar_year,
  revenue_type,
  revenue_transaction_status
ORDER BY
  financial_year, calendar_year
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT booking_number) AS unique_bookings,
  COUNT(DISTINCT advertiser_name) AS unique_advertisers,
  MIN(data_load_datetime) AS min_data_date,
  MAX(data_load_datetime) AS max_data_date
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
LIMIT 1;","SELECT
  CASE WHEN SUM(gross_revenue_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS gross_revenue_check,
  CASE WHEN MAX(data_load_datetime) >= CURRENT_DATE() - INTERVAL 7 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
WHERE
  SAFE_CAST(financial_year AS STRING) = SAFE_CAST(EXTRACT(YEAR FROM CURRENT_DATE()) AS STRING)
  AND revenue_transaction_status IN ('Billed', 'Booked')
  AND source_system_code = 'ADPT'
  AND revenue_type = 'Digital'
LIMIT 1;","SELECT
  revenue_transaction_status,
  revenue_type,
  COUNT(*) AS record_count,
  SUM(gross_revenue_amount) AS total_gross_revenue
FROM
  `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client`
WHERE
  SAFE_CAST(financial_year AS STRING) BETWEEN '2023' AND '2026'
  AND source_system_code = 'ADPT'
  AND record_type_code = 'STD'
GROUP BY
  revenue_transaction_status,
  revenue_type
ORDER BY
  revenue_transaction_status, revenue_type
LIMIT 10;",34,38809f41-7138-4b94-94d1-ae919b2d9517
"WITH OSandFACT AS (
  SELECT
    os.*,
    calendar.fy_year_week_number,
    calendar.fy_month_of_year,
    pub.publication_code,
    pub.publication_name
  FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
    LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
    LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND os.l04_publication_code <> 'Free News & Lifestyle'
    AND os.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT
  fy_year_week_number,
  os_level_7,
  (CASE
    WHEN (publication_code = 'Post Courier') THEN 'PNG'
    ELSE publication_name
  END) AS publication_name_adjusted,
  CASE
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times')) THEN '      Regionals'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Advertiser', 'Sunday Mail (SA)')) THEN '     The Advertiser'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('The Australian')) THEN ' The Australian'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN '    The Courier Mail'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN '   The Daily Telegraph'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Herald Sun', 'Sunday Herald Sun')) THEN '  The Herald Sun'
    ELSE '        Other'
  END AS publication_group,
  SUM(Actual_Amount) AS total_actual_amount,
  SUM(volume) AS total_volume,
  SUM(CASE WHEN fy_month_of_year < 4 THEN Actual_Amount ELSE Forecast_Amount END) AS total_blended_amount
FROM
  OSandFACT
GROUP BY
  1, 2, 3, 4
ORDER BY
  fy_year_week_number DESC
LIMIT 12;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS STRING)) AS unique_fiscal_weeks,
  COUNT(DISTINCT gl_publication_code) AS unique_publications,
  COUNT(DISTINCT os_level_7) AS unique_sales_channels,
  MIN(fiscal_week_id) AS min_fiscal_week_id,
  MAX(fiscal_week_id) AS max_fiscal_week_id
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1;","SELECT
  CASE
    WHEN COUNT(*) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS data_exists_check,
  CASE
    WHEN MAX(calendar.fy_last_day_of_week) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check,
  CASE
    WHEN SUM(t0.Actual_Amount) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS non_zero_actual_amount_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
    ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.gl_hierarchy_code = 'FY2025'
LIMIT 1;","WITH OSandFACT AS (
  SELECT
    os.*,
    pub.publication_code,
    pub.publication_name
  FROM
    `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
    LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND os.l04_publication_code <> 'Free News & Lifestyle'
    AND os.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT
  CASE
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times')) THEN '      Regionals'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Advertiser', 'Sunday Mail (SA)')) THEN '     The Advertiser'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('The Australian')) THEN ' The Australian'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN '    The Courier Mail'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN '   The Daily Telegraph'
    WHEN ((CASE WHEN (publication_code = 'Post Courier') THEN 'PNG' ELSE publication_name END) IN ('Herald Sun', 'Sunday Herald Sun')) THEN '  The Herald Sun'
    ELSE '        Other'
  END AS publication_group,
  COUNT(*) AS record_count,
  SUM(Actual_Amount) AS total_actual_amount
FROM
  OSandFACT
GROUP BY
  1
ORDER BY
  record_count DESC
LIMIT 12;",35,aca2f032-b796-49a2-89fe-781ca947aa33
"SELECT
  t0.movement_date,
  CASE WHEN (t0.xtend_flag = 'Y') THEN 'XTEND' WHEN ((SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO') OR ((t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER') AND (t0.revenue_sub_type = 'DIGITAL'))) THEN 'PROGRAMMATIC' WHEN (t0.revenue_sub_type = 'DIGITAL') THEN 'ADPT DIGITAL' WHEN (SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY') THEN 'SUNDRY' ELSE t0.revenue_sub_type END AS revenue_category,
  t0.revenue_type,
  SUM(t0.GROSS_AMOUNT_DIFF) AS total_gross_amount_diff,
  SUM(CASE WHEN t0.revenue_type = 'DIGITAL' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS gross_amount_diff_digital,
  SUM(CASE WHEN t0.revenue_type = 'PRINT' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS gross_amount_diff_print
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
WHERE
  t0.movement_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) AND CURRENT_DATE()
GROUP BY
  t0.movement_date,
  revenue_category,
  t0.revenue_type
ORDER BY
  t0.movement_date DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.booking_line_id AS STRING)) AS unique_booking_line_ids,
  COUNT(DISTINCT SAFE_CAST(t0.booking_number AS STRING)) AS unique_booking_numbers,
  MIN(t0.movement_date) AS min_movement_date,
  MAX(t0.movement_date) AS max_movement_date
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
LIMIT 1;","SELECT
  CASE WHEN SUM(t0.GROSS_AMOUNT_DIFF) > 0 THEN 'PASS' ELSE 'FAIL' END AS gross_amount_diff_positive_check,
  CASE WHEN MAX(t0.movement_date) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
LIMIT 1;","SELECT
  CASE WHEN (t0.xtend_flag = 'Y') THEN 'XTEND' WHEN ((SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO') OR ((t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER') AND (t0.revenue_sub_type = 'DIGITAL'))) THEN 'PROGRAMMATIC' WHEN (t0.revenue_sub_type = 'DIGITAL') THEN 'ADPT DIGITAL' WHEN (SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY') THEN 'SUNDRY' ELSE t0.revenue_sub_type END AS revenue_category,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0
GROUP BY
  revenue_category
ORDER BY
  record_count DESC
LIMIT 10;",36,a1b901e6-c4fb-44bc-955a-3a7070c15829
"SELECT
  SAFE_CAST(calendar.fy_year AS STRING) AS fiscal_year,
  SAFE_CAST(calendar.fy_week_of_year AS INT64) AS fiscal_week,
  SAFE_CAST(os.os_level_4 AS STRING) AS os_level_4_category,
  SAFE_CAST(pub.l03_publication_code AS STRING) AS publication_code_l03,
  SUM(os.Budget_Amount) AS total_budget_amount,
  SUM(os.Actual_Amount) AS total_actual_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
GROUP BY
  1, 2, 3, 4
ORDER BY
  fiscal_year DESC, fiscal_week DESC
LIMIT 10","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(os.gl_publication_code AS STRING)) AS unique_publication_codes,
  COUNT(DISTINCT SAFE_CAST(os.fiscal_week_id AS INT64)) AS unique_fiscal_weeks,
  MIN(SAFE_CAST(calendar.fy_first_day_of_week AS DATE)) AS min_date,
  MAX(SAFE_CAST(calendar.fy_last_day_of_week AS DATE)) AS max_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
LIMIT 1","SELECT
  CASE
    WHEN SUM(SAFE_CAST(os.Actual_Amount AS BIGNUMERIC)) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS actual_amount_positive_check,
  CASE
    WHEN MAX(SAFE_CAST(calendar.fy_last_day_of_week AS DATE)) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
LIMIT 1","SELECT
  SAFE_CAST(calendar.month_end_flag AS STRING) AS month_end_status,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
GROUP BY
  1
LIMIT 2",37,b1c5901f-a535-42eb-870d-05cc025f7c27
"SELECT
    SAFE_CAST(t0.Category AS STRING) AS Category,
    SAFE_CAST(t0.Fiscal_Year AS INT64) AS Fiscal_Year,
    SAFE_CAST(t0.Source AS STRING) AS Source,
    SUM(t0.Product_Revenue) AS total_product_revenue,
    SUM(t0.Expense) AS total_expense,
    MAX(t0.Running_Expense_CONSUMER_1_Actuals) AS max_running_expense_consumer_1_actuals
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
GROUP BY
    Category,
    Fiscal_Year,
    Source
ORDER BY
    Fiscal_Year DESC, Category, Source
LIMIT 10;","SELECT
    COUNT(1) AS total_records,
    COUNT(DISTINCT SAFE_CAST(t0.Fiscal_Year AS INT64)) AS unique_fiscal_years,
    COUNT(DISTINCT SAFE_CAST(t0.Category AS STRING)) AS unique_categories,
    COUNT(DISTINCT SAFE_CAST(t0.Source AS STRING)) AS unique_sources,
    MIN(SAFE_CAST(t0.Fiscal_Year AS INT64)) AS min_fiscal_year,
    MAX(SAFE_CAST(t0.Fiscal_Year AS INT64)) AS max_fiscal_year
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
LIMIT 1;","SELECT
    CASE
        WHEN SUM(CASE WHEN SAFE_CAST(t0.Source AS STRING) = 'Actuals' THEN t0.Product_Revenue ELSE 0 END) > 0 THEN 'PASS'
        ELSE 'FAIL'
    END AS product_revenue_check,
    CASE
        WHEN MAX(SAFE_CAST(t0.Fiscal_Year AS INT64)) >= EXTRACT(YEAR FROM CURRENT_DATE()) - 1 THEN 'PASS'
        ELSE 'FAIL'
    END AS data_freshness_check
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
LIMIT 1;","SELECT
    SAFE_CAST(t0.Category AS STRING) AS Category,
    SAFE_CAST(t0.Source AS STRING) AS Source,
    COUNT(1) AS record_count
FROM
    `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` AS t0
GROUP BY
    Category,
    Source
ORDER BY
    Category, Source
LIMIT 10;",39,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
"SELECT
    t0.fy_year,
    (CASE WHEN t0.masthead = 'TA' THEN 'The Australian' WHEN t0.masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro' WHEN t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC') THEN 'Regionals' WHEN t0.masthead = 'WT' THEN 'Other Publications' WHEN t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU') THEN 'Deep Niche Publications' WHEN t0.masthead IS NULL THEN 'check' ELSE 'Exclude' END) AS masthead_group,
    SUM(t0.acquisition_count) AS total_acquisitions,
    COUNT(1) AS total_records
FROM `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
    t0.table_nm IN ('mov', 'agg')
    AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
    AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
    AND (CASE WHEN t0.masthead = 'TA' THEN 'The Australian' WHEN t0.masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro' WHEN t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC') THEN 'Regionals' WHEN t0.masthead = 'WT' THEN 'Other Publications' WHEN t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU') THEN 'Deep Niche Publications' WHEN t0.masthead IS NULL THEN 'check' ELSE 'Exclude' END) != 'Exclude'
    AND (CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END) IN ('Digital Subscriptions')
GROUP BY 1, 2
ORDER BY t0.fy_year DESC, total_acquisitions DESC
LIMIT 10;","SELECT
    COUNT(1) AS total_rows,
    COUNT(DISTINCT SAFE_CAST(t0.classification_level_1 AS STRING)) AS unique_classification_level_1,
    COUNT(DISTINCT SAFE_CAST(t0.masthead AS STRING)) AS unique_mastheads,
    MIN(SAFE_CAST(t0.fy_year AS INT64)) AS min_fy_year,
    MAX(SAFE_CAST(t0.fy_year AS INT64)) AS max_fy_year,
    MIN(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS min_fy_week_of_year,
    MAX(SAFE_CAST(t0.fy_week_of_year AS INT64)) AS max_fy_week_of_year
FROM `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
LIMIT 1;","SELECT
    CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS records_exist_check,
    CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
    t0.table_nm IN ('mov', 'agg')
    AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
    AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
LIMIT 1;","SELECT
    (CASE WHEN t0.masthead = 'TA' THEN 'The Australian' WHEN t0.masthead IN ('CM', 'DT', 'HS', 'AA') THEN 'Metro' WHEN t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC') THEN 'Regionals' WHEN t0.masthead = 'WT' THEN 'Other Publications' WHEN t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU') THEN 'Deep Niche Publications' WHEN t0.masthead IS NULL THEN 'check' ELSE 'Exclude' END) AS masthead_group,
    (CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END) AS subscription_type,
    COUNT(1) AS record_count
FROM `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
    t0.table_nm IN ('mov', 'agg')
    AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
    AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
GROUP BY 1, 2
ORDER BY record_count DESC
LIMIT 10;",40,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
"SELECT SAFE_CAST(t0.scenario AS STRING) AS scenario, COUNT(1) AS records_count FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 GROUP BY scenario ORDER BY records_count DESC LIMIT 5;","SELECT COUNT(1) AS total_records, COUNT(DISTINCT SAFE_CAST(t0.scenario AS STRING)) AS unique_scenarios FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 LIMIT 1;",SELECT CASE WHEN COUNT(1) > 0 THEN 'PASS' ELSE 'FAIL' END AS data_exists_check FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 LIMIT 1;,"SELECT SAFE_CAST(t0.scenario AS STRING) AS scenario, COUNT(1) AS count_of_records FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 GROUP BY scenario ORDER BY count_of_records DESC LIMIT 5;",41,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3
"SELECT
  t0.fy_year,
  t0.fy_week_of_year,
  CASE
    WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition'
    WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition'
    ELSE 'Digital Recognition'
  END AS recognition_type,
  CASE
    WHEN (t0.gl_publication_code = '100' OR t0.gl_publication_code = '101' OR t0.masthead_code = 'TA') THEN 'The Australian'
    WHEN (t0.gl_publication_code = '400' OR t0.gl_publication_code = '401' OR t0.gl_publication_code = '402' OR t0.masthead_code = 'CM') THEN 'Courier Mail'
    WHEN (t0.gl_publication_code = '110' OR t0.gl_publication_code = '111' OR t0.gl_publication_code = '116' OR t0.masthead_code = 'DT') THEN 'Daily Telegraph'
    WHEN (t0.gl_publication_code = '301' OR t0.gl_publication_code = '302' OR t0.gl_publication_code = '303' OR t0.masthead_code = 'HS') THEN 'Herald Sun'
    WHEN (t0.gl_publication_code = '500' OR t0.gl_publication_code = '501' OR t0.gl_publication_code = '560' OR t0.masthead_code = 'AA') THEN 'The Advertiser'
    WHEN (t0.gl_publication_code = '450' OR t0.gl_publication_code = '460' OR t0.masthead_code = 'CP') THEN 'Cairns Post'
    WHEN (t0.gl_publication_code = '350' OR t0.gl_publication_code = '351' OR t0.masthead_code = 'GA') THEN 'Geelong'
    WHEN (t0.gl_publication_code = '670' OR t0.gl_publication_code = '685' OR t0.masthead_code = 'GC') THEN 'Gold Coast'
    WHEN (t0.gl_publication_code = '961' OR t0.gl_publication_code = '962' OR t0.gl_publication_code = '963' OR t0.masthead_code = 'NT') THEN 'NT News'
    WHEN (t0.gl_publication_code = '850' OR t0.gl_publication_code = '851' OR t0.gl_publication_code = '852' OR t0.masthead_code = 'TM') THEN 'The Mercury'
    WHEN (t0.gl_publication_code = '5053' OR t0.gl_publication_code = '5253' OR t0.masthead_code = 'TC') THEN 'Toowoomba'
    WHEN (t0.gl_publication_code = '475' OR t0.gl_publication_code = '490' OR t0.masthead_code = 'TB') THEN 'Townsville'
    WHEN (t0.gl_publication_code = '305' OR t0.gl_publication_code = '307' OR t0.masthead_code = 'WT') THEN 'Weekly Times'
    WHEN (t0.gl_publication_code = '9001' OR t0.masthead_code = 'CS') THEN 'Code'
    WHEN (t0.gl_publication_code = '8821' OR t0.gl_publication_code = 'Punters.com.au' OR t0.masthead_code = 'PU') THEN 'Punters'
    WHEN (t0.gl_publication_code = '8822' OR t0.gl_publication_code = 'Racenet' OR t0.masthead_code = 'RN') THEN 'Racenet'
    WHEN (t0.gl_publication_code = '9653' OR t0.masthead_code = 'SC') THEN 'Supercoach Plus'
    WHEN (t0.gl_publication_code = '9600' OR t0.masthead_code = 'TS') THEN 'Taste Online'
    WHEN (t0.gl_publication_code = '9003' OR t0.masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
    WHEN (t0.gl_publication_code = '103' OR t0.masthead_code = 'The Oz') THEN 'The Oz'
    WHEN (t0.gl_publication_code = '9000' OR t0.masthead_code = 'NW') THEN 'news.com.au'
    WHEN (t0.gl_publication_code = '121') THEN 'Others'
    WHEN (t0.gl_publication_code = '9002' OR t0.masthead_code = 'BG') THEN 'Brain Games'
    WHEN (t0.gl_publication_code = '9504' OR t0.gl_publication_code = '9514' OR t0.gl_publication_code = '9556' OR t0.gl_publication_code = '9558' OR t0.gl_publication_code = '9560' OR t0.gl_publication_code = '9603' OR t0.gl_publication_code = '9623') THEN 'Others'
    WHEN (t0.gl_publication_code = '9644') THEN 'Suddenly'
    WHEN (t0.gl_publication_code = '9903') THEN 'News Corporate'
    WHEN (t0.gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
    ELSE NULL
  END AS publication_group,
  SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43 AND t0.table_union_source IN ('bmasnap_close', 'SC - CODE Manual APLS', 'SC Manual APLS')) THEN t0.ClosingBase ELSE 0 END) AS closing_base_current_fy_current_week,
  SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43 AND t0.table_union_source = 'bmasnap_open') THEN t0.OpeningBase ELSE 0 END) AS opening_base_current_fy_current_week,
  SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43) THEN (CASE WHEN (t0.fy_year <= 2024 AND t0.table_union_source = 'nfmanualhist') THEN t0.NFEarnedAmount WHEN (t0.fy_year > 2024 AND t0.table_union_source = 'subsnapfact') THEN t0.EarnedAmount ELSE NULL END) ELSE NULL END) AS conditional_earned_amount_current_fy_current_week
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
WHERE
  (CASE
    WHEN (t0.gl_publication_code = '100' OR t0.gl_publication_code = '101' OR t0.masthead_code = 'TA') THEN 'The Australian'
    WHEN (t0.gl_publication_code = '400' OR t0.gl_publication_code = '401' OR t0.gl_publication_code = '402' OR t0.masthead_code = 'CM') THEN 'Courier Mail'
    WHEN (t0.gl_publication_code = '110' OR t0.gl_publication_code = '111' OR t0.gl_publication_code = '116' OR t0.masthead_code = 'DT') THEN 'Daily Telegraph'
    WHEN (t0.gl_publication_code = '301' OR t0.gl_publication_code = '302' OR t0.gl_publication_code = '303' OR t0.masthead_code = 'HS') THEN 'Herald Sun'
    WHEN (t0.gl_publication_code = '500' OR t0.gl_publication_code = '501' OR t0.gl_publication_code = '560' OR t0.masthead_code = 'AA') THEN 'The Advertiser'
    WHEN (t0.gl_publication_code = '450' OR t0.gl_publication_code = '460' OR t0.masthead_code = 'CP') THEN 'Cairns Post'
    WHEN (t0.gl_publication_code = '350' OR t0.gl_publication_code = '351' OR t0.masthead_code = 'GA') THEN 'Geelong'
    WHEN (t0.gl_publication_code = '670' OR t0.gl_publication_code = '685' OR t0.masthead_code = 'GC') THEN 'Gold Coast'
    WHEN (t0.gl_publication_code = '961' OR t0.gl_publication_code = '962' OR t0.gl_publication_code = '963' OR t0.masthead_code = 'NT') THEN 'NT News'
    WHEN (t0.gl_publication_code = '850' OR t0.gl_publication_code = '851' OR t0.gl_publication_code = '852' OR t0.masthead_code = 'TM') THEN 'The Mercury'
    WHEN (t0.gl_publication_code = '5053' OR t0.gl_publication_code = '5253' OR t0.masthead_code = 'TC') THEN 'Toowoomba'
    WHEN (t0.gl_publication_code = '475' OR t0.gl_publication_code = '490' OR t0.masthead_code = 'TB') THEN 'Townsville'
    WHEN (t0.gl_publication_code = '305' OR t0.gl_publication_code = '307' OR t0.masthead_code = 'WT') THEN 'Weekly Times'
    WHEN (t0.gl_publication_code = '9001' OR t0.masthead_code = 'CS') THEN 'Code'
    WHEN (t0.gl_publication_code = '8821' OR t0.gl_publication_code = 'Punters.com.au' OR t0.masthead_code = 'PU') THEN 'Punters'
    WHEN (t0.gl_publication_code = '8822' OR t0.gl_publication_code = 'Racenet' OR t0.masthead_code = 'RN') THEN 'Racenet'
    WHEN (t0.gl_publication_code = '9653' OR t0.masthead_code = 'SC') THEN 'Supercoach Plus'
    WHEN (t0.gl_publication_code = '9600' OR t0.masthead_code = 'TS') THEN 'Taste Online'
    WHEN (t0.gl_publication_code = '9003' OR t0.masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
    WHEN (t0.gl_publication_code = '103' OR t0.masthead_code = 'The Oz') THEN 'The Oz'
    WHEN (t0.gl_publication_code = '9000' OR t0.masthead_code = 'NW') THEN 'news.com.au'
    WHEN (t0.gl_publication_code = '121') THEN 'Others'
    WHEN (t0.gl_publication_code = '9002' OR t0.masthead_code = 'BG') THEN 'Brain Games'
    WHEN (t0.gl_publication_code = '9504' OR t0.gl_publication_code = '9514' OR t0.gl_publication_code = '9556' OR t0.gl_publication_code = '9558' OR t0.gl_publication_code = '9560' OR t0.gl_publication_code = '9603' OR t0.gl_publication_code = '9623') THEN 'Others'
    WHEN (t0.gl_publication_code = '9644') THEN 'Suddenly'
    WHEN (t0.gl_publication_code = '9903') THEN 'News Corporate'
    WHEN (t0.gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
    ELSE 'Discontinued'
  END != 'Discontinued'
  AND CASE
    WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition'
    WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition'
    ELSE 'Digital Recognition'
  END = 'Digital Recognition'
  AND (CASE
    WHEN (t0.gl_publication_code = '100' OR t0.gl_publication_code = '101' OR t0.masthead_code = 'TA') THEN 'The Australian'
    WHEN (t0.gl_publication_code = '400' OR t0.gl_publication_code = '401' OR t0.gl_publication_code = '402' OR t0.masthead_code = 'CM') THEN 'Courier Mail'
    WHEN (t0.gl_publication_code = '110' OR t0.gl_publication_code = '111' OR t0.gl_publication_code = '116' OR t0.masthead_code = 'DT') THEN 'Daily Telegraph'
    WHEN (t0.gl_publication_code = '301' OR t0.gl_publication_code = '302' OR t0.gl_publication_code = '303' OR t0.masthead_code = 'HS') THEN 'Herald Sun'
    WHEN (t0.gl_publication_code = '500' OR t0.gl_publication_code = '501' OR t0.gl_publication_code = '560' OR t0.masthead_code = 'AA') THEN 'The Advertiser'
    WHEN (t0.gl_publication_code = '450' OR t0.gl_publication_code = '460' OR t0.masthead_code = 'CP') THEN 'Cairns Post'
    WHEN (t0.gl_publication_code = '350' OR t0.gl_publication_code = '351' OR t0.masthead_code = 'GA') THEN 'Geelong'
    WHEN (t0.gl_publication_code = '670' OR t0.gl_publication_code = '685' OR t0.masthead_code = 'GC') THEN 'Gold Coast'
    WHEN (t0.gl_publication_code = '961' OR t0.gl_publication_code = '962' OR t0.gl_publication_code = '963' OR t0.masthead_code = 'NT') THEN 'NT News'
    WHEN (t0.gl_publication_code = '850' OR t0.gl_publication_code = '851' OR t0.gl_publication_code = '852' OR t0.masthead_code = 'TM') THEN 'The Mercury'
    WHEN (t0.gl_publication_code = '5053' OR t0.gl_publication_code = '5253' OR t0.masthead_code = 'TC') THEN 'Toowoomba'
    WHEN (t0.gl_publication_code = '475' OR t0.gl_publication_code = '490' OR t0.masthead_code = 'TB') THEN 'Townsville'
    WHEN (t0.gl_publication_code = '305' OR t0.gl_publication_code = '307' OR t0.masthead_code = 'WT') THEN 'Weekly Times'
    WHEN (t0.gl_publication_code = '9001' OR t0.masthead_code = 'CS') THEN 'Code'
    WHEN (t0.gl_publication_code = '8821' OR t0.gl_publication_code = 'Punters.com.au' OR t0.masthead_code = 'PU') THEN 'Punters'
    WHEN (t0.gl_publication_code = '8822' OR t0.gl_publication_code = 'Racenet' OR t0.masthead_code = 'RN') THEN 'Racenet'
    WHEN (t0.gl_publication_code = '9653' OR t0.masthead_code = 'SC') THEN 'Supercoach Plus'
    WHEN (t0.gl_publication_code = '9600' OR t0.masthead_code = 'TS') THEN 'Taste Online'
    WHEN (t0.gl_publication_code = '9003' OR t0.masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
    WHEN (t0.gl_publication_code = '103' OR t0.masthead_code = 'The Oz') THEN 'The Oz'
    WHEN (t0.gl_publication_code = '9000' OR t0.masthead_code = 'NW') THEN 'news.com.au'
    WHEN (t0.gl_publication_code = '121') THEN 'Others'
    WHEN (t0.gl_publication_code = '9002' OR t0.masthead_code = 'BG') THEN 'Brain Games'
    WHEN (t0.gl_publication_code = '9504' OR t0.gl_publication_code = '9514' OR t0.gl_publication_code = '9556' OR t0.gl_publication_code = '9558' OR t0.gl_publication_code = '9560' OR t0.gl_publication_code = '9603' OR t0.gl_publication_code = '9623') THEN 'Others'
    WHEN (t0.gl_publication_code = '9644') THEN 'Suddenly'
    WHEN (t0.gl_publication_code = '9903') THEN 'News Corporate'
    WHEN (t0.gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
    ELSE 'Discontinued'
  END NOT IN ('Deep Niche Publications') OR (CASE
    WHEN (t0.gl_publication_code = '100' OR t0.gl_publication_code = '101' OR t0.masthead_code = 'TA') THEN 'The Australian'
    WHEN (t0.gl_publication_code = '400' OR t0.gl_publication_code = '401' OR t0.gl_publication_code = '402' OR t0.masthead_code = 'CM') THEN 'Courier Mail'
    WHEN (t0.gl_publication_code = '110' OR t0.gl_publication_code = '111' OR t0.gl_publication_code = '116' OR t0.masthead_code = 'DT') THEN 'Daily Telegraph'
    WHEN (t0.gl_publication_code = '301' OR t0.gl_publication_code = '302' OR t0.gl_publication_code = '303' OR t0.masthead_code = 'HS') THEN 'Herald Sun'
    WHEN (t0.gl_publication_code = '500' OR t0.gl_publication_code = '501' OR t0.gl_publication_code = '560' OR t0.masthead_code = 'AA') THEN 'The Advertiser'
    WHEN (t0.gl_publication_code = '450' OR t0.gl_publication_code = '460' OR t0.masthead_code = 'CP') THEN 'Cairns Post'
    WHEN (t0.gl_publication_code = '350' OR t0.gl_publication_code = '351' OR t0.masthead_code = 'GA') THEN 'Geelong'
    WHEN (t0.gl_publication_code = '670' OR t0.gl_publication_code = '685' OR t0.masthead_code = 'GC') THEN 'Gold Coast'
    WHEN (t0.gl_publication_code = '961' OR t0.gl_publication_code = '962' OR t0.gl_publication_code = '963' OR t0.masthead_code = 'NT') THEN 'NT News'
    WHEN (t0.gl_publication_code = '850' OR t0.gl_publication_code = '851' OR t0.gl_publication_code = '852' OR t0.masthead_code = 'TM') THEN 'The Mercury'
    WHEN (t0.gl_publication_code = '5053' OR t0.gl_publication_code = '5253' OR t0.masthead_code = 'TC') THEN 'Toowoomba'
    WHEN (t0.gl_publication_code = '475' OR t0.gl_publication_code = '490' OR t0.masthead_code = 'TB') THEN 'Townsville'
    WHEN (t0.gl_publication_code = '305' OR t0.gl_publication_code = '307' OR t0.masthead_code = 'WT') THEN 'Weekly Times'
    WHEN (t0.gl_publication_code = '9001' OR t0.masthead_code = 'CS') THEN 'Code'
    WHEN (t0.gl_publication_code = '8821' OR t0.gl_publication_code = 'Punters.com.au' OR t0.masthead_code = 'PU') THEN 'Punters'
    WHEN (t0.gl_publication_code = '8822' OR t0.gl_publication_code = 'Racenet' OR t0.masthead_code = 'RN') THEN 'Racenet'
    WHEN (t0.gl_publication_code = '9653' OR t0.masthead_code = 'SC') THEN 'Supercoach Plus'
    WHEN (t0.gl_publication_code = '9600' OR t0.masthead_code = 'TS') THEN 'Taste Online'
    WHEN (t0.gl_publication_code = '9003' OR t0.masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
    WHEN (t0.gl_publication_code = '103' OR t0.masthead_code = 'The Oz') THEN 'The Oz'
    WHEN (t0.gl_publication_code = '9000' OR t0.masthead_code = 'NW') THEN 'news.com.au'
    WHEN (t0.gl_publication_code = '121') THEN 'Others'
    WHEN (t0.gl_publication_code = '9002' OR t0.masthead_code = 'BG') THEN 'Brain Games'
    WHEN (t0.gl_publication_code = '9504' OR t0.gl_publication_code = '9514' OR t0.gl_publication_code = '9556' OR t0.gl_publication_code = '9558' OR t0.gl_publication_code = '9560' OR t0.gl_publication_code = '9603' OR t0.gl_publication_code = '9623') THEN 'Others'
    WHEN (t0.gl_publication_code = '9644') THEN 'Suddenly'
    WHEN (t0.gl_publication_code = '9903') THEN 'News Corporate'
    WHEN (t0.gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
    ELSE 'Discontinued'
  END IS NULL)
)
GROUP BY
  t0.fy_year,
  t0.fy_week_of_year,
  recognition_type,
  publication_group
ORDER BY
  t0.fy_year DESC, t0.fy_week_of_year DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(t0.gl_publication_code AS STRING)) AS unique_publication_codes,
  COUNT(DISTINCT SAFE_CAST(t0.masthead_code AS STRING)) AS unique_masthead_codes,
  MIN(SAFE_CAST(t0.fy_year AS STRING)) AS min_fiscal_year,
  MAX(SAFE_CAST(t0.fy_year AS STRING)) AS max_fiscal_year
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE WHEN COUNT(*) > 0 THEN 'PASS' ELSE 'FAIL' END AS record_count_check,
  CASE WHEN MAX(SAFE_CAST(t0.fy_year AS INT64)) >= 2024 THEN 'PASS' ELSE 'FAIL' END AS recent_data_check,
  CASE WHEN SUM(SAFE_CAST(t0.ClosingBase AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS closing_base_positive_check
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
LIMIT 1;","SELECT
  CASE
    WHEN (t0.gl_publication_code = '100' OR t0.gl_publication_code = '101' OR t0.masthead_code = 'TA') THEN 'The Australian'
    WHEN (t0.gl_publication_code = '400' OR t0.gl_publication_code = '401' OR t0.gl_publication_code = '402' OR t0.masthead_code = 'CM') THEN 'Courier Mail'
    WHEN (t0.gl_publication_code = '110' OR t0.gl_publication_code = '111' OR t0.gl_publication_code = '116' OR t0.masthead_code = 'DT') THEN 'Daily Telegraph'
    WHEN (t0.gl_publication_code = '301' OR t0.gl_publication_code = '302' OR t0.gl_publication_code = '303' OR t0.masthead_code = 'HS') THEN 'Herald Sun'
    WHEN (t0.gl_publication_code = '500' OR t0.gl_publication_code = '501' OR t0.gl_publication_code = '560' OR t0.masthead_code = 'AA') THEN 'The Advertiser'
    WHEN (t0.gl_publication_code = '450' OR t0.gl_publication_code = '460' OR t0.masthead_code = 'CP') THEN 'Cairns Post'
    WHEN (t0.gl_publication_code = '350' OR t0.gl_publication_code = '351' OR t0.masthead_code = 'GA') THEN 'Geelong'
    WHEN (t0.gl_publication_code = '670' OR t0.gl_publication_code = '685' OR t0.masthead_code = 'GC') THEN 'Gold Coast'
    WHEN (t0.gl_publication_code = '961' OR t0.gl_publication_code = '962' OR t0.gl_publication_code = '963' OR t0.masthead_code = 'NT') THEN 'NT News'
    WHEN (t0.gl_publication_code = '850' OR t0.gl_publication_code = '851' OR t0.gl_publication_code = '852' OR t0.masthead_code = 'TM') THEN 'The Mercury'
    WHEN (t0.gl_publication_code = '5053' OR t0.gl_publication_code = '5253' OR t0.masthead_code = 'TC') THEN 'Toowoomba'
    WHEN (t0.gl_publication_code = '475' OR t0.gl_publication_code = '490' OR t0.masthead_code = 'TB') THEN 'Townsville'
    WHEN (t0.gl_publication_code = '305' OR t0.gl_publication_code = '307' OR t0.masthead_code = 'WT') THEN 'Weekly Times'
    WHEN (t0.gl_publication_code = '9001' OR t0.masthead_code = 'CS') THEN 'Code'
    WHEN (t0.gl_publication_code = '8821' OR t0.gl_publication_code = 'Punters.com.au' OR t0.masthead_code = 'PU') THEN 'Punters'
    WHEN (t0.gl_publication_code = '8822' OR t0.gl_publication_code = 'Racenet' OR t0.masthead_code = 'RN') THEN 'Racenet'
    WHEN (t0.gl_publication_code = '9653' OR t0.masthead_code = 'SC') THEN 'Supercoach Plus'
    WHEN (t0.gl_publication_code = '9600' OR t0.masthead_code = 'TS') THEN 'Taste Online'
    WHEN (t0.gl_publication_code = '9003' OR t0.masthead_code = 'AP') THEN 'Apple Podcast: Crime X'
    WHEN (t0.gl_publication_code = '103' OR t0.masthead_code = 'The Oz') THEN 'The Oz'
    WHEN (t0.gl_publication_code = '9000' OR t0.gl_publication_code = 'news.com.au') THEN 'news.com.au'
    WHEN (t0.gl_publication_code = '121') THEN 'Others'
    WHEN (t0.gl_publication_code = '9002' OR t0.masthead_code = 'BG') THEN 'Brain Games'
    WHEN (t0.gl_publication_code = '9504' OR t0.gl_publication_code = '9514' OR t0.gl_publication_code = '9556' OR t0.gl_publication_code = '9558' OR t0.gl_publication_code = '9560' OR t0.gl_publication_code = '9603' OR t0.gl_publication_code = '9623') THEN 'Others'
    WHEN (t0.gl_publication_code = '9644') THEN 'Suddenly'
    WHEN (t0.gl_publication_code = '9903') THEN 'News Corporate'
    WHEN (t0.gl_publication_code = 'Group Newspaper Management - Digital') THEN 'Group Newspaper Management - Digital'
    ELSE 'Discontinued'
  END AS publication_group,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0
GROUP BY
  publication_group
ORDER BY
  record_count DESC
LIMIT 5;",43,37641205-ec3e-4184-a5dd-f5ca79248335
"SELECT
  UPPER(SAFE_CAST(vendor_name AS STRING)) AS vendor,
  SAFE_CAST(draw_date AS DATE) AS draw_date,
  COUNT(*) AS total_records_for_vendor_date
FROM
  `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
WHERE
  SAFE_CAST(dw_tgt_partition_date AS DATE) >= `CURRENT_DATE`('Australia/Sydney') - 1
  AND SAFE_CAST(draw_date AS DATE) BETWEEN DATE_SUB(DATE_TRUNC(`CURRENT_DATE`('Australia/Sydney'), ISOWEEK), INTERVAL 4 WEEK) AND DATE_SUB(DATE_TRUNC(`CURRENT_DATE`('Australia/Sydney'), WEEK(MONDAY)), INTERVAL 1 DAY)
GROUP BY
  1, 2
ORDER BY
  draw_date DESC, vendor ASC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(vendor_name AS STRING)) AS unique_vendors,
  COUNT(DISTINCT SAFE_CAST(draw_date AS DATE)) AS unique_draw_dates,
  MIN(SAFE_CAST(draw_date AS DATE)) AS min_draw_date,
  MAX(SAFE_CAST(draw_date AS DATE)) AS max_draw_date
FROM
  `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
LIMIT 1;","SELECT
  CASE
    WHEN COUNT(*) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS records_exist_check,
  CASE
    WHEN MAX(SAFE_CAST(draw_date AS DATE)) >= DATE_SUB(`CURRENT_DATE`('Australia/Sydney'), INTERVAL 7 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
WHERE
  SAFE_CAST(dw_tgt_partition_date AS DATE) >= `CURRENT_DATE`('Australia/Sydney') - 1
LIMIT 1;","SELECT
  CASE
    WHEN t0.alert_status_final = 0 THEN 'OK'
    WHEN t0.alert_status_final = -1 THEN 'Ignored (Budget/Forecast)'
    WHEN t0.alert_status_final = -2 THEN 'Severely Delayed'
    WHEN t0.alert_status_final = -3 THEN 'Zero Rows'
    ELSE 'Other'
  END AS alert_status_category,
  COUNT(t0.table_id) AS table_count
FROM
  (
    WITH
      table_list AS (
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
        SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
        SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
        SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
        SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
        SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
        SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
      ),
      table_update_list AS (
        SELECT
          dataset_id,
          table_id,
          datetime(timestamp_millis(last_modified_time), ""Australia/Sydney"") AS last_update_time,
          row_count,
          table_list.update_frequency
        FROM
          `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
          JOIN
          table_list
          ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
      ),
      load_stats AS (
        SELECT
          * EXCEPT (last_update_time),
          datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago
        FROM
          table_update_list
      ),
      alert_sts AS (
        SELECT
          *,
          CASE
            WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
            WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
            WHEN row_count = 0 THEN -3
            ELSE 0
          END AS alert_status
        FROM
          load_stats
      )
    SELECT
      table_id,
      CASE
        WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
        ELSE alert_status
      END AS alert_status_final
    FROM
      alert_sts
  ) AS t0
GROUP BY
  alert_status_category
ORDER BY
  table_count DESC
LIMIT 10;",44,f9b52275-5924-4afb-8222-2c55854183ba
"SELECT
  SAFE_CAST(calendar.fy_year AS INT) AS fiscal_year,
  SAFE_CAST(calendar.fy_week_of_year AS INT) AS fiscal_week_of_year,
  SAFE_CAST(os.gl_publication_code AS STRING) AS gl_publication_code,
  SAFE_CAST(os.os_level_4 AS STRING) AS os_level_4,
  SAFE_CAST(os.os_level_5 AS STRING) AS os_level_5,
  SUM(SAFE_CAST(os.Actual_Amount AS BIGNUMERIC)) AS total_actual_amount,
  SUM(SAFE_CAST(os.Last_Year_Actual_Amount AS BIGNUMERIC)) AS total_last_year_actual_amount,
  SUM(SAFE_CAST(os.Budget_Amount AS BIGNUMERIC)) AS total_budget_amount,
  SUM(SAFE_CAST(os.Forecast_Amount AS BIGNUMERIC)) AS total_forecast_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
WHERE
  SAFE_CAST(calendar.fy_year AS INT) = (SELECT MAX(SAFE_CAST(fy_year AS INT)) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar`)
  AND SAFE_CAST(os.os_level_4 AS STRING) IN ('Total Revenue', 'Total Expenses')
GROUP BY
  1, 2, 3, 4, 5
ORDER BY
  1 DESC, 2 DESC
LIMIT 10;","SELECT
  COUNT(1) AS total_records,
  COUNT(DISTINCT SAFE_CAST(fiscal_week_id AS INT)) AS unique_fiscal_week_ids,
  MIN(SAFE_CAST(fiscal_week_id AS INT)) AS min_fiscal_week_id,
  MAX(SAFE_CAST(fiscal_week_id AS INT)) AS max_fiscal_week_id,
  COUNT(DISTINCT SAFE_CAST(gl_publication_code AS STRING)) AS unique_gl_publication_codes,
  COUNT(DISTINCT SAFE_CAST(os_level_4 AS STRING)) AS unique_os_level_4s
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
LIMIT 1;","SELECT
  CASE
    WHEN MAX(SAFE_CAST(c.fy_first_day_of_week AS DATE)) > DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check,
  CASE
    WHEN SUM(SAFE_CAST(os.Actual_Amount AS BIGNUMERIC)) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS actual_amount_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
    ON os.fiscal_week_id = c.fy_year_week_number
  JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_period_control` AS control
    ON control.source_week_number = c.fy_year_week_number
WHERE
  control.period_name IN ('CP')
LIMIT 1;","SELECT
  CASE
    WHEN SAFE_CAST(fy_last_day_of_week AS DATE) = SAFE_CAST(fy_last_day_of_month AS DATE) THEN 'Y'
    ELSE 'N'
  END AS month_end_flag,
  COUNT(1) AS count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar`
WHERE
  fy_last_day_of_week IS NOT NULL AND fy_last_day_of_month IS NOT NULL
GROUP BY
  month_end_flag
LIMIT 2;",45,cbab66df-64cb-4ec6-a112-088557684b7e
"SELECT
  DATE_TRUNC(DATE(DATETIME(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
  SAFE_CAST(REPLACE(project.name, 'ncau-data-newsquery-', '') AS STRING) AS project,
  SAFE_CAST(service.description AS STRING) AS service,
  SUM(cost) AS total_cost_aud
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20230131') AND
  service.description NOT IN ('Invoice')
GROUP BY
  1, 2, 3
ORDER BY
  service_month DESC, total_cost_aud DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT SAFE_CAST(project.name AS STRING)) AS unique_projects,
  COUNT(DISTINCT SAFE_CAST(service.description AS STRING)) AS unique_services,
  MIN(DATE(DATETIME(usage_end_time, ""Australia/Sydney""))) AS min_service_day,
  MAX(DATE(DATETIME(usage_end_time, ""Australia/Sydney""))) AS max_service_day
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20231231')
LIMIT 1;","SELECT
  CASE
    WHEN SUM(cost) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS total_cost_positive_check,
  CASE
    WHEN MAX(DATE(DATETIME(usage_end_time, ""Australia/Sydney""))) >= CURRENT_DATE() - INTERVAL 2 DAY THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", '20230101') AND PARSE_DATE(""%Y%m%d"", '20230131') AND
  service.description NOT IN ('Invoice')
LIMIT 1;","SELECT
  SAFE_CAST(service.description AS STRING) AS service_description,
  SUM(cost) AS cost_if_included
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  SAFE_CAST(service.description AS STRING) = 'Invoice'
GROUP BY
  1
LIMIT 1;",46,fbf4d483-b17a-4040-b18c-091481d62200
"SELECT t0.os_level_6, t0.fiscal_year, t0.month_short_name, SUM(SAFE_CAST(t0.TM1_Amount AS BIGNUMERIC)) AS total_tm1_amount, SUM(SAFE_CAST(t0.Tableau_Actual_Amount AS BIGNUMERIC)) AS total_tableau_actual_amount, SUM(ABS(SAFE_CAST(t0.Tableau_Actual_Amount AS BIGNUMERIC) - SAFE_CAST(t0.TM1_Amount AS BIGNUMERIC))) AS total_reconciliation_variance FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` AS t0 WHERE SAFE_CAST(t0.fiscal_year AS INT64) IN (2026, 2025) AND SAFE_CAST(t0.month_short_name AS STRING) IN ('Jul', 'Feb') AND SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.publication_code AS STRING), '^(^[0-9]+$)$') GROUP BY t0.os_level_6, t0.fiscal_year, t0.month_short_name ORDER BY t0.fiscal_year DESC, t0.month_short_name DESC LIMIT 10;","SELECT COUNT(*) AS total_records, COUNT(DISTINCT SAFE_CAST(t0.fiscal_year AS INT64)) AS unique_fiscal_years, COUNT(DISTINCT SAFE_CAST(t0.month_short_name AS STRING)) AS unique_months, COUNT(DISTINCT SAFE_CAST(t0.os_level_6 AS STRING)) AS unique_os_level_6, COUNT(DISTINCT SAFE_CAST(t0.publication_code AS STRING)) AS unique_publication_codes, MIN(SAFE_CAST(t0.fiscal_year AS INT64)) AS min_fiscal_year, MAX(SAFE_CAST(t0.fiscal_year AS INT64)) AS max_fiscal_year FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` AS t0 LIMIT 1;","SELECT CASE WHEN SUM(SAFE_CAST(t0.TM1_Amount AS BIGNUMERIC)) > 0 THEN 'PASS' ELSE 'FAIL' END AS tm1_amount_check, CASE WHEN MAX(SAFE_CAST(t0.fiscal_year AS INT64)) >= 2026 THEN 'PASS' ELSE 'FAIL' END AS latest_year_check FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` AS t0 WHERE SAFE_CAST(t0.fiscal_year AS INT64) = 2026 AND SAFE_CAST(t0.month_short_name AS STRING) = 'Jul' LIMIT 1;","SELECT CASE WHEN (SAFE.REGEXP_CONTAINS(SAFE_CAST(t0.publication_code AS STRING), '^(^[0-9]+$)$')) THEN 'Numeric Publication Code' ELSE 'Non-Numeric Publication Code' END AS publication_code_type, COUNT(*) AS record_count FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` AS t0 GROUP BY publication_code_type LIMIT 2;",47,f353b933-30eb-4853-9976-0d35371db7d7
"WITH
  tab_num AS (
    SELECT
      fiscal_week_end_date,
      COUNT(*) AS num
    FROM
      `ncau-data-newsquery-prd.newsquery_data_backup.tableau_operating_statement_query`
    WHERE
      os_l7 IN ('NSW', 'REGIONAL', 'NIS', 'VIC', 'DIGITAL OTHER', 'QLD', 'REGIONALS', 'SA WA', 'PRESTIGE',
        'THE WEEKLY TIMES')
    GROUP BY 1
  ),
  model_rev AS (
    SELECT
      CAST(forecast_timestamp AS date) AS fiscal_week_end_date,
      forecast_value AS ml_forecast_rev
    FROM
      ML.FORECAST(MODEL `ncau-data-newsquery-dev.arima_dataset.model_rev`, STRUCT(20 AS horizon, 0.9 AS confidence_level))
  ),
  main_data AS (
    SELECT
      m.fiscal_week_end_date,
      m.publication_name,
      m.os_l7,
      m.actual,
      m.actual_volume,
      m.forecast,
      m.forecast_volume,
      m.budget,
      m.budget_volume,
      COALESCE(a.ml_forecast_rev, 0) AS ml_forecast_rev
    FROM
      `ncau-data-newsquery-prd.newsquery_data_backup.tableau_operating_statement_query` AS m
      LEFT JOIN
      (
        SELECT
          mr.fiscal_week_end_date,
          sum(ml_forecast_rev) / tn.num AS ml_forecast_rev
        FROM
          model_rev AS mr
          LEFT JOIN
          tab_num AS tn
          ON mr.fiscal_week_end_date = tn.fiscal_week_end_date
        GROUP BY 1, tn.num
      ) AS a
      ON m.fiscal_week_end_date = a.fiscal_week_end_date
    WHERE
      m.month_end_flag = false AND m.os_l7 IN ('NSW', 'REGIONAL', 'NIS', 'VIC', 'DIGITAL OTHER', 'QLD', 'REGIONALS',
        'SA WA', 'PRESTIGE', 'THE WEEKLY TIMES')
  )
SELECT
  SAFE_CAST(fiscal_week_end_date AS DATE) AS fiscal_week_end_date,
  SAFE_CAST(os_l7 AS STRING) AS os_l7,
  SAFE_CAST(publication_name AS STRING) AS publication_name,
  SUM(SAFE_CAST(actual AS BIGNUMERIC)) AS total_actual_revenue,
  SUM(SAFE_CAST(actual_volume AS BIGNUMERIC)) AS total_actual_volume,
  SUM(SAFE_CAST(forecast AS BIGNUMERIC)) AS total_forecast_revenue,
  SUM(SAFE_CAST(ml_forecast_rev AS BIGNUMERIC)) AS total_ml_forecast_revenue
FROM
  main_data
GROUP BY
  1, 2, 3
ORDER BY
  fiscal_week_end_date DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_rows,
  COUNT(DISTINCT SAFE_CAST(publication_name AS STRING)) AS unique_publication_names,
  COUNT(DISTINCT SAFE_CAST(os_l7 AS STRING)) AS unique_os_l7_segments,
  MIN(SAFE_CAST(fiscal_week_end_date AS DATE)) AS min_fiscal_week_end_date,
  MAX(SAFE_CAST(fiscal_week_end_date AS DATE)) AS max_fiscal_week_end_date
FROM
  `ncau-data-newsquery-prd.newsquery_data_backup.tableau_operating_statement_query`
LIMIT 1;","SELECT
  CASE
    WHEN MAX(SAFE_CAST(fiscal_week_end_date AS DATE)) >= CURRENT_DATE() - INTERVAL 14 DAY THEN 'PASS'
    ELSE 'FAIL'
  END AS data_freshness_check,
  CASE
    WHEN SUM(SAFE_CAST(actual AS BIGNUMERIC)) > 0 THEN 'PASS'
    ELSE 'FAIL'
  END AS actual_revenue_positive_check
FROM
  `ncau-data-newsquery-prd.newsquery_data_backup.tableau_operating_statement_query`
WHERE
  SAFE_CAST(latest_year_flag AS INT64) = 1
LIMIT 1;","SELECT
  SAFE_CAST(os_l7 AS STRING) AS operating_segment,
  COUNT(*) AS record_count,
  SUM(CASE WHEN SAFE_CAST(month_end_flag AS BOOL) = TRUE THEN 1 ELSE 0 END) AS month_end_records
FROM
  `ncau-data-newsquery-prd.newsquery_data_backup.tableau_operating_statement_query`
WHERE
  SAFE_CAST(os_l7 AS STRING) IN ('NSW', 'REGIONAL', 'NIS', 'VIC', 'DIGITAL OTHER', 'QLD', 'REGIONALS', 'SA WA', 'PRESTIGE', 'THE WEEKLY TIMES')
GROUP BY
  operating_segment
ORDER BY
  record_count DESC
LIMIT 10;",48,415199ee-c67c-4b55-85f1-38b4aa291931
"SELECT
  ci.fiscal_week_id,
  ci.day_of_week,
  SUM(CASE WHEN ci.charge_type = 'DRAW' THEN ci.route_volume ELSE 0 END) AS total_draw_volume,
  SUM(ci.charge_amount) AS total_charge_amount
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
  LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal
    ON ci.charge_date = cal.calendar_date
WHERE
  SAFE_CAST(LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) AS INT64) = 2025
GROUP BY
  ci.fiscal_week_id,
  ci.day_of_week
ORDER BY
  ci.fiscal_week_id DESC, ci.day_of_week DESC
LIMIT 10;","SELECT
  COUNT(*) AS total_records,
  COUNT(DISTINCT ci.fiscal_week_id) AS unique_fiscal_weeks,
  COUNT(DISTINCT ci.gl_publication_code) AS unique_publication_codes,
  MIN(ci.charge_date) AS min_charge_date,
  MAX(ci.charge_date) AS max_charge_date
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
LIMIT 1;","SELECT
  CASE WHEN SUM(ci.charge_amount) > 0 THEN 'PASS' ELSE 'FAIL' END AS charge_amount_positive_check,
  CASE WHEN MAX(ci.charge_date) >= CURRENT_DATE() - INTERVAL 30 DAY THEN 'PASS' ELSE 'FAIL' END AS data_freshness_check
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
LIMIT 1;","SELECT
  CASE
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('500', '560') THEN 'ADV'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '100' THEN 'AUS'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('400', '402') THEN 'CM'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '9504' THEN 'Delicious'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '9505' THEN 'Delicious Specials'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('110', '116') THEN 'DT'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '350' THEN 'GAD'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '670' THEN 'GCB'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '180' THEN 'Group Shared Services'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '156' THEN 'Hobart Print Services'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('301', '303') THEN 'HS'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '5003' THEN 'MDM'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('850', '852') THEN 'MERCURY'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('961', '963') THEN 'NTN'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '158' THEN 'Perth Print Services'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = 'Post Courier' THEN 'Post Courier'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '5024' THEN 'SC'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) IN ('9514', '9515') THEN 'Taste'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '5053' THEN 'TCHRN'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '450' THEN 'TCP'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '475' THEN 'TVB'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '9560' THEN 'Vogue'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '9556' THEN 'Vogue Living'
    WHEN SAFE_CAST(ci.gl_publication_code AS STRING) = '305' THEN 'WT'
    ELSE 'Other'
  END AS publication_type,
  COUNT(*) AS record_count
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci
GROUP BY
  publication_type
ORDER BY
  record_count DESC
LIMIT 10;",49,c441950c-1e3f-432c-9838-847d1d315b9e
