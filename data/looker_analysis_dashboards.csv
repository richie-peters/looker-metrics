response_id,dashboard_id,dashboard_name,business_domain,complexity_score,consolidation_score,score_reasoning
0,e83da1de-4227-43e6-bcc6-73051c66914b,Ad Events Dashboard,sales,7.0,9.0,"Queries involve multiple levels of nesting and complex string transformations (REGEXP_CONTAINS, LOWER, SAFE_CAST). All queries originate from the same base table (`v_adsales_revenue_client`) and apply similar initial filters (`relative_fy_year_offset`). Subsequent filters on `financial_year` and specific dimensions (`fy_year_month_number`, `booking_name`, `revenue_transaction_status`) suggest different views of the same core data, making consolidation highly beneficial for performance and maintainability."
1,9269e9c6-1ad0-4415-96c3-aca8a710ba01,Team Sales Performance - FY26 (Interim),sales,8.0,7.0,"High complexity due to extensive nesting, intricate conditional logic for date selection and metric derivation, and pervasive use of SAFE_CAST/SAFE_DIVIDE. Hardcoded values for dates, financial periods, and unit conversions add to maintenance burden. High consolidation potential as both queries originate from the same core dataset and share many common intermediate calculations, suggesting a unified data model could simplify future development and analysis."
2,61f1feb4-fc3e-4bee-b987-84c86cfe6425,Digital - Publications and Products Monthly,advertising,6.0,8.0,"The dashboard queries utilize nested CASE statements for complex dimension derivation and apply multiple filters on the same base table. All queries originate from a single primary data source, 'adsales_performance', and share common filtering criteria (e.g., financial year). Consolidating the dimension derivations and common filters into a single, more comprehensive query would significantly improve efficiency, maintainability, and consistency across the dashboard's components, reducing redundant data processing."
3,6a26c78f-0070-4fb3-88b8-691ee4a4485a,Circ Budget Revenue Weekly Report,finance,8.0,9.0,"The dashboard's SQL queries exhibit deep nesting (up to 10 layers), extensive use of complex CASE statements for data transformation and derivation, and multiple hardcoded values. The queries share a common base CTE and filtering logic, but then diverge into highly specific calculations, many of which are similar or redundant across different queries. Consolidating these queries into a single, well-structured query would significantly improve readability, maintainability, and potentially performance by reducing redundant data scans and complex subquery materialization. The hardcoded values also contribute to complexity and reduce flexibility."
4,6de90f2a-b3f3-46fe-a4fe-13474b2d6618,PACMAN AND EXCLUDE LOD,finance,7.0,8.0,"High complexity due to nested queries, dynamic dimension logic driven by a CASE statement, and multiple data sources. High consolidation potential as both primary tables (`dv_exclude_product_l3_and_l4` and `dv_pacman_running_expense`) appear to contain related financial data (Product Revenue, Product L3) and reside in the same dataset, suggesting they could be unified into a single, more comprehensive view for reporting."
5,705edcb5-737a-4600-b1a7-11870177f97a,Programmatic Impact Reporting,advertising,7.0,9.0,"High complexity due to nested subqueries and specific filtering logic for each metric. High consolidation potential as all queries originate from the same `v_adsales_revenue_client` table and share common core filters, making a unified dataset highly efficient."
6,b15d856f-e3ce-4991-bf2a-92395390524f,Programmatic Rolling 60 Day Overview_NQ Data,advertising,2.0,6.0,"Low complexity due to simple aggregations and a single, albeit nested, CASE statement for categorization. Medium consolidation potential as multiple queries use the same base measure (RevenueNet) from the same table, differing only in the grouping dimension or its derived category. One query is a duplicate."
7,783f341c-8660-4e90-bab8-9bc860119cf5,Deals Dashboard,advertising,6.0,8.0,"The dashboard uses a single primary data source and consistently derives several key dimensions (e.g., Reporting Month, Financial Period) through nested subqueries. The complexity comes from these nested derivations and a specific 6-month date offset logic. Consolidation is highly beneficial because all queries share the same base table and derived dimensions, differing mainly in their specific filters and selected output dimensions/metrics. A single parameterized query could serve all these use cases, improving maintainability and reducing redundant logic, especially given the redundant filter found in one query."
8,77c68c35-20ce-477a-b216-0c781d43a8ca,Cecile - Adsales Adhoc Analysis,advertising,5.0,8.0,"The dashboard queries are relatively straightforward, using basic SELECT/FROM/WHERE/GROUP BY clauses without complex joins or window functions, leading to a medium technical complexity. However, a high consolidation score is warranted due to the prevalence of hardcoded filters (e.g., specific years, weeks, transaction statuses, GL codes, invoice numbers) across multiple queries. Two out of three queries target the same 'v_adsales_revenue_client' table. This ad-hoc nature suggests significant benefits from consolidating logic, parameterizing filters, and potentially integrating with lookup tables for filter values, which would enhance reusability, maintainability, and data governance."
9,b1c5901f-a535-42eb-870d-05cc025f7c27,OS extract for month end rec,finance,8.0,9.0,"The dashboard's queries exhibit high complexity due to multiple nested subqueries, CTEs, and extensive JOIN operations across several finance-related dimension and fact tables. Column aliasing (clmnX_) further obscures readability. There is significant potential for consolidation as all queries share the same core data model and many common filters, differing mainly in the specific dimensions and measures selected for aggregation. A single, well-parameterized query could serve all components, improving performance and maintainability."
10,4d8074b2-17a8-48ba-babe-c536359b1f64,Final_Draft Adsales Performance Dashboard - FY25 20241127,sales,9.0,6.0,"The dashboard utilizes deeply nested SQL queries with multiple layers of `CASE` statements and derived columns, indicating high technical complexity. It performs intricate conditional aggregations based on various financial offsets and business flags. There is significant redundancy in calculated fields, leading to potential maintenance overhead and confusion. While the main query is consolidated, the presence of many duplicate calculations suggests an opportunity for streamlining the metric definition layer."
11,6f1c8731-02da-464f-b146-bf2947860735,Programmatic Sales_NQ Data,advertising,7.0,8.0,"The dashboard queries primarily interact with a single base table, 'programmatic_fin_month', to derive various financial period and group-related dimensions and metrics. The presence of nested queries, complex date/month transformations (e.g., fiscal month remapping), and hardcoded values contributes to a moderate-to-high complexity. Consolidation is highly beneficial as all queries operate on the same underlying data, allowing for a single, more efficient data source that pre-calculates common dimensions and filter flags, reducing redundant processing and simplifying dashboard maintenance."
12,4bd7954c-5a94-4fb6-92e1-ed152b1cf7b3,Copy of Interim Adsales Performance Dashboard for FY26,advertising,7.0,8.0,"Complexity arises from nested subqueries, conditional logic for fiscal year offsets, and specific hardcoded categorization rules. Consolidation is highly beneficial as all metrics originate from the same base table, but different aggregation levels and specific filters across original queries necessitate careful combination, ideally using CTEs and window functions to maintain data integrity."
13,258a722d-9b6e-45df-ba00-1b9954ec36b2,Debtor to Account Mapping,advertising,3.0,2.0,"The dashboard primarily displays a direct mapping from a single view. The queries are straightforward selections with minimal transformations. One query fetches metadata about the source table, which is a separate concern. The 'consolidation' benefit is low as the queries serve distinct purposes (base data vs. filtered data vs. metadata)."
14,57d87efe-c112-4d42-be1b-045f0c8ca73e,Commercial Finance Scorecards,finance,8.0,9.0,"The dashboard queries exhibit high complexity due to deeply nested subqueries and intricate CASE statements for deriving dimensions and applying filters. There is significant repetition in the underlying data source and filtering logic across queries, with variations primarily in the specific metrics (e.g., _V, _6W suffixes) and hardcoded dates used. This redundancy presents a strong opportunity for consolidation into a single, more flexible and parameterized query, reducing maintenance overhead and improving performance."
16,23c8b213-a9f0-4158-b8fa-bff14425abb5,TM1 NewsQuery Tables,finance,3.0,6.0,"The dashboard queries two distinct tables within the same 'corefin' domain, suggesting potential for unified analysis. However, the queries themselves are simple SELECTs with no joins or complex calculations, indicating low technical complexity. Consolidation would be beneficial to provide a holistic view of PBF (Performance Based Funding) related metrics if common dimensions exist, which are not explicitly selected in both queries."
17,d05b3d29-4437-4ee5-987a-e0109eb9590e,Digi Subsifying,finance,8.0,9.0,"The dashboard's SQL queries are highly complex due to deep nesting, extensive use of aliased columns (clmnX_), and intricate CASE statements for dimension mapping and dynamic metric selection. The logic for calculating fiscal periods and applying filters is duplicated across queries. Consolidation would significantly improve maintainability and readability, as all queries operate on the same base table and share common filtering and dimension derivation logic. The dynamic metric/period selection could be unified with parameters."
18,d7412673-0af1-4efe-8374-ca475b001fb6,Finance OS datasource template report,finance,7.0,8.0,"The dashboard queries involve multiple nested CTEs and LEFT JOINs across a central fact table and several dimension tables (publication hierarchy, calendar, GL department). The extensive list of financial metrics (Actual, Budget, Forecast, Last Year, etc.) indicates a comprehensive financial reporting scope. A 'calender_table' CTE is defined but unused in the provided queries, suggesting potential dead code or incomplete query samples, adding to perceived complexity. The queries are highly repetitive, differing primarily in their final aggregation and grouping, making them strong candidates for consolidation into a single, more flexible underlying data source or view."
19,a1b901e6-c4fb-44bc-955a-3a7070c15829,Revenue Movement,finance,7.0,8.0,"The queries exhibit high technical complexity due to multiple layers of nested subqueries and intricate CASE statements for deriving new dimensions and measures. All queries originate from the same core table and share many common dimensions and aggregations, differing primarily in specific filtering criteria and the inclusion of a few unique dimensions. This strong commonality indicates a high potential for consolidation into a single, more efficient and maintainable data model or view."
20,e9d8a216-4950-4d30-b344-5011776edbdf,Adex Report,advertising,8.0,9.0,"Deeply nested Looker Studio generated SQL with complex date range calculations and conditional aggregations. High consolidation potential as all queries derive from the same base CTEs and apply similar date logic, differing mainly in dimensions and specific filtered metrics."
21,d4d68a71-2b12-4caf-bc6b-96fc2d18a025,Adsales Details Dashboard,advertising,6.0,7.0,"Queries use nested selects and repeated CASE logic for financial vs. calendar date dimensions. Multiple hardcoded filter values suggest a need for parameterization or a more unified data access layer. All queries originate from the same base table, indicating strong potential for consolidation."
22,f353b933-30eb-4853-9976-0d35371db7d7,Month End Reporting Reconcilation,finance,2.0,1.0,"The SQL query is very simple, involving basic column selection and aggregation (COUNT, SUM) from a single table. There are no complex joins, window functions, or subqueries for derived metrics beyond simple aliasing. Consolidation benefit is low as the query is specific to month-end reconciliation and does not show signs of being part of a larger, fragmented reporting structure."
23,5491badf-5ec0-4b4f-a427-b12a3a3395dd,Programmatic / Tubi Performance FY25,finance,9.0,9.0,"Highly nested SQL with complex, repeated CASE WHEN logic for deriving core dimensions and metrics. Multiple queries extract similar data points for different timeframes (current FY actuals vs. current/previous FY totals), indicating significant consolidation potential into a single, more flexible data model. The use of hardcoded dates and offsets further complicates maintenance."
24,155c4518-72bf-4309-a0e9-240dd564f421,Portfolio Performance Dashboard,finance|sales,8.0,6.0,"The dashboard queries exhibit high complexity due to deeply nested subqueries, extensive use of window functions (SUM OVER PARTITION BY), and dynamic logic based on Looker Studio parameters. The identical CTE across all queries suggests a strong candidate for a consolidated view or pre-calculated table, but the final aggregations and filters vary significantly, limiting full consolidation into a single dashboard query without losing flexibility."
25,52c11c9c-052a-4e45-9cda-8fecd87d7964,Team Sales Performance - FY26 (Interim)(with Pluto Reporting Date),sales,8.0,8.0,"The dashboard's SQL queries are highly complex, featuring deeply nested subqueries, intricate CASE statements for metric derivation and categorization, and window functions. There's significant redundancy in metric calculation logic across different queries, particularly for current/next FY revenue and programmatic revenue. The use of hardcoded dates and string comparisons further complicates maintainability and indicates a strong need for consolidation and parameterization."
26,c441950c-1e3f-432c-9838-847d1d315b9e,Circulation Insights for Analysis,finance,7.0,8.0,"The dashboard queries multiple related metrics from the same core data sources (`v_asl_circualtion_insights` and `v_calendar_dim`) with a consistent base filter (`fiscal_year = 2025`). The nested structure and repeated `CASE` logic for deriving metrics and dimensions suggest significant opportunity for consolidation into a single, more efficient query or a pre-calculated view. This would reduce redundant data processing (evidenced by large `total_processed_bytes` for similar `runtime_seconds` across queries)."
27,80ca81f3-0671-40ef-a0a9-825a1580ca1b,Team Sales Performance,sales,1.0,2.0,"The provided SQL queries are very simple, primarily extracting distinct dimension values for filter controls or dropdowns. They involve no complex joins, aggregations, or calculations of business metrics. Therefore, the technical complexity is low. The consolidation benefit is also low for these specific queries as they serve distinct purposes (populating different filter options). If the dashboard contained actual performance metrics, the consolidation score would likely be higher."
28,b9dfd2f4-92fa-4f81-a5b1-17de880470f9,Contra Report,finance;sales,8.0,7.0,"The dashboard queries exhibit significant complexity due to deep nesting, multiple hardcoded values, and intricate conditional logic (CASE statements, IN clauses, LIKE patterns). The use of two primary tables (`details_dashboard` and `v_adsales_revenue_client_daily`) without explicit joins in the original queries suggests separate data contexts, but common dimensions like `adpoint_account_number` and `advertiser_name` indicate potential for consolidation. The numerous hardcoded values for account numbers, advertiser names, and filter conditions make the queries brittle and difficult to maintain, strongly suggesting a need for consolidation and parameterization."
29,4d22b4c2-4bb3-49db-a0c1-4d46d4fba101,Copy of Acquisitions - Extracts,finance,7.0,8.0,"The dashboard's queries are highly nested and apply extensive `CASE WHEN` logic for categorization of mastheads, subscription types, customer types, and source channels. All queries target the same base table and share significant portions of their transformation logic, making them strong candidates for consolidation into a single, more efficient query or view. The complexity arises from the deep nesting and intricate string manipulation for deriving dimensions."
30,5dae02f0-dc48-418c-bdf9-5e5d2b1d6e26,Optimizing Digital Subscriptions Report,consumer,8.0,9.0,"High complexity due to deeply nested SQL, extensive hardcoded `CASE` statements for masthead categorization, and custom fiscal date calculations. High consolidation potential as all queries originate from the same base table and derive overlapping dimensions, suggesting a unified data model would be more efficient and maintainable. The repeated complex logic for masthead grouping and recognition type is a prime candidate for consolidation into a single view or CTEs."
31,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3,Consumer Finance Landing Page,finance,2.0,3.0,"Queries are simple SELECTs, COUNTs, and GROUP BYs on a single table. No complex joins, CTEs, or window functions. The dashboard likely uses basic Looker Studio components for filtering and aggregation. Consolidation benefit is low for the SQL itself, as it's already hitting a single source for basic operations."
32,3ee20092-1897-49b7-8bcd-4157d5f816eb,AdSales Data for Pacing Report,sales,6.0,9.0,"The dashboard queries are all selecting distinct dimension values from the same base table (`adsales_performance`) with varying filter conditions. This indicates a high potential for consolidating these dimension lookups into a single, more efficient query or a governed dimension table. The SQL itself uses nested selects and SAFE_CAST, adding a moderate level of complexity for standard Looker Studio generated queries."
33,1a5f7b4e-ea3a-46e4-8b77-b428f4178510,Team Sales Performance,sales,8.0,9.0,"The dashboard queries exhibit high complexity due to deeply nested subqueries (up to 7 levels), multiple CTEs, and the use of window functions. The logic for deriving metrics and dimensions involves complex CASE statements and conditional date comparisons. A significant portion of the SQL is duplicated across queries, indicating a high potential for consolidation. Many metrics are re-aliased versions of the same underlying calculation, further supporting consolidation."
34,f65a9149-93b4-4aa9-aef6-d12002853222,Digital Video Content Audio,advertising,2.0,6.0,"Queries are simple dimension lookups with various hardcoded filters, likely used for filter controls or dimension lists in Looker Studio. No complex joins or calculations are present. Consolidation could involve a single data source with dynamic filters for different Looker Studio components, reducing redundant data fetches and improving maintainability."
35,601ed0d2-e944-4189-8170-d593c8e72026,Adex,advertising,8.0,9.0,"The SQL queries exhibit high complexity due to deep nesting of subqueries, extensive use of `CASE` statements for conditional logic (especially for time period calculations and currency formatting), and aliasing of intermediate columns (`clmnX_`) which makes readability challenging. The same core business logic (e.g., 'Rolling 12 months' spend calculation, 'ty'/'ly' determination) is repeated across multiple queries, indicating significant potential for consolidation into a more efficient and maintainable structure, likely using CTEs or a single, comprehensive view."
36,6e8b534b-485a-48dd-842d-13dc6bebb01a,SuperCoach Subscriptions,consumer,7.0,8.0,"The SQL queries exhibit moderate complexity due to nested subqueries, window functions (though not directly used in final SELECTs), and derived dimensions. There's significant overlap in the base table, core filters (masthead, movement type, date range), and the primary metric (distinct subscription count). Consolidating these into a single, more efficient query with conditional aggregations would greatly improve performance, maintainability, and reduce redundant data processing."
37,f7a9efeb-df3c-45c9-899d-0bcada701572,Salaries & Wages Dashboard UAT Version,finance,7.0,3.0,"High complexity due to deeply nested subqueries, conditional aggregations, and multiple data sources for metadata. Low consolidation score as the primary metric query and the data freshness query serve distinct purposes and are not naturally combined into a single analytical view. Note: The dashboard name 'Salaries & Wages Dashboard' appears to be a misnomer, as the underlying SQL queries are entirely focused on 'Circulation' and 'Finance' data."
38,a8fe6bb0-3cbf-4d6e-8838-fa6e6dce447f,Pacing Dashboard,advertising,4.0,6.0,"Queries involve simple nesting, arithmetic, and string concatenations. Two queries hit the same base table with different filters and derived dimensions, suggesting potential for consolidation into a single query with conditional logic or by selecting all base columns. The third query is a simple dimension lookup from a different table."
39,bb49fa78-5abe-4e68-a9c1-8172a832e724,optimization,finance,8.0,9.0,"Deeply nested SQL with complex, often redundant, CASE statements and hardcoded date/year values. The `(1=X)` pattern for selecting logic branches is a common Looker Studio anti-pattern that makes queries verbose and difficult to read/maintain. All queries operate on the same base table and filter on the same dimensions, indicating strong potential for a unified, parameterized view. The conflicting Looker Studio metric IDs (e.g., `t0_D1827278460229110162`) across queries for different underlying calculations suggest a lack of metric standardization and potential for user confusion."
40,a17622e2-ad43-49cc-b3c5-1c95036fd14,Advertising Rebates Dashboard,advertising,6.0,8.0,"The dashboard queries are relatively simple, primarily involving aggregations and filtering on a single base table. However, there's significant repetition of common filters and overlapping metrics across different queries, indicating a high potential for consolidation and parameterization to improve maintainability and reduce redundancy. Hardcoded values for year, month, and specific account/division filters further support this."
41,c560ed20-040d-4c6a-9c3f-ec8bce27d132,Xtend Details,advertising,7.0,8.0,"The dashboard queries, though distinct, all originate from the same base table (`v_adsales_revenue_client`) and share common filtering logic (e.g., `source_publishing_division`, `revenue_transaction_status`). The specific filters for each query could be managed through parameters or conditional logic within a single, more comprehensive query. This consolidation would reduce redundant data processing, simplify maintenance, and improve overall query efficiency. The use of nested queries and `SAFE_CAST` for `calendar_month` adds to the technical complexity."
42,87651b69-c43e-471f-9c4b-98df120a844,Programmatic Sales Patches,advertising,3.0,7.0,"The dashboard's queries are relatively simple, performing basic selections and aggregations from a single BigQuery table. The nesting is typical of Looker Studio's internal query generation and adds superficial complexity. A high consolidation score is given because all queries hit the same base table, and the main data query could be generalized to serve multiple views or filters, reducing redundant data processing. The presence of hardcoded values also indicates a strong opportunity for parameterization and consolidation."
43,fed70b12-c274-4cde-9920-592ca4c4dab0,Independent Agency Report,finance,8.0,9.0,"Deeply nested SQL with redundant calculations and hardcoded date logic. Two out of three queries target the same base table (`sbx_dcp.ia`) with identical primary filters and calculate the same core revenue metrics, differing only in grouping dimensions. This strongly suggests opportunities for consolidation into a single underlying data model or view. Fiscal year logic is hardcoded as primary, ignoring calendar year options."
44,8956e94b-f6d1-46a3-9c7f-87a91fbe98b5,LODs,sales,8.0,9.0,"The dashboard queries exhibit high complexity due to deep nesting (up to 3 levels), extensive use of `CASE WHEN` for derived dimensions and conditional measures, and complex filtering logic involving multiple `AND`/`OR` conditions, `UPPER`, `IFNULL`, `LIKE`, and `IN` clauses. A common CTE (`SFCE_USER`) and the primary data source (`v_adsales_revenue_client_weekly`) are joined multiple times. The use of generic `clmnX_` aliases further obscures readability. Consolidation is highly beneficial because all three queries share an identical, complex base subquery (including source table, CTEs, joins, filters, and initial aggregations). The only differences lie in the final `SELECT` list and `GROUP BY` clauses, making them ideal candidates for a single, unified base view or CTE to improve performance, maintainability, and data consistency."
45,d3bcf796-2396-4a6f-b0a3-da0b7f299a58,Publisher and Product Performance Dashboard - FY25 v2,finance,7.0,9.0,"The dashboard queries all originate from a single source table (`adsales_performance`) and share common dimensions (`product_group`) and filtering logic. The revenue calculations involve multiple nested `CASE` statements and flags, indicating a need for clear definition and potential consolidation into a single, well-defined view for improved maintainability and performance. The hardcoded product group values and fiscal year offsets suggest opportunities for parameterization."
