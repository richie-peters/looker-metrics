metric_id,base_metric_id,metric_name,business_description,gcp_project_name,dataset_name,table_name,sql_logic,metric_sql_core,metric_type,is_kpi,business_criticality,response_id,dashboard_id
current_fy_pmp_revenue,gross_revenue_amount_adjusted,Current FY PMP Revenue,"Total gross revenue for PMP (Programmatic Guaranteed) deals within the current fiscal year, after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn29_) AS current_fy_pmp_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PMP') THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_performance_revenue,gross_revenue_amount_adjusted,Historical Current FY Performance Revenue,"Total gross revenue for 'PERFORMANCE' type deals within the current fiscal year, specifically for historical reporting dates (before a fixed reference date), after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn33_) AS historical_current_fy_performance_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PERFORMANCE') AND (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney'))) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
current_fy_omp_revenue,gross_revenue_amount_adjusted,Current FY OMP Revenue,"Total gross revenue for OMP (Open Market Place) deals within the current fiscal year, after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn31_) AS current_fy_omp_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'OMP') THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
current_fy_total_adjusted_revenue,gross_revenue_amount_adjusted,Current FY Total Adjusted Revenue,"Total gross revenue for the current fiscal year, adjusted based on revenue type (Performance vs. Programmatic Source) and excluding specific 'CTR_' advertiser group and 'PERFORMANCE' revenue type combinations.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn26_) AS current_fy_total_adjusted_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_total_adjusted_revenue,gross_revenue_amount_adjusted,Historical Current FY Total Adjusted Revenue,"Total gross revenue for the current fiscal year, adjusted based on revenue type, for historical reporting dates (before a fixed reference date), and excluding specific 'CTR_' advertiser group and 'PERFORMANCE' revenue type combinations.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn34_) AS historical_current_fy_total_adjusted_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney')) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_omp_revenue,gross_revenue_amount_adjusted,Historical Current FY OMP Revenue,"Total gross revenue for OMP (Open Market Place) deals within the current fiscal year, specifically for historical reporting dates (before a fixed reference date), after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn38_) AS historical_current_fy_omp_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'OMP') THEN (CASE WHEN (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney')) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END) ELSE NULL END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_tubi_revenue,gross_revenue_amount_adjusted,Historical Current FY TUBI Revenue,"Total gross revenue for TUBI deals within the current fiscal year, specifically for historical reporting dates (before a fixed reference date), after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn35_) AS historical_current_fy_tubi_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'TUBI') AND (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney'))) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE 0 END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_pg_revenue,gross_revenue_amount_adjusted,Historical Current FY PG Revenue,"Total gross revenue for PG (Programmatic Guaranteed) deals within the current fiscal year, specifically for historical reporting dates (before a fixed reference date), after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn40_) AS historical_current_fy_pg_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PG') THEN (CASE WHEN (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney')) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END) ELSE NULL END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
current_fy_performance_revenue,gross_revenue_amount_adjusted,Current FY Performance Revenue,"Total gross revenue for 'PERFORMANCE' type deals within the current fiscal year, after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn36_) AS current_fy_performance_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PERFORMANCE') THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
current_fy_pg_revenue,gross_revenue_amount_adjusted,Current FY PG Revenue,"Total gross revenue for PG (Programmatic Guaranteed) deals within the current fiscal year, after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn32_) AS current_fy_pg_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PG') THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
current_fy_tubi_revenue,gross_revenue_amount_adjusted,Current FY TUBI Revenue,"Total gross revenue for TUBI deals within the current fiscal year, after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn30_) AS current_fy_tubi_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');",CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'TUBI') THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE 0 END,measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
historical_current_fy_pmp_revenue,gross_revenue_amount_adjusted,Historical Current FY PMP Revenue,"Total gross revenue for PMP (Programmatic Guaranteed) deals within the current fiscal year, specifically for historical reporting dates (before a fixed reference date), after applying specific adjustments and exclusions.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT
  SUM(clmn39_) AS historical_current_fy_pmp_revenue
FROM (
  SELECT
    CASE WHEN (clmn21_ = 'OMP') THEN clmn37_ ELSE NULL END AS clmn38_,
    CASE WHEN (clmn21_ = 'PMP') THEN clmn37_ ELSE NULL END AS clmn39_,
    CASE WHEN (clmn21_ = 'PG') THEN clmn37_ ELSE NULL END AS clmn40_,
    clmn29_, clmn30_, clmn31_, clmn32_, clmn26_, clmn33_, clmn34_, clmn35_, clmn36_,
    clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
  FROM (
    SELECT
      CASE WHEN (clmn21_ = 'PMP') THEN clmn27_ ELSE NULL END AS clmn29_,
      CASE WHEN (clmn21_ = 'TUBI') THEN clmn27_ ELSE 0 END AS clmn30_,
      CASE WHEN (clmn21_ = 'OMP') THEN clmn27_ ELSE NULL END AS clmn31_,
      CASE WHEN (clmn21_ = 'PG') THEN clmn27_ ELSE NULL END AS clmn32_,
      CASE WHEN (clmn24_ AND clmn16_) THEN clmn27_ ELSE NULL END AS clmn33_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn34_,
      CASE WHEN (clmn25_ AND clmn16_) THEN clmn27_ ELSE 0 END AS clmn35_,
      CASE WHEN (clmn21_ = 'PERFORMANCE') THEN clmn27_ ELSE NULL END AS clmn36_,
      CASE WHEN (clmn9_ < clmn0_) THEN clmn27_ ELSE NULL END AS clmn37_,
      clmn26_, clmn21_, clmn5_, clmn15_, clmn28_, clmn22_, clmn14_, clmn7_, clmn8_
    FROM (
      SELECT
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn26_,
        CASE WHEN (clmn8_ = 0) THEN clmn23_ ELSE NULL END AS clmn27_,
        CASE WHEN (clmn19_ AND clmn24_) THEN 'TO EXCL' ELSE 'INCLUDE' END AS clmn28_,
        clmn0_, clmn24_, clmn25_, clmn16_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
      FROM (
        SELECT
          CASE WHEN (clmn21_ IN ('PERFORMANCE')) THEN clmn6_ ELSE clmn20_ END AS clmn23_,
          (clmn21_ = 'PERFORMANCE') AS clmn24_,
          (clmn21_ = 'TUBI') AS clmn25_,
          clmn0_, clmn16_, clmn19_, clmn21_, clmn5_, clmn15_, clmn22_, clmn14_, clmn7_, clmn8_, clmn9_
        FROM (
          SELECT
            (clmn12_ = 'CTR_') AS clmn19_,
            CASE WHEN (clmn17_ = 'PROGRAMMATIC SOURCE') THEN clmn6_ ELSE NULL END AS clmn20_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn21_,
            CASE WHEN (clmn11_ = 'TUBI') THEN 'TUBI' WHEN (clmn13_ = 'GUARANTEED') THEN 'PG' WHEN (clmn13_ = 'NON-GUARANTEED') THEN 'OMP' WHEN (clmn13_ = 'PMP') THEN 'PMP' WHEN (clmn18_ = 'Y') THEN 'PERFORMANCE' ELSE NULL END AS clmn22_,
            clmn0_, clmn16_, clmn5_, clmn6_, clmn15_, clmn14_, clmn7_, clmn8_, clmn9_
          FROM (
            SELECT
              SAFE.LEFT(clmn1_, 4) AS clmn12_,
              UPPER(SAFE_CAST(clmn2_ AS STRING)) AS clmn13_,
              SAFE_CAST(clmn3_ AS INT64) AS clmn14_,
              SAFE_CAST(clmn4_ AS INT64) AS clmn15_,
              (clmn9_ < clmn0_) AS clmn16_,
              UPPER(SAFE_CAST(clmn10_ AS STRING)) AS clmn17_,
              CASE WHEN (clmn11_ = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END AS clmn18_,
              clmn0_, clmn5_, clmn6_, clmn7_, clmn8_, clmn9_, clmn11_
            FROM (
              SELECT
                DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney') AS clmn0_,
                t0.advertiser_group AS clmn1_,
                t0.cost_model_type AS clmn2_,
                t0.financial_month AS clmn3_,
                t0.financial_quarter AS clmn4_,
                t0.financial_short_month AS clmn5_,
                t0.gross_revenue_amount AS clmn6_,
                t0.relative_fy_month_offset AS clmn7_,
                t0.relative_fy_year_offset AS clmn8_,
                t0.reporting_date AS clmn9_,
                t0.revenue_group_subtype AS clmn10_,
                t0.unified_publication_name AS clmn11_
              FROM
                `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
            )
          )
        )
      )
    )
  )
)
WHERE
  (clmn8_ = 0 AND clmn28_ = 'INCLUDE');","CASE WHEN (CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END = 'PMP') THEN (CASE WHEN (t0.reporting_date < DATE(TIMESTAMP '2025-07-20 22:25:41.690557+00', 'Australia/Sydney')) THEN (CASE WHEN (t0.relative_fy_year_offset = 0) THEN (CASE WHEN ((CASE WHEN (t0.unified_publication_name = 'TUBI') THEN 'TUBI' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'GUARANTEED') THEN 'PG' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'NON-GUARANTEED') THEN 'OMP' WHEN (UPPER(SAFE_CAST(t0.cost_model_type AS STRING)) = 'PMP') THEN 'PMP' WHEN (CASE WHEN (t0.unified_publication_name = 'Run of Audience Extension') THEN 'Y' ELSE 'N' END = 'Y') THEN 'PERFORMANCE' ELSE NULL END IN ('PERFORMANCE')) THEN t0.gross_revenue_amount ELSE (CASE WHEN (UPPER(SAFE_CAST(t0.revenue_group_subtype AS STRING)) = 'PROGRAMMATIC SOURCE') THEN t0.gross_revenue_amount ELSE NULL END) END) ELSE NULL END) ELSE NULL END) ELSE NULL END",measure,True,high,0,5491badf-5ec0-4b4f-a427-b12a3a3395dd
total_cost_aud,total_cost_aud,Total Cost (AUD),"The total cost incurred in Australian Dollars for GCP services, calculated as the sum of 'cost' from the billing export, excluding 'Invoice' service descriptions.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(cost) AS total_cost_aud
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
WHERE
  date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
  service.description NOT IN ('Invoice')",sum(cost),measure,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_cost_component,total_cost_aud,Total Cost by Cost Component (AUD),"The total cost incurred in Australian Dollars, broken down by individual cost components (SKU descriptions).",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  t0.cost_component
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
GROUP BY
  t0.cost_component",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_service_day_filtered,total_cost_aud,Total Cost by Service and Day (Filtered Services) (AUD),"The total cost incurred in Australian Dollars, broken down by service and service day, specifically for a predefined list of key GCP services.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  t0.service,
  t0.service_day
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
WHERE
  t0.service IN ('BigQuery Reservation API', 'BigQuery', 'Cloud Storage', 'Support', 'Cloud Dataflow', 'Cloud Composer', 'Cloud Run Functions', 'Compute Engine', 'Vertex AI', 'Cloud SQL')
GROUP BY
  t0.service,
  t0.service_day",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_project,total_cost_aud,Total Cost by Project (AUD),"The total cost incurred in Australian Dollars, broken down by GCP project.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  t0.project
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
GROUP BY
  t0.project",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_service,total_cost_aud,Total Cost by Service (AUD),"The total cost incurred in Australian Dollars, broken down by GCP service.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  t0.service
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
GROUP BY
  t0.service",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_component_project_service,total_cost_aud,"Total Cost by Cost Component, Project, and Service (AUD)","The total cost incurred in Australian Dollars, broken down by cost component, GCP project, and GCP service.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  t0.cost_component,
  t0.project,
  t0.service
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
GROUP BY
  t0.cost_component,
  t0.project,
  t0.service",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_cost_by_service_month,total_cost_aud,Total Cost by Service Month (AUD),"The total cost incurred in Australian Dollars, aggregated monthly.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(t0.cost_aud) AS total_cost_aud,
  SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(t0.service_month AS DATETIME), MONTH) AS DATE) AS service_month
FROM
  (
    SELECT
      date(datetime(usage_end_time, ""Australia/Sydney"")) AS service_day,
      date_trunc(date(datetime(usage_end_time, ""Australia/Sydney"")), MONTH) AS service_month,
      `replace`(project.name, 'ncau-data-newsquery-', '') AS project,
      service.description AS service,
      sku.description AS cost_component,
      sum(cost) AS cost_aud
    FROM
      `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`
    WHERE
      date(_PARTITIONTIME) BETWEEN PARSE_DATE(""%Y%m%d"", @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE) AND
      service.description NOT IN ('Invoice')
    GROUP BY 1, 2, 3, 4, 5
  ) AS t0
GROUP BY
  service_month",sum(cost),aggregation,True,high,1,fbf4d483-b17a-4040-b18c-091481d62200
total_digital_subscriptions_movements_by_quarter_2025_excluding_deep_niche,total_movements,"Total Digital Subscription Movements by FY Quarter (2025, Excl. Deep Niche)","Counts the total number of movements (acquisitions/cancellations) for digital subscriptions in Fiscal Year 2025, grouped by fiscal quarter, excluding 'Deep Niche Publications' and 'Exclude' masthead groups. Filters for 'Standard Paid' or 'Other Paid' classification level 1, and specific classification level 2 values.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  CASE WHEN (t0.fy_week_of_year <= 13) THEN 1 WHEN (t0.fy_week_of_year <= 26) THEN 2 WHEN (t0.fy_week_of_year <= 39) THEN 3 ELSE 4 END AS fy_quarter,
  COUNT(1) AS total_digital_subscriptions_movements
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND t0.fy_year IN (2025)
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
  AND (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END NOT IN ('Deep Niche Publications') OR CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END IS NULL)
GROUP BY
  fy_quarter
ORDER BY
  total_digital_subscriptions_movements DESC
LIMIT 2000001;",COUNT(1),measure,False,medium,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
total_digital_subscriptions_acquisitions_by_fy_year_excluding_deep_niche,total_acquisitions,Total Digital Subscription Acquisitions by FY Year (Excl. Deep Niche),"Calculates the sum of acquisition counts for digital subscriptions, grouped by fiscal year. Filters for 'Standard Paid' or 'Other Paid' classification level 1, specific classification level 2 values, and masthead groups 'The Australian', 'Metro', 'Regionals', 'Other Publications'. Excludes 'Exclude' masthead group.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  t0.fy_year AS fy_year,
  SUM(t0.acquisition_count) AS total_digital_subscriptions_acquisitions
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END IN ('The Australian', 'Metro', 'Regionals', 'Other Publications')
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
GROUP BY
  fy_year
ORDER BY
  total_digital_subscriptions_acquisitions DESC
LIMIT 2000001;",SUM(t0.acquisition_count),measure,True,high,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
total_digital_subscriptions_movements_by_delivery_medium_excluding_deep_niche,total_movements,Total Digital Subscription Movements by Delivery Medium (Excl. Deep Niche),"Counts the total number of movements for digital subscriptions, grouped by a normalized delivery medium type (e.g., 'Digital' for 'Not Available'). Filters for 'Standard Paid' or 'Other Paid' classification level 1, specific classification level 2 values, and masthead groups 'The Australian', 'Regionals', 'Other Publications', 'Metro'. Excludes 'Exclude' masthead group.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  CASE WHEN (t0.delivery_medium_type = 'Not Available') THEN 'Digital' ELSE t0.delivery_medium_type END AS delivery_medium_type_normalized,
  COUNT(1) AS total_digital_subscriptions_movements
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END IN ('The Australian', 'Regionals', 'Other Publications', 'Metro')
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
GROUP BY
  delivery_medium_type_normalized
ORDER BY
  delivery_medium_type_normalized DESC
LIMIT 2000001;",COUNT(1),measure,False,medium,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
total_digital_subscriptions_movements_by_frontbook_backbook_group_2025_Q3,total_movements,"Total Digital Subscription Movements by Frontbook/Backbook Group (2025, Q3)","Counts the total number of movements for digital subscriptions in Fiscal Year 2025, specifically for Q3, grouped by the 'frontbook_backbook_group_name'. Filters for 'Standard Paid' or 'Other Paid' classification level 1, and specific classification level 2 values. Excludes 'Exclude' masthead group.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  t0.frontbook_backbook_group_name AS frontbook_backbook_group_name,
  COUNT(1) AS total_digital_subscriptions_movements
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND t0.fy_year IN (2025)
  AND CASE WHEN (t0.fy_week_of_year <= 13) THEN 1 WHEN (t0.fy_week_of_year <= 26) THEN 2 WHEN (t0.fy_week_of_year <= 39) THEN 3 ELSE 4 END IN (3)
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
GROUP BY
  frontbook_backbook_group_name
ORDER BY
  frontbook_backbook_group_name DESC
LIMIT 2000001;",COUNT(1),measure,False,medium,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
total_digital_subscriptions_movements_by_delivery_medium_2026,total_movements,Total Digital Subscription Movements by Delivery Medium (2026),"Counts the total number of movements for digital subscriptions in Fiscal Year 2026, grouped by a normalized delivery medium type (e.g., 'Digital' for 'Not Available'). Filters for 'Standard Paid' or 'Other Paid' classification level 1, and specific classification level 2 values. Excludes 'Exclude' masthead group.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  CASE WHEN (t0.delivery_medium_type = 'Not Available') THEN 'Digital' ELSE t0.delivery_medium_type END AS delivery_medium_type_normalized,
  COUNT(1) AS total_digital_subscriptions_movements
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
  AND t0.fy_year IN (2026)
GROUP BY
  delivery_medium_type_normalized
ORDER BY
  delivery_medium_type_normalized DESC
LIMIT 2000001;",COUNT(1),measure,False,medium,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
total_digital_subscriptions_movements_by_fy_week_excluding_deep_niche,total_movements,Total Digital Subscription Movements by FY Week (Excl. Deep Niche),"Counts the total number of movements for digital subscriptions, grouped by fiscal week of year. Filters for 'Standard Paid' or 'Other Paid' classification level 1, specific classification level 2 values, and masthead groups 'The Australian', 'Regionals', 'Other Publications', 'Metro'. Excludes 'Exclude' masthead group.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  t0.fy_week_of_year AS fy_week_of_year,
  COUNT(1) AS total_digital_subscriptions_movements
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements` AS t0
WHERE
  CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END != 'Exclude'
  AND t0.table_nm IN ('mov', 'agg')
  AND t0.classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND t0.classification_level_2 IN ('DPE only', 'Digital', 'Essentials', 'Bundles', 'Gift Bundles Activation', 'Gift Digital Activation', 'Mind Games')
  AND CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC')) THEN 'Regionals' WHEN (t0.masthead = 'WT') THEN 'Other Publications' WHEN (t0.masthead IN ('SC', 'CS', 'TS', 'AP', 'RN', 'PU')) THEN 'Deep Niche Publications' WHEN (t0.masthead IS NULL) THEN 'check' ELSE 'Exclude' END IN ('The Australian', 'Regionals', 'Other Publications', 'Metro')
  AND CASE WHEN (CONCAT(SAFE_CAST(t0.delivery_medium_type AS STRING),' ',SAFE_CAST(t0.subscriber_has_email_flag AS STRING)) IN ('Digital Y', 'Digital N', 'Bundle Y', 'Not Available Y')) THEN 'Digital Subscriptions' ELSE 'Print Subscriptions' END IN ('Digital Subscriptions')
GROUP BY
  fy_week_of_year
ORDER BY
  total_digital_subscriptions_movements DESC
LIMIT 2000001;",COUNT(1),measure,False,medium,2,1e9c7a29-2613-47b8-85d1-127e5b8c66ac
data_load_datetime_truncated_q1,data_load_datetime_truncated,Data Load Datetime (Truncated to Second) - Q1 Context,"The timestamp indicating when the data record was loaded, truncated to the second, specifically filtered for financial years 2023-2026, 'Billed' or 'Booked' revenue status, 'ADPT' source system, 'Digital' revenue type, and calendar year 2024, with a base reporting date filter from 2022-01-01 and 'STD' record type.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT DATETIME_TRUNC(t0.data_load_datetime, SECOND) AS data_load_datetime_truncated FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.reporting_date >= '2022-01-01' AND t0.record_type_code = 'STD'","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
data_load_datetime_truncated_q2,data_load_datetime_truncated,Data Load Datetime (Truncated to Second) - Q2 Context,"The timestamp indicating when the data record was loaded, truncated to the second, filtered for financial years 2023-2026, 'Billed' or 'Booked' revenue status, 'ADPT' source system, and 'Digital' revenue type.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT DATETIME_TRUNC(t0.data_load_datetime, SECOND) AS data_load_datetime_truncated FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital'","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
calendar_year_q3,calendar_year,Calendar Year - Q3 Context,"The calendar year of the record, filtered for financial years 2023-2026, 'Billed' or 'Booked' revenue status, 'STD' record type, 'ADPT' source system, 'Digital' revenue type, and 'January' calendar month name, with a base reporting date filter from 2022-01-01.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.calendar_year FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.calendar_month_name IN ('January') AND t0.reporting_date >= '2022-01-01'",calendar_year,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
unified_publication_name_q4,unified_publication_name,Unified Publication Name - Q4 Context,"The name of the unified publication, filtered for financial years 2023-2026, 'Billed' or 'Booked' revenue status, 'ADPT' source system, 'Digital' revenue type, calendar year 2024, and 'Guaranteed' cost model type.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",unified_publication_name,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
advertiser_name_q5,advertiser_name,Advertiser Name - Q5 Context,"The name of the advertiser, used as a grouping dimension for revenue and commission amounts, filtered for financial years 2023-2026, 'Billed' or 'Booked' revenue status, 'STD' record type, 'ADPT' source system, 'Digital' revenue type, excluding 'Medium Rare Content Agency' publishing division, calendar year 2024, and 'Guaranteed' cost model type.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.advertiser_name FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",advertiser_name,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
booking_line_number_q5,booking_line_number,Booking Line Number - Q5 Context,"The unique identifier for a booking line item, used as a grouping dimension for revenue and commission amounts, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.booking_line_number FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",booking_line_number,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
booking_number_q5,booking_number,Booking Number - Q5 Context,"The unique identifier for a booking, used as a grouping dimension for revenue and commission amounts, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.booking_number FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",booking_number,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
calendar_month_q5,calendar_month,Calendar Month (Integer) - Q5 Context,"The calendar month number, cast to INT64, used as a grouping dimension for revenue and commission amounts, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT SAFE_CAST(t0.calendar_month AS INT64) FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",SAFE_CAST(calendar_month AS INT64),dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
sum_gross_revenue_amount_q5,gross_revenue_amount,Sum of Gross Revenue Amount - Q5 Context,"The total gross revenue amount, aggregated by advertiser, booking line, booking, calendar month, and unified publication name, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT SUM(t0.gross_revenue_amount) AS sum_gross_revenue_amount FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",SUM(gross_revenue_amount),measure,True,high,3,38809f41-7138-4b94-94d1-ae919b2d9517
sum_agency_commission_amount_q5,agency_commission_amount,Sum of Agency Commission Amount - Q5 Context,"The total agency commission amount, aggregated by advertiser, booking line, booking, calendar month, and unified publication name, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT SUM(t0.agency_commission_amount) AS sum_agency_commission_amount FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",SUM(agency_commission_amount),measure,False,medium,3,38809f41-7138-4b94-94d1-ae919b2d9517
unified_publication_name_q5_grouping,unified_publication_name,Unified Publication Name (Grouping) - Q5 Context,"The name of the unified publication, used as a grouping dimension for revenue and commission amounts, filtered as per Q5 context.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND t0.source_publishing_division != 'Medium Rare Content Agency' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024') AND t0.cost_model_type IN ('Guaranteed')",unified_publication_name,dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
data_load_datetime_truncated_q6,data_load_datetime_truncated,Data Load Datetime (Truncated to Second) - Q6 Context,"The timestamp indicating when the data record was loaded, truncated to the second, filtered for financial years 2023-2026 AND 2025, 'Billed' or 'Booked' revenue status, 'STD' record type, 'ADPT' source system, 'Digital' revenue type, and calendar years 2024 or 2025.",ncau-data-newsquery-prd,asl_advertising,v_adsales_revenue_client,"SELECT DATETIME_TRUNC(t0.data_load_datetime, SECOND) AS data_load_datetime_truncated FROM `ncau-data-newsquery-prd.asl_advertising.v_adsales_revenue_client` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) BETWEEN '2023' AND '2026' AND t0.revenue_transaction_status IN ('Billed', 'Booked') AND t0.record_type_code = 'STD' AND t0.source_system_code = 'ADPT' AND t0.revenue_type = 'Digital' AND SAFE_CAST(t0.calendar_year AS STRING) IN ('2024', '2025') AND SAFE_CAST(t0.financial_year AS STRING) IN ('2025')","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,low,3,38809f41-7138-4b94-94d1-ae919b2d9517
closing_base_fy2025_current_week_digital_recognition,closing_base,"Closing Base (FY2025, Current Week, Digital Recognition)","The total number of subscriptions at the end of the fiscal week for Fiscal Year 2025, specifically for 'Digital Recognition' subscriptions. This metric is calculated based on 'ClosingBase' from specific data sources ('bmasnap_close', 'SC - CODE Manual APLS', 'SC Manual APLS'). The current fiscal week is derived from a fixed date (2025-04-30) relative to a base date (2024-07-03).",ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,"SELECT SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43) THEN (CASE WHEN (t0.table_union_source IN ('bmasnap_close', 'SC - CODE Manual APLS', 'SC Manual APLS')) THEN t0.ClosingBase ELSE 0 END) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 WHERE (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END != 'Discontinued' AND CASE WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition' WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition' ELSE 'Digital Recognition' END = 'Digital Recognition' AND (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END NOT IN ('Deep Niche Publications') OR CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END IS NULL))","CASE WHEN (t0.table_union_source IN ('bmasnap_close', 'SC - CODE Manual APLS', 'SC Manual APLS')) THEN t0.ClosingBase ELSE 0 END",measure,True,high,4,37641205-ec3e-4184-a5dd-f5ca79248335
opening_base_fy2025_current_week_digital_recognition,opening_base,"Opening Base (FY2025, Current Week, Digital Recognition)","The total number of subscriptions at the beginning of the fiscal week for Fiscal Year 2025, specifically for 'Digital Recognition' subscriptions. This metric is calculated based on 'OpeningBase' from the 'bmasnap_open' data source. The current fiscal week is derived from a fixed date (2025-04-30) relative to a base date (2024-07-03).",ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,"SELECT SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43) THEN (CASE WHEN (t0.table_union_source = 'bmasnap_open') THEN t0.OpeningBase ELSE 0 END) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 WHERE (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END != 'Discontinued' AND CASE WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition' WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition' ELSE 'Digital Recognition' END = 'Digital Recognition' AND (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END NOT IN ('Deep Niche Publications') OR CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END IS NULL))",CASE WHEN (t0.table_union_source = 'bmasnap_open') THEN t0.OpeningBase ELSE 0 END,measure,True,high,4,37641205-ec3e-4184-a5dd-f5ca79248335
earned_amount_fy2025_current_week_digital_recognition,earned_amount,"Earned Amount (FY2025, Current Week, Digital Recognition)","The total earned amount for Fiscal Year 2025, specifically for 'Digital Recognition' subscriptions, for the current fiscal week. This metric sums 'EarnedAmount' when the data source is 'subsnapfact' and the fiscal year is 2025. The current fiscal week is derived from a fixed date (2025-04-30) relative to a base date (2024-07-03).",ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,"SELECT SUM(CASE WHEN (t0.fy_year = 2025 AND t0.fy_week_of_year = 43) THEN (CASE WHEN (t0.table_union_source = 'subsnapfact') THEN t0.EarnedAmount ELSE NULL END) ELSE NULL END) FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 WHERE (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END != 'Discontinued' AND CASE WHEN (t0.delivery_medium_type = 'Print') THEN 'Print Recognition' WHEN (t0.subscriber_has_email_flag = 'N') THEN 'Print Recognition' ELSE 'Digital Recognition' END = 'Digital Recognition' AND (CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END NOT IN ('Deep Niche Publications') OR CASE WHEN (t0.classification_level_2_description = 'The Australian') THEN 'The Australian' WHEN (t0.classification_level_2_description IN ('Courier Mail', 'Daily Telegraph', 'Herald Sun', 'The Advertiser')) THEN 'Metros' WHEN (t0.classification_level_2_description IN ('Cairns Post', 'Geelong', 'Gold Coast', 'NT News', 'The Mercury', 'Toowoomba', 'Townsville')) THEN 'Regionals' WHEN (t0.classification_level_2_description = 'Weekly Times') THEN 'Others' WHEN (t0.classification_level_2_description IN ('Racenet', 'Supercoach Plus', 'Code', 'Punters', 'Apple Podcast: Crime X', 'Taste Online')) THEN 'Deep Niche Publications' ELSE 'Discontinued' END IS NULL))",CASE WHEN (t0.fy_year <= 2024 AND t0.table_union_source = 'nfmanualhist') THEN t0.NFEarnedAmount WHEN (t0.fy_year > 2024 AND t0.table_union_source = 'subsnapfact') THEN t0.EarnedAmount ELSE NULL END,measure,True,high,4,37641205-ec3e-4184-a5dd-f5ca79248335
product_revenue_actuals_2025,product_revenue,"Product Revenue (Actuals, FY 2025)","Total product revenue for Fiscal Year 2025, specifically for 'Actuals' data.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT SUM(Product_Revenue) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',SUM(Product_Revenue),measure,True,high,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
product_revenue_actuals_all_years,product_revenue,"Product Revenue (Actuals, All Fiscal Years)","Total product revenue for all fiscal years, specifically for 'Actuals' data.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT SUM(Product_Revenue) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Source = 'Actuals',SUM(Product_Revenue),measure,True,high,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
expense_margin_1_2_actuals_2025,expense,"Expense (Margin Level 1 or 2, Actuals, FY 2025)","Total expense for Fiscal Year 2025, specifically for 'Actuals' data and where Margin Level is '1' or '2'.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,"SELECT SUM(CASE WHEN SAFE_CAST(Margin_Level AS STRING) IN ('1', '2') THEN Expense ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals'","SUM(CASE WHEN SAFE_CAST(Margin_Level AS STRING) IN ('1', '2') THEN Expense ELSE 0 END)",measure,True,high,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_1_actuals_2025,running_expense_level_1,"Running Expense Level 1 (Actuals, FY 2025)","Running Expense for Level 1, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_1_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_1_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_1_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_1_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_1_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_1_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_2_actuals_2025,running_expense_level_2,"Running Expense Level 2 (Actuals, FY 2025)","Running Expense for Level 2, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_2_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_2_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_2_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_2_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_2_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_2_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_3_actuals_2025,running_expense_level_3,"Running Expense Level 3 (Actuals, FY 2025)","Running Expense for Level 3, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_3_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_3_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_3_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_3_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_3_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_3_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_4_actuals_2025,running_expense_level_4,"Running Expense Level 4 (Actuals, FY 2025)","Running Expense for Level 4, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_4_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_4_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_4_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_4_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_4_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_4_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_5_actuals_2025,running_expense_level_5,"Running Expense Level 5 (Actuals, FY 2025)","Running Expense for Level 5, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_5_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_5_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_5_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_5_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_5_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_5_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
running_expense_level_6_actuals_2025,running_expense_level_6,"Running Expense Level 6 (Actuals, FY 2025)","Running Expense for Level 6, filtered for 'Actuals' data in Fiscal Year 2025, dynamically selected based on Category (Consumer/Advertising).",ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT MAX(CASE WHEN Category = 'CONSUMER' THEN Running_Expense_CONSUMER_6_Actuals WHEN Category = 'ADVERTISING' THEN Running_Expense_ADVERTISING_6_Actuals ELSE 0 END) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025 AND Source = 'Actuals',MAX(CASE WHEN Category = 'CONSUMER' AND Source = 'Actuals' THEN Running_Expense_CONSUMER_6_Actuals WHEN Category = 'ADVERTISING' AND Source = 'Actuals' THEN Running_Expense_ADVERTISING_6_Actuals WHEN Category = 'CONSUMER' AND Source = 'Budget' THEN Running_Expense_CONSUMER_6_Budget WHEN Category = 'ADVERTISING' AND Source = 'Budget' THEN Running_Expense_ADVERTISING_6_Budget ELSE 0 END),calculated_field,False,medium,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
source_count_2025,source_count,Count of Sources (FY 2025),Counts the number of records (or distinct sources) for Fiscal Year 2025.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_pacman_running_expense,SELECT COUNT(1) FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_pacman_running_expense` WHERE Fiscal_Year = 2025,COUNT(1),measure,False,low,5,6de90f2a-b3f3-46fe-a4fe-13474b2d6618
data_load_datetime_second_grain,data_load_datetime,Data Load Timestamp (Second Grain),"The timestamp indicating when the data was loaded, truncated to the second, used for data freshness or temporal analysis.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DATETIME_TRUNC(t0.data_load_datetime, SECOND) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,low,6,4114bd43-f752-4628-9b6c-1941b3c0d962
unified_publication_name_filtered_fy24_25,unified_publication_name,Unified Publication Name (FY24/25 Filtered),"The name of the unified publication, filtered to exclude specific administrative or non-revenue generating entities, and limited to financial years 2024 and 2025.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",unified_publication_name,dimension,False,medium,6,4114bd43-f752-4628-9b6c-1941b3c0d962
gross_revenue_amount_digital_fy24_25_filtered,gross_revenue_amount,"Gross Revenue Amount (Digital, FY24/25, Filtered Ad Type/Publication)","The total gross revenue generated specifically from 'DIGITAL' revenue types, for financial years 2024 and 2025, excluding specific ad types and publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT SUM(t0.gross_revenue_amount) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.revenue_type = 'DIGITAL' AND t0.financial_year >= '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",SUM(gross_revenue_amount),measure,True,high,6,4114bd43-f752-4628-9b6c-1941b3c0d962
booking_number_filtered_digital_fy24_25,booking_number,"Booking Number (Digital, FY24/25, Filtered Ad Type/Publication)","Unique identifier for a booking, filtered for 'DIGITAL' revenue types, financial years 2024 and 2025, and excluding specific ad types and publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT t0.booking_number FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.revenue_type = 'DIGITAL' AND t0.financial_year >= '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",booking_number,dimension,False,medium,6,4114bd43-f752-4628-9b6c-1941b3c0d962
fin_adtype_name_filtered_digital_fy24_25,fin_adtype_name,"Financial Ad Type Name (Digital, FY24/25, Filtered Ad Type/Publication)","The name of the financial ad type, filtered for 'DIGITAL' revenue types, financial years 2024 and 2025, and excluding specific ad types and publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT t0.fin_adtype_name FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.revenue_type = 'DIGITAL' AND t0.financial_year >= '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",fin_adtype_name,dimension,False,medium,6,4114bd43-f752-4628-9b6c-1941b3c0d962
financial_year_filtered_digital_fy24_25,financial_year,"Financial Year (Digital, FY24/25, Filtered Ad Type/Publication)","The financial year, filtered for 'DIGITAL' revenue types, specifically 2024 and 2025, and excluding specific ad types and publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT t0.financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.revenue_type = 'DIGITAL' AND t0.financial_year >= '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",financial_year,dimension,False,medium,6,4114bd43-f752-4628-9b6c-1941b3c0d962
financial_month_float_filtered_digital_fy24_25,financial_month,"Financial Month (Float, Digital, FY24/25, Filtered Ad Type/Publication)","The financial month, cast to a FLOAT64, filtered for 'DIGITAL' revenue types, financial years 2024 and 2025, and excluding specific ad types and publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT SAFE_CAST(t0.financial_month AS FLOAT64) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE (t0.revenue_type = 'DIGITAL' AND t0.financial_year >= '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025'))",SAFE_CAST(financial_month AS FLOAT64),dimension,False,low,6,4114bd43-f752-4628-9b6c-1941b3c0d962
financial_year_filtered_publication,financial_year,Financial Year (Filtered Publication),"The financial year, filtered to exclude specific administrative or non-revenue generating publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT t0.financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Kidspot', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",financial_year,dimension,False,medium,6,4114bd43-f752-4628-9b6c-1941b3c0d962
total_draw_volume_base,total_draw_volume,Total Draw Volume,"The total volume of units drawn (e.g., newspapers, magazines) for circulation, based on charge type 'DRAW'.",ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT SUM(CASE WHEN ci.charge_type = 'DRAW' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END) AS total_draw_volume FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')",SUM(CASE WHEN charge_type = 'DRAW' THEN route_volume ELSE 0 END),measure,True,high,7,c441950c-1e3f-432c-9838-847d1d315b9e
total_returns_volume_base,total_returns_volume,Total Returns Volume,"The total volume of units returned from circulation, based on charge type 'RETURNS'.",ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT SUM(CASE WHEN ci.charge_type = 'RETURNS' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END) AS total_returns_volume FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')",SUM(CASE WHEN charge_type = 'RETURNS' THEN route_volume ELSE 0 END),measure,True,high,7,c441950c-1e3f-432c-9838-847d1d315b9e
total_adjustment_volume_base,total_adjustment_volume,Total Adjustment Volume,"The total volume of units adjusted in circulation, based on charge type 'ADJUSTMENT'.",ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT SUM(CASE WHEN ci.charge_type = 'ADJUSTMENT' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END) AS total_adjustment_volume FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')",SUM(CASE WHEN charge_type = 'ADJUSTMENT' THEN route_volume ELSE 0 END),measure,False,medium,7,c441950c-1e3f-432c-9838-847d1d315b9e
gross_route_volume_base,gross_route_volume,Gross Route Volume,"The combined total volume of units for draw, returns, and adjustments, representing the overall movement of units.",ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT SUM(COALESCE(CASE WHEN ci.charge_type = 'DRAW' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END, 0) + COALESCE(CASE WHEN ci.charge_type = 'ADJUSTMENT' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END, 0) + COALESCE(CASE WHEN ci.charge_type = 'RETURNS' THEN SAFE_CAST(ci.route_volume AS BIGNUMERIC) ELSE 0 END, 0)) AS gross_route_volume FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')","SUM(COALESCE(CASE WHEN charge_type = 'DRAW' THEN route_volume ELSE 0 END, 0) + COALESCE(CASE WHEN charge_type = 'ADJUSTMENT' THEN route_volume ELSE 0 END, 0) + COALESCE(CASE WHEN charge_type = 'RETURNS' THEN route_volume ELSE 0 END, 0))",measure,True,high,7,c441950c-1e3f-432c-9838-847d1d315b9e
total_charge_amount_base,total_charge_amount,Total Charge Amount,The sum of all charge amounts recorded in the circulation data.,ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT SUM(SAFE_CAST(ci.charge_amount AS BIGNUMERIC)) AS total_charge_amount FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025')",SUM(charge_amount),measure,True,high,7,c441950c-1e3f-432c-9838-847d1d315b9e
publication_name_dimension,publication_name,Publication Name,A derived dimension categorizing publications based on their GL publication code.,ncau-data-newsquery-prd,asl_finance,v_asl_circualtion_insights,"SELECT CASE WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('500', '560')) THEN 'ADV' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '100') THEN 'AUS' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('400', '402')) THEN 'CM' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9504') THEN 'Delicious' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9505') THEN 'Delicious Specials' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('110', '116')) THEN 'DT' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '350') THEN 'GAD' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '670') THEN 'GCB' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '180') THEN 'Group Shared Services' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '156') THEN 'Hobart Print Services' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('301', '303')) THEN 'HS' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5003') THEN 'MDM' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('850', '852')) THEN 'MERCURY' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('961', '963')) THEN 'NTN' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '158') THEN 'Perth Print Services' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = 'Post Courier') THEN 'Post Courier' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5024') THEN 'SC' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) IN ('9514', '9515')) THEN 'Taste' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '5053') THEN 'TCHRN' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '450') THEN 'TCP' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '475') THEN 'TVB' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9560') THEN 'Vogue' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '9556') THEN 'Vogue Living' WHEN (SAFE_CAST(ci.gl_publication_code AS STRING) = '305') THEN 'WT' ELSE 'Other' END AS publication_name FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circualtion_insights` AS ci LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.v_calendar_dim` AS cal ON ci.charge_date = cal.calendar_date WHERE LEFT(SAFE_CAST(ci.fiscal_week_id AS STRING), 4) IN ('2025') LIMIT 1","CASE WHEN (gl_publication_code IN ('500', '560')) THEN 'ADV' WHEN (gl_publication_code = '100') THEN 'AUS' WHEN (gl_publication_code IN ('400', '402')) THEN 'CM' WHEN (gl_publication_code = '9504') THEN 'Delicious' WHEN (gl_publication_code = '9505') THEN 'Delicious Specials' WHEN (gl_publication_code IN ('110', '116')) THEN 'DT' WHEN (gl_publication_code = '350') THEN 'GAD' WHEN (gl_publication_code = '670') THEN 'GCB' WHEN (gl_publication_code = '180') THEN 'Group Shared Services' WHEN (gl_publication_code = '156') THEN 'Hobart Print Services' WHEN (gl_publication_code IN ('301', '303')) THEN 'HS' WHEN (gl_publication_code = '5003') THEN 'MDM' WHEN (gl_publication_code IN ('850', '852')) THEN 'MERCURY' WHEN (gl_publication_code IN ('961', '963')) THEN 'NTN' WHEN (gl_publication_code = '158') THEN 'Perth Print Services' WHEN (gl_publication_code = 'Post Courier') THEN 'Post Courier' WHEN (gl_publication_code = '5024') THEN 'SC' WHEN (gl_publication_code IN ('9514', '9515')) THEN 'Taste' WHEN (gl_publication_code = '5053') THEN 'TCHRN' WHEN (gl_publication_code = '450') THEN 'TCP' WHEN (gl_publication_code = '475') THEN 'TVB' WHEN (gl_publication_code = '9560') THEN 'Vogue' WHEN (gl_publication_code = '9556') THEN 'Vogue Living' WHEN (gl_publication_code = '305') THEN 'WT' ELSE 'Other' END",dimension,False,medium,7,c441950c-1e3f-432c-9838-847d1d315b9e
gross_adds_budget_fy26,gross_adds,Gross Adds (Budget FY26),"Total number of new subscriptions acquired, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_consumer_views,v_consumer_acquisition_budget_forecast,"WITH
  acquisition_budget AS (
    SELECT
      year_id AS fy_year,
      week_id AS fy_week_of_year,
      masthead,
      ROUND(SUM(
          CASE
            WHEN scenario = 'BUDGET' AND transaction_type = 'GROSS ADDS' AND channel IN ('BAU ALWAYS ON DIGITAL', 'BAU GENERAL OFFER', 'BREACH', 'APLS', 'GPLA', 'OTHERS', 'PRES', 'PERFORMANCE MEDIA', 'MARKETING') THEN bundle_qty
          END), 0) AS Gross_Adds
    FROM
      (
        SELECT
          year_id, week_id, masthead, scenario, transaction_type, UPPER(package_type) AS package_type, UPPER(channel) AS channel, bundle_qty, dw_partition_date,
          ROW_NUMBER() OVER (PARTITION BY year_id, week_id, masthead, scenario, transaction_type, UPPER(package_type), UPPER(channel) ORDER BY dw_partition_date DESC) AS RN
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_consumer_acquisition_budget_forecast`
        WHERE
          (scenario = 'BUDGET' AND dw_partition_date >= '2025-02-06' AND transaction_type IN ('GROSS ADDS', 'NET ADDS') AND year_id = 2026 AND masthead IN ('TA', 'AA', 'CM', 'DT', 'HS', 'CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM', 'WT'))
      )
    WHERE RN = 1
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Gross_Adds) AS Gross_Adds_Budget_FY26
FROM
  acquisition_budget
LIMIT 1;",SUM(Gross_Adds),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
net_adds_budget_fy26,net_adds,Net Adds (Budget FY26),"Total net increase in subscriptions (Gross Adds - Gross Cancels), based on the FY26 budget.",ncau-data-newsquery-prd,prstn_consumer_views,v_consumer_acquisition_budget_forecast,"WITH
  acquisition_budget AS (
    SELECT
      year_id AS fy_year,
      week_id AS fy_week_of_year,
      masthead,
      ROUND(SUM(
          CASE
            WHEN scenario = 'BUDGET' AND transaction_type = 'NET ADDS' AND channel IN ('BAU ALWAYS ON DIGITAL', 'BAU GENERAL OFFER', 'BREACH', 'APLS', 'GPLA', 'OTHERS', 'PRES', 'PERFORMANCE MEDIA', 'MARKETING') THEN bundle_qty
          END), 0) AS Net_Adds
    FROM
      (
        SELECT
          year_id, week_id, masthead, scenario, transaction_type, UPPER(package_type) AS package_type, UPPER(channel) AS channel, bundle_qty, dw_partition_date,
          ROW_NUMBER() OVER (PARTITION BY year_id, week_id, masthead, scenario, transaction_type, UPPER(package_type), UPPER(channel) ORDER BY dw_partition_date DESC) AS RN
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_consumer_acquisition_budget_forecast`
        WHERE
          (scenario = 'BUDGET' AND dw_partition_date >= '2025-02-06' AND transaction_type IN ('GROSS ADDS', 'NET ADDS') AND year_id = 2026 AND masthead IN ('TA', 'AA', 'CM', 'DT', 'HS', 'CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM', 'WT'))
      )
    WHERE RN = 1
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Net_Adds) AS Net_Adds_Budget_FY26
FROM
  acquisition_budget
LIMIT 1;",SUM(Net_Adds),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
gross_cancels_budget_fy26,gross_cancels,Gross Cancels (Budget FY26),"Total number of subscriptions cancelled, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_consumer_views,v_consumer_churn_budget_forecast,"WITH
  churn_budget AS (
    SELECT
      year_id AS fy_year,
      week_id AS fy_week_of_year,
      masthead,
      ROUND(SUM(
          CASE
            WHEN scenario = 'BUDGET' AND transaction_type = 'GROSS CHURN' AND UPPER(package_type) IN ('BUNDLE 7 DAY', 'BUNDLE WEEKEND', 'DIGITAL', 'ESSENTIALS', '3RD PARTY & OTHERS') THEN bundle_qty
            ELSE 0
          END), 0) AS Gross_Cancels
    FROM
      (
        SELECT
          *,
          RANK() OVER (PARTITION BY year_id, CASE WHEN scenario LIKE '%BUDGET%' THEN 'Budget' WHEN scenario LIKE '%FORECAST' THEN 'Forecast' END ORDER BY dw_partition_date DESC) AS scenario_vers,
          RANK() OVER (ORDER BY year_id DESC) AS year_rank
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_consumer_churn_budget_forecast`
        WHERE
          dw_partition_date >= '2024-07-15'
      )
    WHERE
      scenario_vers = 1 AND year_rank = 1 AND transaction_type IN ('GROSS CHURN', 'NET CHURN') AND year_id > 2024 AND masthead IN ('TA', 'AA', 'CM', 'DT', 'HS', 'CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM', 'WT')
    GROUP BY year_id, week_id, masthead
  )
SELECT
  SUM(Gross_Cancels) AS Gross_Cancels_Budget_FY26
FROM
  churn_budget
LIMIT 1;",SUM(Gross_Cancels),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
net_cancels_budget_fy26,net_cancels,Net Cancels (Budget FY26),"Total net decrease in subscriptions, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_consumer_views,v_consumer_churn_budget_forecast,"WITH
  churn_budget AS (
    SELECT
      year_id AS fy_year,
      week_id AS fy_week_of_year,
      masthead,
      ROUND(SUM(
          CASE
            WHEN scenario = 'BUDGET' AND transaction_type = 'NET CHURN' AND UPPER(package_type) IN ('BUNDLE 7 DAY', 'BUNDLE WEEKEND', 'DIGITAL', 'ESSENTIALS', '3RD PARTY & OTHERS') THEN bundle_qty
            ELSE 0
          END), 0) AS Net_Cancels
    FROM
      (
        SELECT
          *,
          RANK() OVER (PARTITION BY year_id, CASE WHEN scenario LIKE '%BUDGET%' THEN 'Budget' WHEN scenario LIKE '%FORECAST' THEN 'Forecast' END ORDER BY dw_partition_date DESC) AS scenario_vers,
          RANK() OVER (ORDER BY year_id DESC) AS year_rank
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_consumer_churn_budget_forecast`
        WHERE
          dw_partition_date >= '2024-07-15'
      )
    WHERE
      scenario_vers = 1 AND year_rank = 1 AND transaction_type IN ('GROSS CHURN', 'NET CHURN') AND year_id > 2024 AND masthead IN ('TA', 'AA', 'CM', 'DT', 'HS', 'CP', 'GA', 'GC', 'NT', 'TB', 'TC', 'TM', 'WT')
    GROUP BY year_id, week_id, masthead
  )
SELECT
  SUM(Net_Cancels) AS Net_Cancels_Budget_FY26
FROM
  churn_budget
LIMIT 1;",SUM(Net_Cancels),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
closing_base_consumer_budget_fy26,closing_base_consumer,Closing Base Consumer (Budget FY26),"The total number of consumer subscriptions at the end of a period, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_finance,v_subscription_budget_forecast_fct,"WITH
  closingbase_revenuebudget AS (
    SELECT
      fy_year,
      fy_week_of_year,
      CASE
        WHEN gl_publication_code = '101' THEN 'TA' WHEN gl_publication_code = '111' THEN 'DT' WHEN gl_publication_code = '302' THEN 'HS' WHEN gl_publication_code = '307' THEN 'WT' WHEN gl_publication_code = '351' THEN 'GA' WHEN gl_publication_code = '401' THEN 'CM' WHEN gl_publication_code = '460' THEN 'CP' WHEN gl_publication_code = '490' THEN 'TB' WHEN gl_publication_code = '501' THEN 'AA' WHEN gl_publication_code = '5253' THEN 'TC' WHEN gl_publication_code = '685' THEN 'GC' WHEN gl_publication_code = '851' THEN 'TM' WHEN gl_publication_code = '962' THEN 'NT'
      END AS masthead,
      ROUND(SUM(
          CASE
            WHEN scenario_name = 'FY26 Budget F0 Final' AND category_name IN ('Consumer', '3rd Party and Others') AND rate_plan_group_name NOT LIKE '%The Wine Club%' THEN closing_base_count
            ELSE 0
          END), 0) AS Closing_Base_Consumer
    FROM
      `ncau-data-newsquery-prd.prstn_finance.v_subscription_budget_forecast_fct` AS budgetforecast
      LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS calen ON budgetforecast.fiscal_week_id = calen.fy_year_week_number AND calen.day_name = 'Sunday'
    WHERE
      fy_year = 2026 AND scenario_version_code = 'P' AND scenario_name IN ('FY 25 Budget Jul', 'FY26 Budget F0 Final') AND gl_publication_code IN ('101', '111', '302', '307', '351', '401', '460', '490', '501', '5253', '685', '851', '962')
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Closing_Base_Consumer) AS Closing_Base_Consumer_Budget_FY26
FROM
  closingbase_revenuebudget
LIMIT 1;",SUM(Closing_Base_Consumer),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
opening_base_consumer_budget_fy26,opening_base_consumer,Opening Base Consumer (Budget FY26),"The total number of consumer subscriptions at the beginning of a period, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_finance,v_subscription_budget_forecast_fct,"WITH
  closingbase_revenuebudget AS (
    SELECT
      fy_year,
      fy_week_of_year,
      CASE
        WHEN gl_publication_code = '101' THEN 'TA' WHEN gl_publication_code = '111' THEN 'DT' WHEN gl_publication_code = '302' THEN 'HS' WHEN gl_publication_code = '307' THEN 'WT' WHEN gl_publication_code = '351' THEN 'GA' WHEN gl_publication_code = '401' THEN 'CM' WHEN gl_publication_code = '460' THEN 'CP' WHEN gl_publication_code = '490' THEN 'TB' WHEN gl_publication_code = '501' THEN 'AA' WHEN gl_publication_code = '5253' THEN 'TC' WHEN gl_publication_code = '685' THEN 'GC' WHEN gl_publication_code = '851' THEN 'TM' WHEN gl_publication_code = '962' THEN 'NT'
      END AS masthead,
      ROUND(SUM(
          CASE
            WHEN scenario_name = 'FY26 Budget F0 Final' AND category_name IN ('Consumer', '3rd Party and Others') AND rate_plan_group_name NOT LIKE '%The Wine Club%' THEN opening_base_count
            ELSE 0
          END), 0) AS Opening_Base_Consumer
    FROM
      `ncau-data-newsquery-prd.prstn_finance.v_subscription_budget_forecast_fct` AS budgetforecast
      LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS calen ON budgetforecast.fiscal_week_id = calen.fy_year_week_number AND calen.day_name = 'Sunday'
    WHERE
      fy_year = 2026 AND scenario_version_code = 'P' AND scenario_name IN ('FY 25 Budget Jul', 'FY26 Budget F0 Final') AND gl_publication_code IN ('101', '111', '302', '307', '351', '401', '460', '490', '501', '5253', '685', '851', '962')
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Opening_Base_Consumer) AS Opening_Base_Consumer_Budget_FY26
FROM
  closingbase_revenuebudget
LIMIT 1;",SUM(Opening_Base_Consumer),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
revenue_consumer_budget_fy26,revenue_consumer,Revenue Consumer (Budget FY26),"Revenue generated from consumer subscriptions, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_finance,v_subscription_budget_forecast_fct,"WITH
  closingbase_revenuebudget AS (
    SELECT
      fy_year,
      fy_week_of_year,
      CASE
        WHEN gl_publication_code = '101' THEN 'TA' WHEN gl_publication_code = '111' THEN 'DT' WHEN gl_publication_code = '302' THEN 'HS' WHEN gl_publication_code = '307' THEN 'WT' WHEN gl_publication_code = '351' THEN 'GA' WHEN gl_publication_code = '401' THEN 'CM' WHEN gl_publication_code = '460' THEN 'CP' WHEN gl_publication_code = '490' THEN 'TB' WHEN gl_publication_code = '501' THEN 'AA' WHEN gl_publication_code = '5253' THEN 'TC' WHEN gl_publication_code = '685' THEN 'GC' WHEN gl_publication_code = '851' THEN 'TM' WHEN gl_publication_code = '962' THEN 'NT'
      END AS masthead,
      ROUND(SUM(
          CASE
            WHEN scenario_name = 'FY26 Budget F0 Final' AND category_name IN ('Consumer', '3rd Party and Others') AND rate_plan_group_name NOT LIKE '%The Wine Club%' THEN revenue_amount
            ELSE 0
          END), 0) AS Revenue_Consumer
    FROM
      `ncau-data-newsquery-prd.prstn_finance.v_subscription_budget_forecast_fct` AS budgetforecast
      LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS calen ON budgetforecast.fiscal_week_id = calen.fy_year_week_number AND calen.day_name = 'Sunday'
    WHERE
      fy_year = 2026 AND scenario_version_code = 'P' AND scenario_name IN ('FY 25 Budget Jul', 'FY26 Budget F0 Final') AND gl_publication_code IN ('101', '111', '302', '307', '351', '401', '460', '490', '501', '5253', '685', '851', '962')
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Revenue_Consumer) AS Revenue_Consumer_Budget_FY26
FROM
  closingbase_revenuebudget
LIMIT 1;",SUM(Revenue_Consumer),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
cancels_3rd_party_budget_fy26,cancels_3rd_party,3rd Party Cancels (Budget FY26),"Cancellations from 3rd party platforms, based on the FY26 budget.",ncau-data-newsquery-prd,prstn_finance,v_subscription_budget_forecast_fct,"WITH
  closingbase_revenuebudget AS (
    SELECT
      fy_year,
      fy_week_of_year,
      CASE
        WHEN gl_publication_code = '101' THEN 'TA' WHEN gl_publication_code = '111' THEN 'DT' WHEN gl_publication_code = '302' THEN 'HS' WHEN gl_publication_code = '307' THEN 'WT' WHEN gl_publication_code = '351' THEN 'GA' WHEN gl_publication_code = '401' THEN 'CM' WHEN gl_publication_code = '460' THEN 'CP' WHEN gl_publication_code = '490' THEN 'TB' WHEN gl_publication_code = '501' THEN 'AA' WHEN gl_publication_code = '5253' THEN 'TC' WHEN gl_publication_code = '685' THEN 'GC' WHEN gl_publication_code = '851' THEN 'TM' WHEN gl_publication_code = '962' THEN 'NT'
      END AS masthead,
      ROUND(SUM(
          CASE
            WHEN scenario_name = 'FY26 Budget F0 Final' AND category_name IN ('3rd Party Platform', '3rd Party and Others', '3rd Party & Others', 'Apple Store', 'Google Play', 'Subscribe with Google (SWG)', 'Press Reader') THEN cancellation_count
            ELSE 0
          END), 0) AS Cancels_3rd_PT
    FROM
      `ncau-data-newsquery-prd.prstn_finance.v_subscription_budget_forecast_fct` AS budgetforecast
      LEFT JOIN `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS calen ON budgetforecast.fiscal_week_id = calen.fy_year_week_number AND calen.day_name = 'Sunday'
    WHERE
      fy_year = 2026 AND scenario_version_code = 'P' AND scenario_name IN ('FY 25 Budget Jul', 'FY26 Budget F0 Final') AND gl_publication_code IN ('101', '111', '302', '307', '351', '401', '460', '490', '501', '5253', '685', '851', '962')
    GROUP BY 1, 2, 3
  )
SELECT
  SUM(Cancels_3rd_PT) AS Cancels_3rd_PT_Budget_FY26
FROM
  closingbase_revenuebudget
LIMIT 1;",SUM(Cancels_3rd_PT),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
total_weekly_sales_budget_weekly,total_weekly_sales,"Total Weekly Sales (Budget, Weekly)","Total sales for the week, based on the Budget scenario.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT
  SUM(t0.Total_Weekly_Sales_B) AS Total_Weekly_Sales_Budget_Weekly
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  (CASE WHEN ('All Mastheads' = 'All Mastheads') THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community' WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regional' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead = 'DT') THEN 'Daily Telegraph' WHEN (t0.masthead = 'HS') THEN 'Herald Sun' WHEN (t0.masthead = 'WT') THEN 'Weekly Times' WHEN (t0.masthead = 'GA') THEN 'Geelong Advertiser' WHEN (t0.masthead = 'CM') THEN 'Courier Mail' WHEN (t0.masthead = 'CP') THEN 'Cairns Post' WHEN (t0.masthead = 'TB') THEN 'Townsville Bulletin' WHEN (t0.masthead = 'TC') THEN 'Toowoomba Chronicles' WHEN (t0.masthead = 'GC') THEN 'Gold Coast' WHEN (t0.masthead = 'TM') THEN 'The Mercury' WHEN (t0.masthead = 'NT') THEN 'NT News' WHEN (t0.masthead = 'AA') THEN 'The Advertiser' ELSE NULL END)) THEN true ELSE NULL END) = true
LIMIT 1;",SUM(t0.Total_Weekly_Sales_B),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
total_weekly_sales_forecast_weekly,total_weekly_sales,"Total Weekly Sales (Forecast, Weekly)","Total sales for the week, based on the Forecast scenario.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT
  SUM(t0.Total_Weekly_Sales) AS Total_Weekly_Sales_Forecast_Weekly
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  (CASE WHEN ('All Mastheads' = 'All Mastheads') THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community' WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regional' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead = 'DT') THEN 'Daily Telegraph' WHEN (t0.masthead = 'HS') THEN 'Herald Sun' WHEN (t0.masthead = 'WT') THEN 'Weekly Times' WHEN (t0.masthead = 'GA') THEN 'Geelong Advertiser' WHEN (t0.masthead = 'CM') THEN 'Courier Mail' WHEN (t0.masthead = 'CP') THEN 'Cairns Post' WHEN (t0.masthead = 'TB') THEN 'Townsville Bulletin' WHEN (t0.masthead = 'TC') THEN 'Toowoomba Chronicles' WHEN (t0.masthead = 'GC') THEN 'Gold Coast' WHEN (t0.masthead = 'TM') THEN 'The Mercury' WHEN (t0.masthead = 'NT') THEN 'NT News' WHEN (t0.masthead = 'AA') THEN 'The Advertiser' ELSE NULL END)) THEN true ELSE NULL END) = true
LIMIT 1;",SUM(t0.Total_Weekly_Sales),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
total_revenue_budget_weekly,total_revenue,"Total Revenue (Budget, Weekly)","Total revenue generated, based on the Budget scenario and aggregated weekly.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT
  SUM(t0.Total_Revenue_B) AS Total_Revenue_Budget_Weekly
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  (CASE WHEN ('All Mastheads' = 'All Mastheads') THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community' WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regional' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead = 'DT') THEN 'Daily Telegraph' WHEN (t0.masthead = 'HS') THEN 'Herald Sun' WHEN (t0.masthead = 'WT') THEN 'Weekly Times' WHEN (t0.masthead = 'GA') THEN 'Geelong Advertiser' WHEN (t0.masthead = 'CM') THEN 'Courier Mail' WHEN (t0.masthead = 'CP') THEN 'Cairns Post' WHEN (t0.masthead = 'TB') THEN 'Townsville Bulletin' WHEN (t0.masthead = 'TC') THEN 'Toowoomba Chronicles' WHEN (t0.masthead = 'GC') THEN 'Gold Coast' WHEN (t0.masthead = 'TM') THEN 'The Mercury' WHEN (t0.masthead = 'NT') THEN 'NT News' WHEN (t0.masthead = 'AA') THEN 'The Advertiser' ELSE NULL END)) THEN true ELSE NULL END) = true
LIMIT 1;",SUM(t0.Total_Revenue_B),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
net_cancels_budget_weekly,net_cancels,"Net Cancels (Budget, Weekly)","Net number of cancellations, based on the Budget scenario and aggregated weekly.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT
  SUM(t0.Net_Cancels_B) AS Net_Cancels_Budget_Weekly
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  (CASE WHEN ('All Mastheads' = 'All Mastheads') THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community' WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regional' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead = 'DT') THEN 'Daily Telegraph' WHEN (t0.masthead = 'HS') THEN 'Herald Sun' WHEN (t0.masthead = 'WT') THEN 'Weekly Times' WHEN (t0.masthead = 'GA') THEN 'Geelong Advertiser' WHEN (t0.masthead = 'CM') THEN 'Courier Mail' WHEN (t0.masthead = 'CP') THEN 'Cairns Post' WHEN (t0.masthead = 'TB') THEN 'Townsville Bulletin' WHEN (t0.masthead = 'TC') THEN 'Toowoomba Chronicles' WHEN (t0.masthead = 'GC') THEN 'Gold Coast' WHEN (t0.masthead = 'TM') THEN 'The Mercury' WHEN (t0.masthead = 'NT') THEN 'NT News' WHEN (t0.masthead = 'AA') THEN 'The Advertiser' ELSE NULL END)) THEN true ELSE NULL END) = true
LIMIT 1;",SUM(t0.Net_Cancels_B),measure,True,high,8,28082293-c836-46f0-83f8-b5ce909cd051
failed_payment_volume_yoy_weekly,failed_payment_volume,"Failed Payment Volume (YOY, Weekly)","Volume of failed payments, based on the Year-over-Year scenario and aggregated weekly.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT
  SUM(t0.Failed_Payment_Volume) AS Failed_Payment_Volume_YOY_Weekly
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0
WHERE
  (CASE WHEN ('All Mastheads' = 'All Mastheads') THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA', 'CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'States and Community' WHEN (t0.masthead = 'TA') THEN 'The Australian and Prestige' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead IN ('CM', 'DT', 'HS', 'AA')) THEN 'Metro' WHEN (t0.masthead IN ('CP', 'GA', 'GC', 'NT', 'TM', 'TB', 'TC', 'WT')) THEN 'Regional' ELSE NULL END)) THEN true WHEN ('All Mastheads' = (CASE WHEN (t0.masthead = 'TA') THEN 'The Australian' WHEN (t0.masthead = 'DT') THEN 'Daily Telegraph' WHEN (t0.masthead = 'HS') THEN 'Herald Sun' WHEN (t0.masthead = 'WT') THEN 'Weekly Times' WHEN (t0.masthead = 'GA') THEN 'Geelong Advertiser' WHEN (t0.masthead = 'CM') THEN 'Courier Mail' WHEN (t0.masthead = 'CP') THEN 'Cairns Post' WHEN (t0.masthead = 'TB') THEN 'Townsville Bulletin' WHEN (t0.masthead = 'TC') THEN 'Toowoomba Chronicles' WHEN (t0.masthead = 'GC') THEN 'Gold Coast' WHEN (t0.masthead = 'TM') THEN 'The Mercury' WHEN (t0.masthead = 'NT') THEN 'NT News' WHEN (t0.masthead = 'AA') THEN 'The Advertiser' ELSE NULL END)) THEN true ELSE NULL END) = true
LIMIT 1;",SUM(t0.Failed_Payment_Volume),measure,False,medium,8,28082293-c836-46f0-83f8-b5ce909cd051
scenario_type_dimension,scenario_type,Scenario Type,"Categorization of financial scenarios (e.g., Budget, Forecast). Used for filtering or display.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT CASE WHEN ('BUD' = 'FCT') THEN 'Forecast' WHEN ('BUD' = 'BUD') THEN 'Budget' ELSE NULL END AS scenario_type FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` LIMIT 1;,CASE WHEN ('BUD' = 'FCT') THEN 'Forecast' WHEN ('BUD' = 'BUD') THEN 'Budget' ELSE NULL END,dimension,False,low,8,28082293-c836-46f0-83f8-b5ce909cd051
fiscal_week_display_string,fiscal_week_display,Fiscal Week Display,"Formatted string representing the fiscal year and week for a specific masthead, used for display in filters or titles.",ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,"SELECT CONCAT('FY','2026',' ','Week ',SAFE_CAST(CASE WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney'))) - 1) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END AS STRING),' | ','Herald Sun') AS fiscal_week_display FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` LIMIT 1;","CONCAT('FY','2026',' ','Week ',SAFE_CAST(CASE WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney'))) - 1) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-07-23 02:37:14.144508+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END AS STRING),' | ','Herald Sun')",dimension,False,low,8,28082293-c836-46f0-83f8-b5ce909cd051
calculated_real_cost,real_cost_base,Real Cost,"The actual cost of a GCP project, including any credits applied, rounded to 3 decimal places. This is a foundational calculated field.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3) AS real_cost FROM `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2`","ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3)",calculated_field,False,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
total_real_cost_prod_tddxai_march_2025_specific_month,total_real_cost,Total Real Cost for 'prod-tddxai' Projects in March 2025 (Specific Month Filter),"Total real cost incurred for projects matching 'prod-tddxai' during March 2025 (March 1-11), specifically filtered by the month of March 2025, using Project ID List A.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
  FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
  AND bill.project.id IN ('nca-datapl-dev-genai', 'nca-datapl-dev-finaipoc', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai', 'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nca-datapl-prod-conintai', 'nca-cts-prod-tddxai', 'nca-datapl-nonprod-tasteaiconc', 'nca-datapl-prod-tasteaiconc', 'ncau-data-nprod-aitrain', 'nca-cts-nonprod-tddxai', 'ncau-data-nprod-taiste', 'nca-datapl-dev-contentsearch', 'nau-data-nprod-dataservices')
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) >= TIMESTAMP '2025-03-01'
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) < TIMESTAMP_ADD(TIMESTAMP '2025-03-12', INTERVAL 1 DAY)
  AND STRPOS(metadata.projectId, 'prod-tddxai') > 0
  AND SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) IN (DATE '2025-03-01')","SUM(ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3))",measure,True,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
monthly_real_cost_nca_cts_nonprod_tddxai_march_2025,total_real_cost,"Monthly Real Cost for 'nca-cts-nonprod-tddxai' Projects (March 1-13, 2025)","Monthly real cost incurred for projects matching 'nca-cts-nonprod-tddxai' from March 1 to March 13, 2025, using Project ID List A.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) AS month_start_date,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
  FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
  AND bill.project.id IN ('nca-datapl-dev-genai', 'nca-datapl-dev-finaipoc', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai', 'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nca-datapl-prod-conintai', 'nca-cts-prod-tddxai', 'nca-datapl-nonprod-tasteaiconc', 'nca-datapl-prod-tasteaiconc', 'ncau-data-nprod-aitrain', 'nca-cts-nonprod-tddxai', 'ncau-data-nprod-taiste', 'nca-datapl-dev-contentsearch', 'nau-data-nprod-dataservices')
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) >= TIMESTAMP '2025-03-01'
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) < TIMESTAMP_ADD(TIMESTAMP '2025-03-13', INTERVAL 1 DAY)
  AND STRPOS(metadata.projectId, 'nca-cts-nonprod-tddxai') > 0
GROUP BY 1
ORDER BY 1 ASC","SUM(ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3))",measure,True,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
monthly_real_cost_nca_cts_prod_tddxai_march_2025_extended,total_real_cost,"Monthly Real Cost for 'nca-cts-prod-tddxai' Projects (March 1-16, 2025)","Monthly real cost incurred for projects matching 'nca-cts-prod-tddxai' from March 1 to March 16, 2025, using Project ID List A.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) AS month_start_date,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
  FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
  AND bill.project.id IN ('nca-datapl-dev-genai', 'nca-datapl-dev-finaipoc', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai', 'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nca-datapl-prod-conintai', 'nca-cts-prod-tddxai', 'nca-datapl-nonprod-tasteaiconc', 'nca-datapl-prod-tasteaiconc', 'ncau-data-nprod-aitrain', 'nca-cts-nonprod-tddxai', 'ncau-data-nprod-taiste', 'nca-datapl-dev-contentsearch', 'nau-data-nprod-dataservices')
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) >= TIMESTAMP '2025-03-01'
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) < TIMESTAMP_ADD(TIMESTAMP '2025-03-16', INTERVAL 1 DAY)
  AND STRPOS(metadata.projectId, 'nca-cts-prod-tddxai') > 0
GROUP BY 1
ORDER BY 1 ASC","SUM(ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3))",measure,True,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
monthly_real_cost_prod_tddxai_march_2025_list_b,total_real_cost,"Monthly Real Cost for 'prod-tddxai' Projects (March 1-12, 2025, Project List B)","Monthly real cost incurred for projects matching 'prod-tddxai' from March 1 to March 12, 2025, using Project ID List B (a different subset of projects).",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) AS month_start_date,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
  FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
  AND bill.project.id IN ('nca-datapl-dev-genai', 'ncau-data-prod-contentlake', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai', 'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nau-data-nprod-dataservices')
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) >= TIMESTAMP '2025-03-01'
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) < TIMESTAMP_ADD(TIMESTAMP '2025-03-12', INTERVAL 1 DAY)
  AND STRPOS(metadata.projectId, 'prod-tddxai') > 0
GROUP BY 1
ORDER BY 1 ASC","SUM(ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3))",measure,True,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
monthly_real_cost_nca_cts_prod_tddxai_march_2025_short,total_real_cost,"Monthly Real Cost for 'nca-cts-prod-tddxai' Projects (March 1-12, 2025)","Monthly real cost incurred for projects matching 'nca-cts-prod-tddxai' from March 1 to March 12, 2025, using Project ID List A. This is a common variation seen across multiple queries.",ncau-tech-mgmt,billing_export,gcp_billing_export_v1_0129CD_D10B4E_0A39B2,"SELECT
  SAFE_CAST(DATETIME_TRUNC(bill._PARTITIONTIME, MONTH) AS DATE) AS month_start_date,
  SUM(ROUND(bill.cost + IFNULL((SELECT c.amount FROM UNNEST(bill.credits) AS c), 0), 3)) AS total_real_cost
FROM
  `ncau-tech-mgmt.billing_export.gcp_billing_export_v1_0129CD_D10B4E_0A39B2` AS bill
  FULL JOIN
  `ncau-tech-mgmt.ncau_gcp_metaadata.ncau-gcp-projects-metadata` AS metadata
  ON metadata.projectId = bill.project.id
WHERE
  DATE(bill._PARTITIONTIME) >= DATE_SUB(CURRENT_DATE(), INTERVAL 6 MONTH)
  AND bill.project.id IN ('nca-datapl-dev-genai', 'nca-datapl-dev-finaipoc', 'nca-data-prod-aisummarize', 'nca-datapl-prod-genai', 'nca-taiste-prod-taiste', 'nca-ola-prod-data', 'nca-datapl-prod-conintai', 'nca-cts-prod-tddxai', 'nca-datapl-nonprod-tasteaiconc', 'nca-datapl-prod-tasteaiconc', 'ncau-data-nprod-aitrain', 'nca-cts-nonprod-tddxai', 'ncau-data-nprod-taiste', 'nca-datapl-dev-contentsearch', 'nau-data-nprod-dataservices')
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) >= TIMESTAMP '2025-03-01'
  AND SAFE_CAST(bill._PARTITIONTIME AS TIMESTAMP) < TIMESTAMP_ADD(TIMESTAMP '2025-03-12', INTERVAL 1 DAY)
  AND STRPOS(metadata.projectId, 'nca-cts-prod-tddxai') > 0
GROUP BY 1
ORDER BY 1 ASC","SUM(ROUND(cost + IFNULL((SELECT c.amount FROM UNNEST(credits) AS c), 0), 3))",measure,True,high,9,c67409c3-3e67-4d5a-8472-34a3aa704cf6
record_count_by_source_system,record_count,Record Count by Source System,"Total number of records, broken down by the source system from which the financial data originated.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH
  OSandFACT AS (
    SELECT
      os.source_system_name
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
        WHERE
          1 = 1
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  COUNT(1) AS record_count,
  source_system_name
FROM
  OSandFACT
GROUP BY
  source_system_name",COUNT(1),aggregation,False,low,10,d7412673-0af1-4efe-8374-ca475b001fb6
total_actual_amount_by_fiscal_year_and_source_system,actual_amount,Total Actual Amount by Fiscal Year and Source System,"The sum of actual financial amounts, broken down by fiscal year and the source system from which the financial data originated.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH
  OSandFACT AS (
    SELECT
      os.source_system_name,
      os.Actual_Amount,
      calendar.fy_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
        WHERE
          1 = 1
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  SUM(Actual_Amount) AS total_actual_amount,
  fy_year,
  source_system_name
FROM
  OSandFACT
GROUP BY
  fy_year,
  source_system_name",SUM(Actual_Amount),measure,True,high,10,d7412673-0af1-4efe-8374-ca475b001fb6
total_actual_amount_by_source_system,actual_amount,Total Actual Amount by Source System,"The sum of actual financial amounts, broken down by the source system from which the financial data originated.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH
  OSandFACT AS (
    SELECT
      os.source_system_name,
      os.Actual_Amount
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
        WHERE
          1 = 1
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  )
SELECT
  SUM(Actual_Amount) AS total_actual_amount,
  source_system_name
FROM
  OSandFACT
GROUP BY
  source_system_name",SUM(Actual_Amount),measure,True,high,10,d7412673-0af1-4efe-8374-ca475b001fb6
total_gross_amount_diff_base,total_gross_amount_diff,Total Gross Amount Difference,"The total gross amount difference, representing overall revenue movement.",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT SUM(t0.GROSS_AMOUNT_DIFF) AS total_gross_amount_diff FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0,SUM(t0.GROSS_AMOUNT_DIFF),aggregation,True,high,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
digital_gross_amount_diff_base,digital_gross_amount_diff,Digital Gross Amount Difference,The gross amount difference specifically for digital revenue types.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT SUM(CASE WHEN t0.revenue_type = 'DIGITAL' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS digital_gross_amount_diff FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0,SUM(CASE WHEN t0.revenue_type = 'DIGITAL' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END),aggregation,True,high,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
print_gross_amount_diff_base,print_gross_amount_diff,Print Gross Amount Difference,The gross amount difference specifically for print revenue types.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT SUM(CASE WHEN t0.revenue_type = 'PRINT' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END) AS print_gross_amount_diff FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0,SUM(CASE WHEN t0.revenue_type = 'PRINT' THEN t0.GROSS_AMOUNT_DIFF ELSE 0 END),aggregation,True,high,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
advertiser_group_cleaned_dim,advertiser_group_cleaned,Advertiser Group (Cleaned),"The advertiser group, with NULL values replaced by 'Nah'.",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT CASE WHEN t0.advertiser_group IS NULL THEN 'Nah' ELSE t0.advertiser_group END AS advertiser_group_cleaned FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,CASE WHEN t0.advertiser_group IS NULL THEN 'Nah' ELSE t0.advertiser_group END,calculated_field,False,medium,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
revenue_category_complex_dim,revenue_category_complex,Revenue Category (Complex),"A complex categorization of revenue based on xtend_flag, revenue_sub_type, and portfolio_parent_group_name_sync.",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,"SELECT CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' WHEN (SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO' OR (t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER' AND t0.revenue_sub_type = 'DIGITAL')) THEN 'PROGRAMMATIC' WHEN t0.revenue_sub_type = 'DIGITAL' THEN 'ADPT DIGITAL' WHEN SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY' THEN 'SUNDRY' ELSE t0.revenue_sub_type END AS revenue_category_complex FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1","CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' WHEN (SAFE.LEFT(t0.revenue_sub_type, 3) = 'PRO' OR (t0.portfolio_parent_group_name_sync = 'DIGITAL OTHER' AND t0.revenue_sub_type = 'DIGITAL')) THEN 'PROGRAMMATIC' WHEN t0.revenue_sub_type = 'DIGITAL' THEN 'ADPT DIGITAL' WHEN SAFE.LEFT(t0.revenue_sub_type, 6) = 'SUNDRY' THEN 'SUNDRY' ELSE t0.revenue_sub_type END",calculated_field,False,medium,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
movement_date_parsed_dim,movement_date_parsed,Movement Date (Parsed),"The movement date parsed from financial year and short month, typically representing the first day of the month.",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,"SELECT PARSE_DATE('%Y-%b-%d', CONCAT(SAFE_CAST(t0.financial_year AS STRING),'-',SAFE_CAST(t0.financial_short_month AS STRING),'-1')) AS movement_date_parsed FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1","PARSE_DATE('%Y-%b-%d', CONCAT(SAFE_CAST(t0.financial_year AS STRING),'-',SAFE_CAST(t0.financial_short_month AS STRING),'-1'))",calculated_field,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
product_group_name_dim,product_group_name,Product Group Name,The name of the product group.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.product_group_name FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.product_group_name,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
publishing_division_group_dim,publishing_division_group,Publishing Division Group,The group associated with the publishing division.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.publishing_division_group FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.publishing_division_group,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
revenue_type_dim,revenue_type,Revenue Type,"The type of revenue (e.g., DIGITAL, PRINT).",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.revenue_type,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
portfolio_parent_group_name_sync_dim,portfolio_parent_group_name_sync,Portfolio Parent Group Name Sync,Synchronized name of the parent portfolio group.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.portfolio_parent_group_name_sync FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.portfolio_parent_group_name_sync,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
financial_year_dim,financial_year,Financial Year,The financial year of the revenue movement.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.financial_year,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
movement_date_dim,movement_date,Movement Date,The date of the revenue movement.,ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT t0.movement_date FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0 LIMIT 1,t0.movement_date,dimension,False,low,11,a1b901e6-c4fb-44bc-955a-3a7070c15829
unified_publication_name_filtered_digital_programmatic_2024_2025,unified_publication_name,"Unified Publication Name (Digital/Programmatic, FY24/25)",A list of unique unified publication names filtered for digital and programmatic revenue group subtypes in financial years 2024 and 2025.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) IN ('2024', '2025') AND t0.revenue_group_subtype IN ('DIGITAL', 'PROGRAMMATIC EXCHANGE', 'PROGRAMMATIC SOURCE') GROUP BY t0.unified_publication_name LIMIT 100",t0.unified_publication_name,dimension,False,medium,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
revenue_group_subtype_filtered_digital_excl_xtend_2024_2025,revenue_group_subtype,"Revenue Group Subtype (Digital excl. XTEND, FY24/25)","A list of unique revenue group subtypes filtered for financial years 2024 and 2025, specifically where the derived revenue type grouping is 'DIGITAL (excl.XTEND)'.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT t0.revenue_group_subtype FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) IN ('2024', '2025') AND (CASE WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'DIGITAL' THEN 'DIGITAL (excl.XTEND)' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'PRINT' THEN 'PRINT' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'XTEND' THEN 'XTEND ONLY' ELSE NULL END) IN ('DIGITAL (excl.XTEND)') GROUP BY t0.revenue_group_subtype LIMIT 100",t0.revenue_group_subtype,dimension,False,medium,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
calculated_revenue_type_grouping_filtered_digital_programmatic_2024_2025,calculated_revenue_type_grouping,"Calculated Revenue Type Grouping (Digital/Programmatic, FY24/25)","A derived dimension categorizing revenue types into 'DIGITAL (excl.XTEND)', 'PRINT', or 'XTEND ONLY', filtered for digital and programmatic revenue group subtypes in financial years 2024 and 2025.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT (CASE WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'DIGITAL' THEN 'DIGITAL (excl.XTEND)' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'PRINT' THEN 'PRINT' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'XTEND' THEN 'XTEND ONLY' ELSE NULL END) AS calculated_revenue_type FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE SAFE_CAST(t0.financial_year AS STRING) IN ('2024', '2025') AND t0.revenue_group_subtype IN ('DIGITAL', 'PROGRAMMATIC EXCHANGE', 'PROGRAMMATIC SOURCE') GROUP BY 1 LIMIT 100",(CASE WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'DIGITAL' THEN 'DIGITAL (excl.XTEND)' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'PRINT' THEN 'PRINT' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'XTEND' THEN 'XTEND ONLY' ELSE NULL END),calculated_field,False,medium,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
financial_year_filtered_digital_programmatic_video_adtype,financial_year,"Financial Year (Digital/Programmatic, Video Ad Types)",A list of unique financial years filtered for digital and programmatic revenue group subtypes and specific social/non-targeted video ad types.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SAFE_CAST(t0.financial_year AS STRING) AS financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE t0.revenue_group_subtype IN ('DIGITAL', 'PROGRAMMATIC EXCHANGE', 'PROGRAMMATIC SOURCE') AND t0.fin_adtype_name IN ('SOCIAL VIDEO (NON-TARGETED)', 'SOCIAL VIDEO (TARGETED)', 'VIDEO (NON-TARGETED)') GROUP BY 1 LIMIT 100",SAFE_CAST(t0.financial_year AS STRING),dimension,False,medium,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
financial_year_filtered_digital_programmatic,financial_year,Financial Year (Digital/Programmatic),A list of unique financial years filtered for digital and programmatic revenue group subtypes.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SAFE_CAST(t0.financial_year AS STRING) AS financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE t0.revenue_group_subtype IN ('DIGITAL', 'PROGRAMMATIC EXCHANGE', 'PROGRAMMATIC SOURCE') GROUP BY 1 LIMIT 100",SAFE_CAST(t0.financial_year AS STRING),dimension,False,medium,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
sum_gross_revenue_amount_print_2024_2025_by_month_industry_publication,gross_revenue_amount,"Total Gross Revenue (Print, FY24/25, by Month/Industry/Publication)","The sum of gross revenue amount, filtered for print revenue group subtype and print-categorized derived revenue types in financial years 2024 and 2025, excluding 'PRODUCTION' style names, grouped by financial year, fiscal month, industry group, and publication name.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(t0.gross_revenue_amount) AS total_gross_revenue FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 WHERE t0.style_name != 'PRODUCTION' AND SAFE_CAST(t0.financial_year AS STRING) IN ('2024', '2025') AND t0.revenue_group_subtype IN ('PRINT') AND (CASE WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'DIGITAL' THEN 'DIGITAL (excl.XTEND)' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'PRINT' THEN 'PRINT' WHEN (CASE WHEN t0.xtend_flag = 'Y' THEN 'XTEND' ELSE t0.revenue_type END) = 'XTEND' THEN 'XTEND ONLY' ELSE NULL END) IN ('PRINT') GROUP BY SAFE_CAST(t0.financial_year AS STRING), SAFE_CAST(t0.fiscal_month_number AS STRING), t0.nca_industry_anzsic_pillar_group, t0.unified_publication_name LIMIT 100",SUM(t0.gross_revenue_amount),measure,True,high,12,61f1feb4-fc3e-4bee-b987-84c86cfe6425
min_dw_asl_load_timestamp,dw_asl_load_timestamp_info,Minimum Data Load Timestamp,"The earliest timestamp indicating when the data was loaded into the system, often used for data freshness checks.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT MIN(t0.dw_asl_load_timestamp) AS min_load_timestamp FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,MIN(t0.dw_asl_load_timestamp),measure,False,low,14,dd0544cd-634f-43bd-a385-158c78dace66
publishing_division_group_dimension,publishing_division_group,Publishing Division Group,The primary grouping of publishing divisions for ad sales performance.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT DISTINCT t0.publishing_division_group FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 ORDER BY t0.publishing_division_group LIMIT 100,t0.publishing_division_group,dimension,False,medium,14,dd0544cd-634f-43bd-a385-158c78dace66
unified_publication_name_dimension,unified_publication_name,Unified Publication Name,"The specific name of the publication, unified across different sources, used for detailed analysis.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT DISTINCT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 ORDER BY t0.unified_publication_name LIMIT 100,t0.unified_publication_name,dimension,False,medium,14,dd0544cd-634f-43bd-a385-158c78dace66
publication_group_derived_dimension,publication_group_derived,Publication Group (Derived),"A categorized grouping of publications based on specific business rules, used for high-level analysis and filtering.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT DISTINCT CASE WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home' WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul' WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape' WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate' WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge' WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine' ELSE 'Others' END AS derived_publication_group FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 ORDER BY derived_publication_group LIMIT 100","CASE WHEN (t0.unified_publication_name IN ('Home NSW', 'Home SA')) THEN 'At Home' WHEN (t0.unified_publication_name IN ('Body + Soul - NSW', 'Body + Soul - QLD', 'Body + Soul - SA', 'Body + Soul - TAS', 'Body + Soul - VIC')) THEN 'Body & Soul' WHEN (t0.unified_publication_name IN ('Escape NSW', 'Escape QLD', 'Escape SA', 'Escape TAS', 'Escape VIC')) THEN 'Escape' WHEN (t0.unified_publication_name IN ('Courier-Mail Real Estate', 'Developing QLD', 'DT Real Estate', 'Herald Sun Real Estate', 'New Homes SA', 'SA Real Estate')) THEN 'Real Estate' WHEN (t0.unified_publication_name IN ('Stellar - NSW', 'Stellar - QLD', 'Stellar - SA', 'Stellar - Vic', 'TV Guide NSW', 'TV Guide QLD', 'TV Guide SA', 'TV Guide VIC')) THEN 'Stellar/Binge' WHEN (t0.unified_publication_name IN ('QWeekend Magazine', 'SA Weekend', 'SydneyWeekend', 'VWeekend')) THEN 'Weekend Magazine' ELSE 'Others' END",calculated_field,False,high,14,dd0544cd-634f-43bd-a385-158c78dace66
financial_quarter_dimension,financial_quarter,Financial Quarter,"The financial quarter associated with the ad sales performance data, used for time-based aggregation and filtering.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT DISTINCT SAFE_CAST(t0.financial_quarter AS INT64) AS financial_quarter FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 ORDER BY financial_quarter LIMIT 100,t0.financial_quarter,dimension,False,medium,14,dd0544cd-634f-43bd-a385-158c78dace66
financial_short_month_dimension,financial_short_month,Financial Short Month,"The short name of the financial month associated with the ad sales performance data, used for time-based filtering.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT DISTINCT t0.financial_short_month FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0 ORDER BY t0.financial_short_month LIMIT 100,t0.financial_short_month,dimension,False,medium,14,dd0544cd-634f-43bd-a385-158c78dace66
sales_volume_by_sales_channel_level_5_the_australian_2025,total_sales_volume,"Sales Volume by Sales Channel Level 5 (The Australian, 2025)",Total sales volume aggregated by sales channel level 5 for 'The Australian' masthead in the year 2025.,ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Sales_channel_level_5, SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) AS sales_volume FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE Masthead_name = 'The Australian' AND SAFE_CAST(Year AS INT64) = 2025 GROUP BY Sales_channel_level_5",SUM(Sales_volume),measure,True,high,15,b3eace25-3ec3-427a-839f-0639faf377ea
sum_of_year_by_masthead_the_australian_up_to_2027,sum_of_year,"Sum of Year by Masthead (The Australian, up to 2027)","The sum of the 'Year' column, grouped by masthead, for 'The Australian' masthead, filtered for years up to 2027. This metric is unusual and may indicate a misconfiguration.",ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Masthead_name, SUM(SAFE_CAST(Year AS INT64)) AS sum_of_year FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE Masthead_name = 'The Australian' AND SAFE_CAST(Year AS INT64) <= 2027 GROUP BY Masthead_name",SUM(Year),measure,False,low,15,b3eace25-3ec3-427a-839f-0639faf377ea
sales_volume_by_sales_channel_level_4_the_australian_up_to_2027,total_sales_volume,"Sales Volume by Sales Channel Level 4 (The Australian, up to 2027)","Total sales volume aggregated by sales channel level 4 for 'The Australian' masthead, considering years up to 2027.",ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Sales_channel_level_4, SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) AS sales_volume FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE Masthead_name = 'The Australian' AND SAFE_CAST(Year AS INT64) <= 2027 GROUP BY Sales_channel_level_4",SUM(Sales_volume),measure,True,high,15,b3eace25-3ec3-427a-839f-0639faf377ea
sales_volume_by_masthead_2025,total_sales_volume,Sales Volume by Masthead (2025),Total sales volume aggregated by masthead for the year 2025.,ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Masthead_name, SUM(SAFE_CAST(Sales_volume AS BIGNUMERIC)) AS sales_volume FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE SAFE_CAST(Year AS INT64) = 2025 GROUP BY Masthead_name",SUM(Sales_volume),measure,True,high,15,b3eace25-3ec3-427a-839f-0639faf377ea
sum_of_week_by_week_the_australian_up_to_2027,sum_of_week,"Sum of Week by Week (The Australian, up to 2027)","The sum of the 'Week' column, grouped by week, for 'The Australian' masthead, filtered for years up to 2027. This metric is unusual and may indicate a misconfiguration.",ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Week, SUM(SAFE_CAST(Week AS INT64)) AS sum_of_week FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE Masthead_name = 'The Australian' AND SAFE_CAST(Year AS INT64) <= 2027 GROUP BY Week",SUM(Week),measure,False,low,15,b3eace25-3ec3-427a-839f-0639faf377ea
sum_of_year_by_week_the_australian_up_to_2027,sum_of_year,"Sum of Year by Week (The Australian, up to 2027)","The sum of the 'Year' column, grouped by week, for 'The Australian' masthead, filtered for years up to 2027. This metric is unusual and may indicate a misconfiguration.",ncau-data-newsquery-prd,sbx_fda_noncorefin,dt_regression_data,"SELECT Week, SUM(SAFE_CAST(Year AS INT64)) AS sum_of_year FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.dt_regression_data` WHERE Masthead_name = 'The Australian' AND SAFE_CAST(Year AS INT64) <= 2027 GROUP BY Week",SUM(Year),measure,False,low,15,b3eace25-3ec3-427a-839f-0639faf377ea
add_volume,add_volume,Added Volume,The volume added to subscriptions or base.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.add_volume FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.add_volume,measure,True,high,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
category_name,category_name,Category Name,The name of the subscription category.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.category_name FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.category_name,dimension,False,medium,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
closing_base,closing_base,Closing Base,The total subscription base at the end of a period.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.closing_base FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.closing_base,measure,True,high,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
earned_amount,earned_amount,Earned Amount,The revenue or amount earned from subscriptions.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.earned_amount FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.earned_amount,measure,True,high,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
fiscal_week_id,fiscal_week_id,Fiscal Week ID,Identifier for the fiscal week (YYYYWW format).,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.fiscal_week_id FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.fiscal_week_id,dimension,False,medium,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
gl_publication_code,gl_publication_code,GL Publication Code,General Ledger publication code for financial reporting.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.gl_publication_code FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.gl_publication_code,dimension,False,medium,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
opening_base,opening_base,Opening Base,The total subscription base at the beginning of a period.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.opening_base FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.opening_base,measure,True,high,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
red_volume,red_volume,Reduced Volume,The volume reduced from subscriptions or base.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.red_volume FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.red_volume,measure,True,high,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
transfer_in,transfer_in,Transfer In Volume,Volume transferred into the subscription base.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.transfer_in FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.transfer_in,measure,False,medium,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
transfer_out,transfer_out,Transfer Out Volume,Volume transferred out of the subscription base.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tm1_pbf_subscriptions,SELECT t0.transfer_out FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tm1_pbf_subscriptions` AS t0 LIMIT 1,t0.transfer_out,measure,False,medium,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
business_unit_code,business_unit_code,Business Unit Code,Unique identifier for a business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.business_unit_code FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.business_unit_code,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
business_unit_name,business_unit_name,Business Unit Name,Name of the business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.business_unit_name FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.business_unit_name,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
business_unit_status,business_unit_status,Business Unit Status,Current operational status of the business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.business_unit_status FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.business_unit_status,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
business_unit_type_code,business_unit_type_code,Business Unit Type Code,Code indicating the type of business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.business_unit_type_code FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.business_unit_type_code,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
company_number,company_number,Company Number,Identifier for the company associated with the business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.company_number FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.company_number,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
department,department,Department,Department name within the business unit.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.department FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.department,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
legacy_reporting_group,legacy_reporting_group,Legacy Reporting Group,Older reporting group classification.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.legacy_reporting_group FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.legacy_reporting_group,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
publication_group,publication_group,Publication Group,Group to which a publication belongs.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.publication_group FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.publication_group,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
publication_number,publication_number,Publication Number,Unique identifier for a publication.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.publication_number FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.publication_number,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
reporting_group,reporting_group,Reporting Group,Current reporting group classification.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT t0.reporting_group FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,t0.reporting_group,dimension,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
record_count_gl_business_unit_dim,record_count,Record Count (Business Unit Dim),Total number of records in the business unit dimension table.,ncau-data-newsquery-prd,dap_tm1,gl_business_unit_dim,SELECT COUNT(1) AS record_count FROM `ncau-data-newsquery-prd.dap_tm1.gl_business_unit_dim` AS t0 LIMIT 1,COUNT(1),aggregation,False,low,16,23c8b213-a9f0-4158-b8fa-bff14425abb5
always_on_digital_sales_budget_current_week_courier_mail_fy2025,always_on_digital_sales,"Always on Digital Sales (Budget) - Current Week, Courier Mail, FY2025","Budgeted always on digital sales for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Always_on_Digital_Sales_B) AS always_on_digital_sales_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Always_on_Digital_Sales_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
breach_sales_budget_current_week_courier_mail_fy2025,breach_sales,"Breach Sales (Budget) - Current Week, Courier Mail, FY2025","Budgeted breach sales for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Breach_Sales_B) AS breach_sales_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Breach_Sales_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
closing_base_3rd_party_apls_budget_current_week_courier_mail_fy2025,closing_base_3rd_party_apls,"Closing Base 3rd Party APLS (Budget) - Current Week, Courier Mail, FY2025","Budgeted closing base 3rd party apls for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Closing_Base_3rd_Party_APLS_B) AS closing_base_3rd_party_apls_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Closing_Base_3rd_Party_APLS_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
closing_base_3rd_party_budget_current_week_courier_mail_fy2025,closing_base_3rd_party,"Closing Base 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted closing base 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Closing_Base_3rd_Party_B) AS closing_base_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Closing_Base_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
closing_base_3rd_party_gpla_budget_current_week_courier_mail_fy2025,closing_base_3rd_party_gpla,"Closing Base 3rd Party GPLA (Budget) - Current Week, Courier Mail, FY2025","Budgeted closing base 3rd party gpla for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Closing_Base_3rd_Party_GPLA_B) AS closing_base_3rd_party_gpla_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Closing_Base_3rd_Party_GPLA_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
essentials_budget_current_week_courier_mail_fy2025,essentials,"Essentials (Budget) - Current Week, Courier Mail, FY2025","Budgeted essentials for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Essentials_B) AS essentials_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Essentials_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
general_offer_sales_budget_current_week_courier_mail_fy2025,general_offer_sales,"General Offer Sales (Budget) - Current Week, Courier Mail, FY2025","Budgeted general offer sales for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.General_Offer_Sales_B) AS general_offer_sales_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.General_Offer_Sales_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_cancels_budget_current_week_courier_mail_fy2025,net_cancels,"Net Cancels (Budget) - Current Week, Courier Mail, FY2025","Budgeted net cancels for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Cancels_B) AS net_cancels_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Cancels_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_3rd_party_apls_budget_current_week_courier_mail_fy2025,net_growth_3rd_party_apls,"Net Growth 3rd Party APLS (Budget) - Current Week, Courier Mail, FY2025","Budgeted net growth 3rd party apls for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_3rd_Party_APLS_B) AS net_growth_3rd_party_apls_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Growth_3rd_Party_APLS_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_3rd_party_budget_current_week_courier_mail_fy2025,net_growth_3rd_party,"Net Growth 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted net growth 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_3rd_Party_B) AS net_growth_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Growth_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_3rd_party_gpla_budget_current_week_courier_mail_fy2025,net_growth_3rd_party_gpla,"Net Growth 3rd Party GPLA (Budget) - Current Week, Courier Mail, FY2025","Budgeted net growth 3rd party gpla for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_3rd_Party_GPLA_B) AS net_growth_3rd_party_gpla_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Growth_3rd_Party_GPLA_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_consumer_budget_current_week_courier_mail_fy2025,net_growth_consumer,"Net Growth Consumer (Budget) - Current Week, Courier Mail, FY2025","Budgeted net growth consumer for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_Consumer_B) AS net_growth_consumer_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Growth_Consumer_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_incl_3rd_party_budget_current_week_courier_mail_fy2025,net_growth_incl_3rd_party,"Net Growth incl 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted net growth incl 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_incl_3rd_Party_B) AS net_growth_incl_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Net_Growth_incl_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
other_sales_budget_current_week_courier_mail_fy2025,other_sales,"Other Sales (Budget) - Current Week, Courier Mail, FY2025","Budgeted other sales for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Other_Sales_B) AS other_sales_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Other_Sales_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_apls_budget_current_week_courier_mail_fy2025,revenue_3rd_party_apls,"Revenue 3rd Party APLS (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue 3rd party apls for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party_APLS_B) AS revenue_3rd_party_apls_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_3rd_Party_APLS_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_budget_current_week_courier_mail_fy2025,revenue_3rd_party,"Revenue 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party_B) AS revenue_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_gpla_budget_current_week_courier_mail_fy2025,revenue_3rd_party_gpla,"Revenue 3rd Party GPLA (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue 3rd party gpla for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party_GPLA_B) AS revenue_3rd_party_gpla_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_3rd_Party_GPLA_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_campus_budget_current_week_courier_mail_fy2025,revenue_campus,"Revenue Campus (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue campus for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Campus_B) AS revenue_campus_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_Campus_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_consumer_budget_current_week_courier_mail_fy2025,revenue_consumer,"Revenue Consumer (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue consumer for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Consumer_B) AS revenue_consumer_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_Consumer_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_corp_budget_current_week_courier_mail_fy2025,revenue_corp,"Revenue Corp (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue corp for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Corp_B) AS revenue_corp_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_Corp_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_other_budget_current_week_courier_mail_fy2025,revenue_other,"Revenue Other (Budget) - Current Week, Courier Mail, FY2025","Budgeted revenue other for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Other_B) AS revenue_other_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Revenue_Other_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
switches_budget_current_week_courier_mail_fy2025,switches,"Switches (Budget) - Current Week, Courier Mail, FY2025","Budgeted switches for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Switches_B) AS switches_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Switches_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_excluding_3rd_party_budget_current_week_courier_mail_fy2025,total_cancels_excluding_3rd_party,"Total Cancels excluding 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted total cancels excluding 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_excluding_3rd_Party_B) AS total_cancels_excluding_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Total_Cancels_excluding_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_including_3rd_party_budget_current_week_courier_mail_fy2025,total_cancels_including_3rd_party,"Total Cancels including 3rd Party (Budget) - Current Week, Courier Mail, FY2025","Budgeted total cancels including 3rd party for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_including_3rd_Party_B) AS total_cancels_including_3rd_party_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Total_Cancels_including_3rd_Party_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_closing_base_budget_current_week_courier_mail_fy2025,total_closing_base,"Total Closing Base (Budget) - Current Week, Courier Mail, FY2025","Budgeted total closing base for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Closing_Base_B) AS total_closing_base_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Total_Closing_Base_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_revenue_budget_current_week_courier_mail_fy2025,total_revenue,"Total Revenue (Budget) - Current Week, Courier Mail, FY2025","Budgeted total revenue for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Revenue_B) AS total_revenue_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Total_Revenue_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_weekly_sales_budget_current_week_courier_mail_fy2025,total_weekly_sales,"Total Weekly Sales (Budget) - Current Week, Courier Mail, FY2025","Budgeted total weekly sales for the current fiscal week of FY2025, specific to Courier Mail masthead.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Weekly_Sales_B) AS total_weekly_sales_budget
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-11 07:04:27.365681+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  ) AND t0.masthead = 'CM'
LIMIT 1;",SUM(t0.Total_Weekly_Sales_B),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_excluding_3rd_party_forecast_actual_current_week_all_mastheads_fy2024,total_cancels_excluding_3rd_party,"Total Cancels excluding 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual total cancels excluding 3rd party for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_excluding_3rd_Party) AS total_cancels_excluding_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Cancels_excluding_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
other_sales_forecast_actual_current_week_all_mastheads_fy2024,other_sales,"Other Sales (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual other sales for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Other_Sales) AS other_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Other_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_including_3rd_party_forecast_actual_current_week_all_mastheads_fy2024,total_cancels_including_3rd_party,"Total Cancels including 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual total cancels including 3rd party for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_including_3rd_Party) AS total_cancels_including_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Cancels_including_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
failed_payment_volume_forecast_actual_current_week_all_mastheads_fy2024,failed_payment_volume,"Failed Payment Volume (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual failed payment volume for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Failed_Payment_Volume) AS failed_payment_volume
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Failed_Payment_Volume),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_apls_forecast_actual_current_week_all_mastheads_fy2024,revenue_3rd_party_apls,"Revenue 3rd Party APLS (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual revenue 3rd party apls for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party_APLS) AS revenue_3rd_party_apls
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_3rd_Party_APLS),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
general_offer_sales_forecast_actual_current_week_all_mastheads_fy2024,general_offer_sales,"General Offer Sales (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual general offer sales for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.General_Offer_Sales) AS general_offer_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.General_Offer_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_cancels_forecast_actual_current_week_all_mastheads_fy2024,net_cancels,"Net Cancels (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual net cancels for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Cancels) AS net_cancels
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Cancels),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_consumer_forecast_actual_current_week_all_mastheads_fy2024,net_growth_consumer,"Net Growth Consumer (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual net growth consumer for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_Consumer) AS net_growth_consumer
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Growth_Consumer),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_revenue_forecast_actual_current_week_all_mastheads_fy2024,total_revenue,"Total Revenue (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual total revenue for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Revenue) AS total_revenue
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Revenue),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
switches_forecast_actual_current_week_all_mastheads_fy2024,switches,"Switches (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual switches for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Switches) AS switches
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Switches),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_weekly_sales_forecast_actual_current_week_all_mastheads_fy2024,total_weekly_sales,"Total Weekly Sales (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual total weekly sales for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Weekly_Sales) AS total_weekly_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Weekly_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_forecast_actual_current_week_all_mastheads_fy2024,revenue_3rd_party,"Revenue 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual revenue 3rd party for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party) AS revenue_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_corp_forecast_actual_current_week_all_mastheads_fy2024,revenue_corp,"Revenue Corp (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual revenue corp for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Corp) AS revenue_corp
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_Corp),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_other_forecast_actual_current_week_all_mastheads_fy2024,revenue_other,"Revenue Other (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual revenue other for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Other) AS revenue_other
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_Other),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_campus_forecast_actual_current_week_all_mastheads_fy2024,revenue_campus,"Revenue Campus (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual revenue campus for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Campus) AS revenue_campus
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_Campus),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
breach_sales_forecast_actual_current_week_all_mastheads_fy2024,breach_sales,"Breach Sales (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual breach sales for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Breach_Sales) AS breach_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Breach_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
closing_base_consumer_forecast_actual_current_week_all_mastheads_fy2024,closing_base_consumer,"Closing Base Consumer (Forecast/Actual) - Current Week, All Mastheads, FY2024","Forecast/Actual closing base consumer for the current fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Closing_Base_Consumer) AS closing_base_consumer
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Closing_Base_Consumer),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
other_sales_forecast_actual_current_week_all_mastheads_fy2025,other_sales,"Other Sales (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual other sales for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Other_Sales) AS other_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Other_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_incl_3rd_party_forecast_actual_current_week_all_mastheads_fy2025,net_growth_incl_3rd_party,"Net Growth incl 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual net growth incl 3rd party for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_incl_3rd_Party) AS net_growth_incl_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Growth_incl_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_revenue_forecast_actual_current_week_all_mastheads_fy2025,total_revenue,"Total Revenue (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual total revenue for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Revenue) AS total_revenue
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Revenue),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
failed_payment_volume_forecast_actual_current_week_all_mastheads_fy2025,failed_payment_volume,"Failed Payment Volume (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual failed payment volume for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Failed_Payment_Volume) AS failed_payment_volume
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Failed_Payment_Volume),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_3rd_party_apls_forecast_actual_current_week_all_mastheads_fy2025,revenue_3rd_party_apls,"Revenue 3rd Party APLS (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual revenue 3rd party apls for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_3rd_Party_APLS) AS revenue_3rd_party_apls
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_3rd_Party_APLS),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
general_offer_sales_forecast_actual_current_week_all_mastheads_fy2025,general_offer_sales,"General Offer Sales (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual general offer sales for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.General_Offer_Sales) AS general_offer_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.General_Offer_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_cancels_forecast_actual_current_week_all_mastheads_fy2025,net_cancels,"Net Cancels (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual net cancels for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Cancels) AS net_cancels
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Cancels),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
switches_forecast_actual_current_week_all_mastheads_fy2025,switches,"Switches (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual switches for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Switches) AS switches
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Switches),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_excluding_3rd_party_forecast_actual_current_week_all_mastheads_fy2025,total_cancels_excluding_3rd_party,"Total Cancels excluding 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual total cancels excluding 3rd party for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_excluding_3rd_Party) AS total_cancels_excluding_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Cancels_excluding_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_cancels_including_3rd_party_forecast_actual_current_week_all_mastheads_fy2025,total_cancels_including_3rd_party,"Total Cancels including 3rd Party (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual total cancels including 3rd party for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Cancels_including_3rd_Party) AS total_cancels_including_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Cancels_including_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
breach_sales_forecast_actual_current_week_all_mastheads_fy2025,breach_sales,"Breach Sales (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual breach sales for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Breach_Sales) AS breach_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Breach_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
always_on_digital_sales_forecast_actual_current_week_all_mastheads_fy2025,always_on_digital_sales,"Always on Digital Sales (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual always on digital sales for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Always_on_Digital_Sales) AS always_on_digital_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Always_on_Digital_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_3rd_party_apls_forecast_actual_current_week_all_mastheads_fy2025,net_growth_3rd_party_apls,"Net Growth 3rd Party APLS (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual net growth 3rd party apls for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_3rd_Party_APLS) AS net_growth_3rd_party_apls
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Growth_3rd_Party_APLS),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
total_weekly_sales_forecast_actual_current_week_all_mastheads_fy2025,total_weekly_sales,"Total Weekly Sales (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual total weekly sales for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Total_Weekly_Sales) AS total_weekly_sales
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Total_Weekly_Sales),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_corp_forecast_actual_current_week_all_mastheads_fy2025,revenue_corp,"Revenue Corp (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual revenue corp for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Corp) AS revenue_corp
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_Corp),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
revenue_other_forecast_actual_current_week_all_mastheads_fy2025,revenue_other,"Revenue Other (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual revenue other for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Revenue_Other) AS revenue_other
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Revenue_Other),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
net_growth_consumer_forecast_actual_current_week_all_mastheads_fy2025,net_growth_consumer,"Net Growth Consumer (Forecast/Actual) - Current Week, All Mastheads, FY2025","Forecast/Actual net growth consumer for the current fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Net_Growth_Consumer) AS net_growth_consumer
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = (
    CASE
      WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) - 1) <= 2
      THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1)
      ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP('2025-03-10 23:27:18.812108+00', 'Australia/Sydney')) AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)
    END
  )
LIMIT 1;",SUM(t0.Net_Growth_Consumer),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_gpla_forecast_actual_week_1_all_mastheads_fy2025,opening_base_3rd_party_gpla,"Opening Base 3rd Party GPLA (Forecast/Actual) - Week 1, All Mastheads, FY2025","Forecast/Actual opening base 3rd party gpla for the first fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party_GPLA) AS opening_base_3rd_party_gpla
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party_GPLA),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_gpla_forecast_actual_week_1_all_mastheads_fy2024,opening_base_3rd_party_gpla,"Opening Base 3rd Party GPLA (Forecast/Actual) - Week 1, All Mastheads, FY2024","Forecast/Actual opening base 3rd party gpla for the first fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party_GPLA) AS opening_base_3rd_party_gpla
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party_GPLA),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_forecast_actual_week_1_all_mastheads_fy2025,opening_base_3rd_party,"Opening Base 3rd Party (Forecast/Actual) - Week 1, All Mastheads, FY2025","Forecast/Actual opening base 3rd party for the first fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party) AS opening_base_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_forecast_actual_week_1_all_mastheads_fy2024,opening_base_3rd_party,"Opening Base 3rd Party (Forecast/Actual) - Week 1, All Mastheads, FY2024","Forecast/Actual opening base 3rd party for the first fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party) AS opening_base_3rd_party
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_apls_forecast_actual_week_1_all_mastheads_fy2025,opening_base_3rd_party_apls,"Opening Base 3rd Party APLS (Forecast/Actual) - Week 1, All Mastheads, FY2025","Forecast/Actual opening base 3rd party apls for the first fiscal week of FY2025, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party_APLS) AS opening_base_3rd_party_apls
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2025 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party_APLS),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
opening_base_3rd_party_apls_forecast_actual_week_1_all_mastheads_fy2024,opening_base_3rd_party_apls,"Opening Base 3rd Party APLS (Forecast/Actual) - Week 1, All Mastheads, FY2024","Forecast/Actual opening base 3rd party apls for the first fiscal week of FY2024, across all mastheads.",ncau-data-newsquery-prd,sbx_fda_noncorefin,masthead_scorecard_forecast_version,"SELECT
  SUM(t0.Opening_Base_3rd_Party_APLS) AS opening_base_3rd_party_apls
FROM
  `ncau-data-newsquery-prd.sbx_fda_noncorefin.masthead_scorecard_forecast_version` AS t0
WHERE
  t0.fy_year = 2024 AND t0.fy_week_of_year = 1
LIMIT 1;",SUM(t0.Opening_Base_3rd_Party_APLS),measure,true,high,17,5e3be025-a96e-4f5d-8172-dfef07e60f6d
gross_revenue_current_year_k,gross_revenue,Current Year Gross Revenue (K),"Gross revenue amount for the current financial year, in thousands.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN SAFE_DIVIDE(t0.gross_revenue_amount, 1000) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0","SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN SAFE_DIVIDE(t0.gross_revenue_amount, 1000) ELSE 0 END)",measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_current_year,gross_revenue,Current Year Gross Revenue,Gross revenue amount for the current financial year.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_last_year,gross_revenue,Last Year Gross Revenue,Gross revenue amount for the previous financial year.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_last_year_k,gross_revenue,Last Year Gross Revenue (K),"Gross revenue amount for the previous financial year, in thousands.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(SAFE_DIVIDE(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END, 1000)) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0","SUM(SAFE_DIVIDE(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END, 1000))",measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_next_year_k,gross_revenue,Next Year Gross Revenue (K),"Gross revenue amount for the next financial year, in thousands.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(CASE WHEN t0.relative_fy_year_offset = 1 THEN SAFE_DIVIDE(t0.gross_revenue_amount, 1000) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0","SUM(CASE WHEN t0.relative_fy_year_offset = 1 THEN SAFE_DIVIDE(t0.gross_revenue_amount, 1000) ELSE 0 END)",measure,False,medium,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_current_future_months,gross_revenue,Current Year Gross Revenue (Current/Future Months),Gross revenue amount for current and future months within the current financial year.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(CASE WHEN t0.relative_fy_month_offset > -1 AND t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(CASE WHEN t0.relative_fy_month_offset > -1 AND t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_last_year_stly,gross_revenue,Last Year Gross Revenue STLY,Gross revenue amount for the same time last financial year.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(CASE WHEN t0.relative_fy_year_offset = -1 AND t0.stly_flag = 'Y' THEN t0.gross_revenue_amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(CASE WHEN t0.relative_fy_year_offset = -1 AND t0.stly_flag = 'Y' THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
gross_revenue_last_year_stly_k,gross_revenue,Last Year Gross Revenue STLY (K),"Gross revenue amount for the same time last financial year, in thousands.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(SAFE_DIVIDE(CASE WHEN t0.relative_fy_year_offset = -1 AND t0.stly_flag = 'Y' THEN t0.gross_revenue_amount ELSE 0 END, 1000)) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0","SUM(SAFE_DIVIDE(CASE WHEN t0.relative_fy_year_offset = -1 AND t0.stly_flag = 'Y' THEN t0.gross_revenue_amount ELSE 0 END, 1000))",measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
pub_lgb_total,pub_lgb,Total Pub LGB,Total Publishing Local Government Business amount.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(t0.pub_lgb) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(t0.pub_lgb),measure,False,medium,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
pub_lgb_current_year_k,pub_lgb,Current Year Pub LGB (K),"Publishing Local Government Business amount for the current financial year, in thousands.",ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,"SELECT SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN SAFE_DIVIDE(t0.pub_lgb, 1000) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0","SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN SAFE_DIVIDE(t0.pub_lgb, 1000) ELSE 0 END)",measure,True,high,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
pub_lgb_current_future_months,pub_lgb,Pub LGB (Current/Future Months),Publishing Local Government Business amount for current and future months within the financial year.,ncau-data-newsquery-prd,asl_finance_derived,adsales_performance,SELECT SUM(CASE WHEN t0.relative_fy_month_offset > -1 THEN t0.pub_lgb ELSE NULL END) FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_performance` AS t0,SUM(CASE WHEN t0.relative_fy_month_offset > -1 THEN t0.pub_lgb ELSE NULL END),measure,False,medium,18,0aff66b8-3b9d-4830-96ec-abef5f7eb7ef
digital_gross_revenue_campaigns_beenu_madan,digital_gross_revenue,"Digital Gross Revenue (CG Campaigns, Beenu Madan)","Total gross revenue from digital bookings, specifically for 'CG Campaigns' client growth category and sales employee 'Beenu Madan', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn43_) AS digital_gross_revenue FROM (
SELECT CASE WHEN (clmn40_ AND clmn46_ AND clmn62_ AND clmn23_ AND clmn36_ AND clmn52_) THEN 'Y' ELSE 'N' END AS clmn63_, clmn43_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn26_ OR clmn60_ OR clmn61_) AS clmn62_, clmn52_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn59_ AND clmn27_) AS clmn61_, clmn26_, clmn52_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn60_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn57_ != 'CG Campaigns') AS clmn59_, (clmn57_ = 'CG Campaigns') AS clmn60_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT CASE WHEN (clmn55_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn55_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn55_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn57_, CASE WHEN (clmn55_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn55_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn55_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn58_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn53_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn55_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn53_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn56_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_ FROM (
SELECT CASE WHEN (clmn17_ = 'Y') THEN clmn50_ ELSE true END AS clmn52_, CASE WHEN (clmn17_ = 'Y') THEN clmn51_ WHEN (clmn26_ AND clmn47_) THEN clmn35_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn24_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'INITIAL' WHEN (clmn25_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' WHEN (clmn49_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, CASE WHEN (clmn17_ = 'Y') THEN clmn51_ WHEN (clmn26_ AND clmn47_) THEN clmn35_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn24_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'INITIAL' WHEN (clmn25_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' WHEN (clmn49_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn26_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn45_, clmn39_ FROM (
SELECT (clmn32_ AND clmn44_) AS clmn50_, CASE WHEN (clmn32_ AND clmn33_) THEN 'INITIAL' WHEN (clmn30_ AND clmn44_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn51_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn26_, clmn27_, clmn23_, clmn40_, clmn43_, clmn47_, clmn24_, clmn25_, clmn41_, clmn46_, clmn42_, clmn38_, clmn48_, clmn35_, clmn36_, clmn49_, clmn15_, clmn17_, clmn45_, clmn39_ FROM (
SELECT (SAFE_CAST(clmn12_ AS DATETIME) <= clmn28_) AS clmn44_, (clmn29_ = 'CTR_') AS clmn45_, (clmn31_ OR clmn26_) AS clmn46_, NOT(clmn34_) AS clmn47_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn37_) AS clmn48_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn37_) AS clmn49_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn26_, clmn27_, clmn23_, clmn40_, clmn30_, clmn43_, clmn24_, clmn25_, clmn41_, clmn32_, clmn42_, clmn38_, clmn35_, clmn33_, clmn36_, clmn15_, clmn17_, clmn39_ FROM (
SELECT (clmn1_ != 'Other') AS clmn23_, (clmn1_ = 'Client Growth') AS clmn24_, (clmn1_ != 'Client Growth') AS clmn25_, (clmn3_ = 'Y') AS clmn26_, (clmn7_ != 'Existing Customer') AS clmn27_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn28_, SAFE.LEFT(clmn11_, 4) AS clmn29_, (clmn12_ > clmn9_) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ >= clmn10_) AS clmn32_, (clmn12_ <= clmn9_) AS clmn33_, (clmn14_ IS NULL) AS clmn34_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn35_, (clmn15_ != 0) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn16_ AS DATETIME), INTERVAL 27 DAY) AS clmn37_, (clmn12_ >= clmn16_) AS clmn38_, CASE WHEN ('Pub' = 'Pub') THEN clmn18_ ELSE clmn13_ END AS clmn39_, (clmn19_ = 'Y') AS clmn40_, (clmn20_ = 'Y') AS clmn41_, (clmn21_ = 'Y') AS clmn42_, CASE WHEN (clmn22_ = 'Digital') THEN clmn15_ ELSE 0 END AS clmn43_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn15_, clmn17_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.gross_revenue_amount AS clmn15_, t0.initial_booking_date AS clmn16_, t0.progo_flag AS clmn17_, t0.relative_fy_year_offset AS clmn18_, t0.reporting_date_greater_than_20231002 AS clmn19_, t0.reporting_date_greater_than_initbooking AS clmn20_, t0.reporting_date_less_than_initbookingplus365 AS clmn21_, t0.revenue_type AS clmn22_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn63_ = 'Y' AND clmn54_ != 'NOT ELIGIBLE' AND clmn45_ != true AND clmn39_ = 0 AND clmn58_ IN ('CG Campaigns') AND clmn56_ IN ('Beenu Madan'))",SUM(CASE WHEN t0.revenue_type = 'Digital' THEN t0.gross_revenue_amount ELSE 0 END),calculated_field,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
total_gross_revenue_campaigns_beenu_madan,total_gross_revenue,"Total Gross Revenue (CG Campaigns, Beenu Madan)","Total gross revenue from all bookings, specifically for 'CG Campaigns' client growth category and sales employee 'Beenu Madan', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn15_) AS total_gross_revenue FROM (
SELECT CASE WHEN (clmn40_ AND clmn46_ AND clmn62_ AND clmn23_ AND clmn36_ AND clmn52_) THEN 'Y' ELSE 'N' END AS clmn63_, clmn43_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn26_ OR clmn60_ OR clmn61_) AS clmn62_, clmn52_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn59_ AND clmn27_) AS clmn61_, clmn26_, clmn52_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn60_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT (clmn57_ != 'CG Campaigns') AS clmn59_, (clmn57_ = 'CG Campaigns') AS clmn60_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_, clmn58_ FROM (
SELECT CASE WHEN (clmn55_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn55_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn55_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn57_, CASE WHEN (clmn55_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn55_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn55_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn58_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_, clmn56_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn53_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn55_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn53_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn56_, clmn26_, clmn52_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn54_, clmn45_, clmn39_ FROM (
SELECT CASE WHEN (clmn17_ = 'Y') THEN clmn50_ ELSE true END AS clmn52_, CASE WHEN (clmn17_ = 'Y') THEN clmn51_ WHEN (clmn26_ AND clmn47_) THEN clmn35_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn24_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'INITIAL' WHEN (clmn25_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' WHEN (clmn49_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, CASE WHEN (clmn17_ = 'Y') THEN clmn51_ WHEN (clmn26_ AND clmn47_) THEN clmn35_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn24_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'INITIAL' WHEN (clmn25_ AND clmn38_ AND clmn48_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' WHEN (clmn49_ AND clmn41_ AND clmn42_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn26_, clmn27_, clmn23_, clmn40_, clmn43_, clmn46_, clmn36_, clmn15_, clmn45_, clmn39_ FROM (
SELECT (clmn32_ AND clmn44_) AS clmn50_, CASE WHEN (clmn32_ AND clmn33_) THEN 'INITIAL' WHEN (clmn30_ AND clmn44_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn51_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn26_, clmn27_, clmn23_, clmn40_, clmn43_, clmn47_, clmn24_, clmn25_, clmn41_, clmn46_, clmn42_, clmn38_, clmn48_, clmn35_, clmn36_, clmn49_, clmn15_, clmn17_, clmn45_, clmn39_ FROM (
SELECT (SAFE_CAST(clmn12_ AS DATETIME) <= clmn28_) AS clmn44_, (clmn29_ = 'CTR_') AS clmn45_, (clmn31_ OR clmn26_) AS clmn46_, NOT(clmn34_) AS clmn47_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn37_) AS clmn48_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn37_) AS clmn49_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn26_, clmn27_, clmn23_, clmn40_, clmn30_, clmn43_, clmn24_, clmn25_, clmn41_, clmn32_, clmn42_, clmn38_, clmn35_, clmn33_, clmn36_, clmn15_, clmn17_, clmn39_ FROM (
SELECT (clmn1_ != 'Other') AS clmn23_, (clmn1_ = 'Client Growth') AS clmn24_, (clmn1_ != 'Client Growth') AS clmn25_, (clmn3_ = 'Y') AS clmn26_, (clmn7_ != 'Existing Customer') AS clmn27_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn28_, SAFE.LEFT(clmn11_, 4) AS clmn29_, (clmn12_ > clmn9_) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ >= clmn10_) AS clmn32_, (clmn12_ <= clmn9_) AS clmn33_, (clmn14_ IS NULL) AS clmn34_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn35_, (clmn15_ != 0) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn16_ AS DATETIME), INTERVAL 27 DAY) AS clmn37_, (clmn12_ >= clmn16_) AS clmn38_, CASE WHEN ('Pub' = 'Pub') THEN clmn18_ ELSE clmn13_ END AS clmn39_, (clmn19_ = 'Y') AS clmn40_, (clmn20_ = 'Y') AS clmn41_, (clmn21_ = 'Y') AS clmn42_, CASE WHEN (clmn22_ = 'Digital') THEN clmn15_ ELSE 0 END AS clmn43_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn15_, clmn17_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.gross_revenue_amount AS clmn15_, t0.initial_booking_date AS clmn16_, t0.progo_flag AS clmn17_, t0.relative_fy_year_offset AS clmn18_, t0.reporting_date_greater_than_20231002 AS clmn19_, t0.reporting_date_greater_than_initbooking AS clmn20_, t0.reporting_date_less_than_initbookingplus365 AS clmn21_, t0.revenue_type AS clmn22_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn63_ = 'Y' AND clmn54_ != 'NOT ELIGIBLE' AND clmn45_ != true AND clmn39_ = 0 AND clmn58_ IN ('CG Campaigns') AND clmn56_ IN ('Beenu Madan'))",SUM(t0.gross_revenue_amount),measure,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
print_gross_revenue_one_off_multi_employee,print_gross_revenue,"Print Gross Revenue (One-Off, Multi-Employee)","Total gross revenue from print bookings, specifically for 'ONE-OFF' client growth status and sales employees 'Alex Hayes', 'Beenu Madan', or 'Skye Prasser', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn44_) AS print_gross_revenue FROM (
SELECT CASE WHEN (clmn42_ AND clmn48_ AND clmn65_ AND clmn24_ AND clmn38_ AND clmn58_) THEN 'Y' ELSE 'N' END AS clmn66_, clmn44_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn27_ OR clmn62_ OR clmn64_) AS clmn65_, clmn24_, clmn38_, clmn44_, clmn42_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn63_ AND clmn28_) AS clmn64_, clmn24_, clmn62_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn61_ = 'CG Campaigns') AS clmn62_, (clmn61_ != 'CG Campaigns') AS clmn63_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn59_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn59_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn59_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn61_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn59_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn60_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn55_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn56_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn57_, CASE WHEN (clmn18_ = 'Y') THEN clmn54_ ELSE true END AS clmn58_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn48_, clmn16_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn33_ AND clmn34_ AND clmn45_) THEN 'INITIAL' WHEN (clmn32_ AND clmn45_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, (clmn33_ AND clmn46_) AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn49_, clmn24_, clmn51_, clmn50_, clmn28_, clmn36_, clmn38_, clmn44_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn40_, clmn48_, clmn52_, clmn16_, clmn18_, clmn47_, clmn41_ FROM (
SELECT (SAFE_CAST(clmn20_ AS DATETIME) <= clmn29_) AS clmn45_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn29_) AS clmn46_, (clmn30_ = 'CTR_') AS clmn47_, (clmn31_ OR clmn27_) AS clmn48_, NOT(clmn35_) AS clmn49_, (SAFE_CAST(clmn20_ AS DATETIME) <= clmn37_) AS clmn50_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn39_) AS clmn51_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn39_) AS clmn52_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn24_, clmn28_, clmn32_, clmn36_, clmn38_, clmn44_, clmn33_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn34_, clmn40_, clmn16_, clmn18_, clmn41_ FROM (
SELECT (clmn1_ != 'Other') AS clmn24_, (clmn1_ = 'Client Growth') AS clmn25_, (clmn1_ != 'Client Growth') AS clmn26_, (clmn3_ = 'Y') AS clmn27_, (clmn7_ != 'Existing Customer') AS clmn28_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn29_, SAFE.LEFT(clmn11_, 4) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ > clmn9_) AS clmn32_, (clmn12_ >= clmn10_) AS clmn33_, (clmn12_ <= clmn9_) AS clmn34_, (clmn14_ IS NULL) AS clmn35_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn15_ AS DATETIME), INTERVAL 365 DAY) AS clmn37_, (clmn16_ != 0) AS clmn38_, DATETIME_ADD(SAFE_CAST(clmn17_ AS DATETIME), INTERVAL 27 DAY) AS clmn39_, (clmn12_ >= clmn17_) AS clmn40_, CASE WHEN ('Pub' = 'Pub') THEN clmn19_ ELSE clmn13_ END AS clmn41_, (clmn21_ = 'Y') AS clmn42_, (clmn22_ = 'Y') AS clmn43_, CASE WHEN (clmn23_ = 'Print') THEN clmn16_ ELSE 0 END AS clmn44_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn16_, clmn18_, clmn20_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.first_pub_date_after_init AS clmn15_, t0.gross_revenue_amount AS clmn16_, t0.initial_booking_date AS clmn17_, t0.progo_flag AS clmn18_, t0.relative_fy_year_offset AS clmn19_, t0.reporting_date AS clmn20_, t0.reporting_date_greater_than_20231002 AS clmn21_, t0.reporting_date_greater_than_initbooking AS clmn22_, t0.revenue_type AS clmn23_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn66_ = 'Y' AND clmn56_ != 'NOT ELIGIBLE' AND clmn47_ != true AND clmn41_ = 0 AND clmn57_ = 'ONE-OFF' AND clmn60_ IN ('Alex Hayes', 'Beenu Madan', 'Skye Prasser'))",SUM(CASE WHEN t0.revenue_type = 'Print' THEN t0.gross_revenue_amount ELSE 0 END),calculated_field,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
total_gross_revenue_one_off_multi_employee,total_gross_revenue,"Total Gross Revenue (One-Off, Multi-Employee)","Total gross revenue from all bookings, specifically for 'ONE-OFF' client growth status and sales employees 'Alex Hayes', 'Beenu Madan', or 'Skye Prasser', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn16_) AS total_gross_revenue FROM (
SELECT CASE WHEN (clmn42_ AND clmn48_ AND clmn65_ AND clmn24_ AND clmn38_ AND clmn58_) THEN 'Y' ELSE 'N' END AS clmn66_, clmn44_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn27_ OR clmn62_ OR clmn64_) AS clmn65_, clmn24_, clmn38_, clmn44_, clmn42_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn63_ AND clmn28_) AS clmn64_, clmn24_, clmn62_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT (clmn61_ = 'CG Campaigns') AS clmn62_, (clmn61_ != 'CG Campaigns') AS clmn63_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn59_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn59_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn59_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn61_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn60_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn59_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn60_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn58_, clmn48_, clmn16_, clmn56_, clmn47_, clmn57_, clmn41_ FROM (
SELECT CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn55_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn56_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn57_, CASE WHEN (clmn18_ = 'Y') THEN clmn54_ ELSE true END AS clmn58_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn24_, clmn28_, clmn38_, clmn44_, clmn42_, clmn27_, clmn48_, clmn16_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn33_ AND clmn34_ AND clmn45_) THEN 'INITIAL' WHEN (clmn32_ AND clmn45_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, (clmn33_ AND clmn46_) AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn49_, clmn24_, clmn51_, clmn50_, clmn28_, clmn36_, clmn38_, clmn44_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn40_, clmn48_, clmn52_, clmn16_, clmn18_, clmn47_, clmn41_ FROM (
SELECT (SAFE_CAST(clmn20_ AS DATETIME) <= clmn29_) AS clmn45_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn29_) AS clmn46_, (clmn30_ = 'CTR_') AS clmn47_, (clmn31_ OR clmn27_) AS clmn48_, NOT(clmn35_) AS clmn49_, (SAFE_CAST(clmn20_ AS DATETIME) <= clmn37_) AS clmn50_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn39_) AS clmn51_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn39_) AS clmn52_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn24_, clmn28_, clmn32_, clmn36_, clmn38_, clmn44_, clmn33_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn34_, clmn40_, clmn16_, clmn18_, clmn41_ FROM (
SELECT (clmn1_ != 'Other') AS clmn24_, (clmn1_ = 'Client Growth') AS clmn25_, (clmn1_ != 'Client Growth') AS clmn26_, (clmn3_ = 'Y') AS clmn27_, (clmn7_ != 'Existing Customer') AS clmn28_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn29_, SAFE.LEFT(clmn11_, 4) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ > clmn9_) AS clmn32_, (clmn12_ >= clmn10_) AS clmn33_, (clmn12_ <= clmn9_) AS clmn34_, (clmn14_ IS NULL) AS clmn35_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn15_ AS DATETIME), INTERVAL 365 DAY) AS clmn37_, (clmn16_ != 0) AS clmn38_, DATETIME_ADD(SAFE_CAST(clmn17_ AS DATETIME), INTERVAL 27 DAY) AS clmn39_, (clmn12_ >= clmn17_) AS clmn40_, CASE WHEN ('Pub' = 'Pub') THEN clmn19_ ELSE clmn13_ END AS clmn41_, (clmn21_ = 'Y') AS clmn42_, (clmn22_ = 'Y') AS clmn43_, CASE WHEN (clmn23_ = 'Print') THEN clmn16_ ELSE 0 END AS clmn44_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn16_, clmn18_, clmn20_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.first_pub_date_after_init AS clmn15_, t0.gross_revenue_amount AS clmn16_, t0.initial_booking_date AS clmn17_, t0.progo_flag AS clmn18_, t0.relative_fy_year_offset AS clmn19_, t0.reporting_date AS clmn20_, t0.reporting_date_greater_than_20231002 AS clmn21_, t0.reporting_date_greater_than_initbooking AS clmn22_, t0.revenue_type AS clmn23_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn66_ = 'Y' AND clmn56_ != 'NOT ELIGIBLE' AND clmn47_ != true AND clmn41_ = 0 AND clmn57_ = 'ONE-OFF' AND clmn60_ IN ('Alex Hayes', 'Beenu Madan', 'Skye Prasser'))",SUM(t0.gross_revenue_amount),measure,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
print_gross_revenue_following_alex_beenu,print_gross_revenue,"Print Gross Revenue (Following, Alex Hayes & Beenu Madan)","Total gross revenue from print bookings, specifically for 'FOLLOWING' client growth status and sales employees 'Alex Hayes' or 'Beenu Madan', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn44_) AS print_gross_revenue FROM (
SELECT CASE WHEN (clmn42_ AND clmn48_ AND clmn65_ AND clmn24_ AND clmn38_ AND clmn58_) THEN 'Y' ELSE 'N' END AS clmn66_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn27_ OR clmn62_ OR clmn64_) AS clmn65_, clmn24_, clmn38_, clmn42_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn63_ AND clmn28_) AS clmn64_, clmn24_, clmn62_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn61_ = 'CG Campaigns') AS clmn62_, (clmn61_ != 'CG Campaigns') AS clmn63_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn59_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn59_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn59_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn61_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn59_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn60_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn55_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn56_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn57_, CASE WHEN (clmn18_ = 'Y') THEN clmn54_ ELSE true END AS clmn58_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn48_, clmn44_, clmn16_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn33_ AND clmn34_ AND clmn45_) THEN 'INITIAL' WHEN (clmn32_ AND clmn45_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, (clmn33_ AND clmn46_) AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn49_, clmn24_, clmn51_, clmn50_, clmn28_, clmn36_, clmn38_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn40_, clmn48_, clmn52_, clmn44_, clmn16_, clmn18_, clmn47_, clmn41_ FROM (
SELECT (SAFE_CAST(clmn20_ AS DATETIME) <= clmn29_) AS clmn45_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn29_) AS clmn46_, (clmn30_ = 'CTR_') AS clmn47_, (clmn31_ OR clmn27_) AS clmn48_, NOT(clmn35_) AS clmn49_, (SAFE_CAST(clmn20_ AS DATETIME) <= clmn37_) AS clmn50_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn39_) AS clmn51_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn39_) AS clmn52_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn24_, clmn28_, clmn32_, clmn36_, clmn38_, clmn33_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn34_, clmn40_, clmn44_, clmn16_, clmn18_, clmn41_ FROM (
SELECT (clmn1_ != 'Other') AS clmn24_, (clmn1_ = 'Client Growth') AS clmn25_, (clmn1_ != 'Client Growth') AS clmn26_, (clmn3_ = 'Y') AS clmn27_, (clmn7_ != 'Existing Customer') AS clmn28_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn29_, SAFE.LEFT(clmn11_, 4) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ > clmn9_) AS clmn32_, (clmn12_ >= clmn10_) AS clmn33_, (clmn12_ <= clmn9_) AS clmn34_, (clmn14_ IS NULL) AS clmn35_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn15_ AS DATETIME), INTERVAL 365 DAY) AS clmn37_, (clmn16_ != 0) AS clmn38_, DATETIME_ADD(SAFE_CAST(clmn17_ AS DATETIME), INTERVAL 27 DAY) AS clmn39_, (clmn12_ >= clmn17_) AS clmn40_, CASE WHEN ('Pub' = 'Pub') THEN clmn19_ ELSE clmn13_ END AS clmn41_, (clmn21_ = 'Y') AS clmn42_, (clmn22_ = 'Y') AS clmn43_, CASE WHEN (clmn23_ = 'Print') THEN clmn16_ ELSE 0 END AS clmn44_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn16_, clmn18_, clmn20_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.first_pub_date_after_init AS clmn15_, t0.gross_revenue_amount AS clmn16_, t0.initial_booking_date AS clmn17_, t0.progo_flag AS clmn18_, t0.relative_fy_year_offset AS clmn19_, t0.reporting_date AS clmn20_, t0.reporting_date_greater_than_20231002 AS clmn21_, t0.reporting_date_greater_than_initbooking AS clmn22_, t0.revenue_type AS clmn23_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn66_ = 'Y' AND clmn56_ != 'NOT ELIGIBLE' AND clmn47_ != true AND clmn41_ = 0 AND clmn57_ = 'FOLLOWING' AND clmn60_ IN ('Alex Hayes', 'Beenu Madan'))",SUM(CASE WHEN t0.revenue_type = 'Print' THEN t0.gross_revenue_amount ELSE 0 END),calculated_field,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
total_gross_revenue_following_alex_beenu,total_gross_revenue,"Total Gross Revenue (Following, Alex Hayes & Beenu Madan)","Total gross revenue from all bookings, specifically for 'FOLLOWING' client growth status and sales employees 'Alex Hayes' or 'Beenu Madan', filtered by specific client growth eligibility criteria.",ncau-data-newsquery-prd,asl_finance_derived,client_growth,"SELECT SUM(clmn16_) AS total_gross_revenue FROM (
SELECT CASE WHEN (clmn42_ AND clmn48_ AND clmn65_ AND clmn24_ AND clmn38_ AND clmn58_) THEN 'Y' ELSE 'N' END AS clmn66_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn27_ OR clmn62_ OR clmn64_) AS clmn65_, clmn24_, clmn38_, clmn42_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn63_ AND clmn28_) AS clmn64_, clmn24_, clmn62_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT (clmn61_ = 'CG Campaigns') AS clmn62_, (clmn61_ != 'CG Campaigns') AS clmn63_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn59_ = 'CG A & R A') THEN 'CG Independent Agencies & Direct' WHEN (clmn59_ = 'CG Campaigns A') THEN 'CG Campaigns' WHEN (clmn59_ = 'CG Virtual A') THEN 'CG Virtual' ELSE NULL END AS clmn61_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn60_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn3_ = 'Y') THEN clmn2_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn6_ WHEN (clmn1_ != 'Client Growth') THEN 'CG Unclaimed' ELSE clmn2_ END AS clmn59_, CASE WHEN (clmn3_ = 'Y') THEN clmn0_ WHEN (clmn55_ = 'FOLLOWING') THEN clmn5_ ELSE clmn4_ END AS clmn60_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn58_, clmn48_, clmn44_, clmn16_, clmn56_, clmn57_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn55_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn56_, CASE WHEN (clmn18_ = 'Y') THEN clmn53_ WHEN (clmn27_ AND clmn49_) THEN clmn36_ WHEN (clmn7_ = 'Existing Customer') THEN 'ONE-OFF' WHEN (clmn25_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'INITIAL' WHEN (clmn26_ AND clmn40_ AND clmn51_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' WHEN (clmn52_ AND clmn43_ AND clmn50_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn57_, CASE WHEN (clmn18_ = 'Y') THEN clmn54_ ELSE true END AS clmn58_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn24_, clmn28_, clmn38_, clmn42_, clmn27_, clmn48_, clmn44_, clmn16_, clmn47_, clmn41_ FROM (
SELECT CASE WHEN (clmn33_ AND clmn34_ AND clmn45_) THEN 'INITIAL' WHEN (clmn32_ AND clmn45_) THEN 'FOLLOWING' ELSE 'NOT ELIGIBLE' END AS clmn53_, (clmn33_ AND clmn46_) AS clmn54_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn49_, clmn24_, clmn51_, clmn50_, clmn28_, clmn36_, clmn38_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn40_, clmn48_, clmn52_, clmn44_, clmn16_, clmn18_, clmn41_ FROM (
SELECT (SAFE_CAST(clmn20_ AS DATETIME) <= clmn29_) AS clmn45_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn29_) AS clmn46_, (clmn30_ = 'CTR_') AS clmn47_, (clmn31_ OR clmn27_) AS clmn48_, NOT(clmn35_) AS clmn49_, (SAFE_CAST(clmn20_ AS DATETIME) <= clmn37_) AS clmn50_, (SAFE_CAST(clmn12_ AS DATETIME) <= clmn39_) AS clmn51_, (SAFE_CAST(clmn12_ AS DATETIME) > clmn39_) AS clmn52_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn24_, clmn28_, clmn32_, clmn36_, clmn38_, clmn33_, clmn25_, clmn42_, clmn43_, clmn26_, clmn27_, clmn34_, clmn40_, clmn44_, clmn16_, clmn18_, clmn41_ FROM (
SELECT (clmn1_ != 'Other') AS clmn24_, (clmn1_ = 'Client Growth') AS clmn25_, (clmn1_ != 'Client Growth') AS clmn26_, (clmn3_ = 'Y') AS clmn27_, (clmn7_ != 'Existing Customer') AS clmn28_, DATETIME_ADD(SAFE_CAST(clmn10_ AS DATETIME), INTERVAL 365 DAY) AS clmn29_, SAFE.LEFT(clmn11_, 4) AS clmn30_, (clmn12_ >= clmn8_) AS clmn31_, (clmn12_ > clmn9_) AS clmn32_, (clmn12_ >= clmn10_) AS clmn33_, (clmn12_ <= clmn9_) AS clmn34_, (clmn14_ IS NULL) AS clmn35_, UPPER(SAFE_CAST(clmn14_ AS STRING)) AS clmn36_, DATETIME_ADD(SAFE_CAST(clmn15_ AS DATETIME), INTERVAL 365 DAY) AS clmn37_, (clmn16_ != 0) AS clmn38_, DATETIME_ADD(SAFE_CAST(clmn17_ AS DATETIME), INTERVAL 27 DAY) AS clmn39_, (clmn12_ >= clmn17_) AS clmn40_, CASE WHEN ('Pub' = 'Pub') THEN clmn19_ ELSE clmn13_ END AS clmn41_, (clmn21_ = 'Y') AS clmn42_, (clmn22_ = 'Y') AS clmn43_, CASE WHEN (clmn23_ = 'Print') THEN clmn16_ ELSE 0 END AS clmn44_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_, clmn6_, clmn7_, clmn12_, clmn16_, clmn18_, clmn20_ FROM (
SELECT t0.CG_EMPLOYEE_FULL_NAME AS clmn0_, t0.CG_EMPLOYEE_SALES_REGION AS clmn1_, t0.CG_EMPLOYEE_SALES_TEAM AS clmn2_, t0.CG_EXCEPTION_FLAG AS clmn3_, t0.CG_Employee_FL AS clmn4_, t0.CG_INIT_EMPLOYEE AS clmn5_, t0.CG_INIT_TEAM AS clmn6_, t0.CG_Retention_Type_SQL AS clmn7_, DATE(2023, 9, 4) AS clmn8_, t0.PROGO_INITIAL_END AS clmn9_, t0.PROGO_INITIAL_START AS clmn10_, t0.advertiser_group AS clmn11_, t0.booking_line_created_date_not_null AS clmn12_, t0.booking_line_created_year_offset AS clmn13_, t0.booking_type AS clmn14_, t0.first_pub_date_after_init AS clmn15_, t0.gross_revenue_amount AS clmn16_, t0.initial_booking_date AS clmn17_, t0.progo_flag AS clmn18_, t0.relative_fy_year_offset AS clmn19_, t0.reporting_date AS clmn20_, t0.reporting_date_greater_than_20231002 AS clmn21_, t0.reporting_date_greater_than_initbooking AS clmn22_, t0.revenue_type AS clmn23_ FROM `ncau-data-newsquery-prd.asl_finance_derived.client_growth` AS t0
)
)
)
)
)
)
)
)
)
)
) WHERE (clmn66_ = 'Y' AND clmn56_ != 'NOT ELIGIBLE' AND clmn47_ != true AND clmn41_ = 0 AND clmn57_ = 'FOLLOWING' AND clmn60_ IN ('Alex Hayes', 'Beenu Madan'))",SUM(t0.gross_revenue_amount),measure,True,high,19,507bd07a-24bc-4402-ba8b-fcfbfac83996
financial_month_numeric_print_revenue_fy24_fy25,financial_month_numeric,"Financial Month Number (Print Revenue, FY24/FY25)","Numeric representation of the financial month (1-12) for records related to 'PRINT' revenue group subtype and 'PRINT' revenue type, specifically for financial years 2024 and 2025. Used for filtering or ordering.",ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,"SELECT CASE WHEN (t0.financial_short_month = 'Jul') THEN 1 WHEN (t0.financial_short_month = 'Aug') THEN 2 WHEN (t0.financial_short_month = 'Sep') THEN 3 WHEN (t0.financial_short_month = 'Oct') THEN 4 WHEN (t0.financial_short_month = 'Nov') THEN 5 WHEN (t0.financial_short_month = 'Dec') THEN 6 WHEN (t0.financial_short_month = 'Jan') THEN 7 WHEN (t0.financial_short_month = 'Feb') THEN 8 WHEN (t0.financial_short_month = 'Mar') THEN 9 WHEN (t0.financial_short_month = 'Apr') THEN 10 WHEN (t0.financial_short_month = 'May') THEN 11 WHEN (t0.financial_short_month = 'Jun') THEN 12 ELSE NULL END AS financial_month_numeric FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0 WHERE (t0.financial_year IN ('2025', '2024') AND t0.revenue_group_subtype IN ('PRINT') AND t0.revenue_type IN ('PRINT'))",CASE WHEN (financial_short_month = 'Jul') THEN 1 WHEN (financial_short_month = 'Aug') THEN 2 WHEN (financial_short_month = 'Sep') THEN 3 WHEN (financial_short_month = 'Oct') THEN 4 WHEN (financial_short_month = 'Nov') THEN 5 WHEN (financial_short_month = 'Dec') THEN 6 WHEN (financial_short_month = 'Jan') THEN 7 WHEN (financial_short_month = 'Feb') THEN 8 WHEN (financial_short_month = 'Mar') THEN 9 WHEN (financial_short_month = 'Apr') THEN 10 WHEN (financial_short_month = 'May') THEN 11 WHEN (financial_short_month = 'Jun') THEN 12 ELSE NULL END,dimension,False,low,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
revenue_type_filtered_by_year_print,revenue_type,Revenue Type (Filtered by Year & Print),"The type of revenue (e.g., 'PRINT') for records within financial years 2024 and 2025, and where the revenue group subtype is 'PRINT'. Used for filtering or grouping.",ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,"SELECT t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0 WHERE (t0.financial_year IN ('2025', '2024') AND t0.revenue_group_subtype IN ('PRINT'))",revenue_type,dimension,False,low,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
min_data_load_timestamp,data_load_timestamp,Minimum Data Load Timestamp,The earliest timestamp indicating when data was loaded into the `adsales_performance_archive_FY25` table. Useful for data freshness checks.,ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,"SELECT MIN(DATETIME_TRUNC(t0.dw_asl_load_timestamp, SECOND)) FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0","MIN(DATETIME_TRUNC(dw_asl_load_timestamp, SECOND))",metadata,False,medium,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
financial_month_numeric_fy25,financial_month_numeric,Financial Month Number (FY25),Numeric representation of the financial month (1-12) for records specifically from financial year 2025. Used for filtering or ordering.,ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,SELECT CASE WHEN (t0.financial_short_month = 'Jul') THEN 1 WHEN (t0.financial_short_month = 'Aug') THEN 2 WHEN (t0.financial_short_month = 'Sep') THEN 3 WHEN (t0.financial_short_month = 'Oct') THEN 4 WHEN (t0.financial_short_month = 'Nov') THEN 5 WHEN (t0.financial_short_month = 'Dec') THEN 6 WHEN (t0.financial_short_month = 'Jan') THEN 7 WHEN (t0.financial_short_month = 'Feb') THEN 8 WHEN (t0.financial_short_month = 'Mar') THEN 9 WHEN (t0.financial_short_month = 'Apr') THEN 10 WHEN (t0.financial_short_month = 'May') THEN 11 WHEN (t0.financial_short_month = 'Jun') THEN 12 ELSE NULL END AS financial_month_numeric FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0 WHERE t0.financial_year IN ('2025'),CASE WHEN (financial_short_month = 'Jul') THEN 1 WHEN (financial_short_month = 'Aug') THEN 2 WHEN (financial_short_month = 'Sep') THEN 3 WHEN (financial_short_month = 'Oct') THEN 4 WHEN (financial_short_month = 'Nov') THEN 5 WHEN (financial_short_month = 'Dec') THEN 6 WHEN (financial_short_month = 'Jan') THEN 7 WHEN (financial_short_month = 'Feb') THEN 8 WHEN (financial_short_month = 'Mar') THEN 9 WHEN (financial_short_month = 'Apr') THEN 10 WHEN (financial_short_month = 'May') THEN 11 WHEN (financial_short_month = 'Jun') THEN 12 ELSE NULL END,dimension,False,low,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
revenue_type_all_years_except_2026,revenue_type,Revenue Type (All Years Except FY26),The type of revenue for all records where the financial year is not 2026 or is null. Used for filtering or grouping.,ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,SELECT t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0 WHERE (t0.financial_year NOT IN ('2026') OR t0.financial_year IS NULL),revenue_type,dimension,False,low,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
financial_month_numeric_all_years_except_2026,financial_month_numeric,Financial Month Number (All Years Except FY26),Numeric representation of the financial month (1-12) for all records where the financial year is not 2026 or is null. Used for filtering or ordering.,ncau-data-newsquery-prd,asl_finance_derived_archive,adsales_performance_archive_FY25,SELECT CASE WHEN (t0.financial_short_month = 'Jul') THEN 1 WHEN (t0.financial_short_month = 'Aug') THEN 2 WHEN (t0.financial_short_month = 'Sep') THEN 3 WHEN (t0.financial_short_month = 'Oct') THEN 4 WHEN (t0.financial_short_month = 'Nov') THEN 5 WHEN (t0.financial_short_month = 'Dec') THEN 6 WHEN (t0.financial_short_month = 'Jan') THEN 7 WHEN (t0.financial_short_month = 'Feb') THEN 8 WHEN (t0.financial_short_month = 'Mar') THEN 9 WHEN (t0.financial_short_month = 'Apr') THEN 10 WHEN (t0.financial_short_month = 'May') THEN 11 WHEN (t0.financial_short_month = 'Jun') THEN 12 ELSE NULL END AS financial_month_numeric FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.adsales_performance_archive_FY25` AS t0 WHERE (t0.financial_year NOT IN ('2026') OR t0.financial_year IS NULL),CASE WHEN (financial_short_month = 'Jul') THEN 1 WHEN (financial_short_month = 'Aug') THEN 2 WHEN (financial_short_month = 'Sep') THEN 3 WHEN (financial_short_month = 'Oct') THEN 4 WHEN (financial_short_month = 'Nov') THEN 5 WHEN (financial_short_month = 'Dec') THEN 6 WHEN (financial_short_month = 'Jan') THEN 7 WHEN (financial_short_month = 'Feb') THEN 8 WHEN (financial_short_month = 'Mar') THEN 9 WHEN (financial_short_month = 'Apr') THEN 10 WHEN (financial_short_month = 'May') THEN 11 WHEN (financial_short_month = 'Jun') THEN 12 ELSE NULL END,dimension,False,low,20,e0746d13-dad7-4ba1-aabc-d3b8e83cef54
total_monitored_tables_finance_health,table_count,Total Monitored Tables,"The total number of finance-related tables being monitored for data freshness and row count, as defined in the dashboard's internal table list.",your-gcp-project-id,bdm_finance,__TABLES__,"SELECT COUNT(t0.table_id) AS total_monitored_tables FROM (
WITH
  table_list AS (
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
  ),
  table_update_list AS (
    SELECT
      meta.dataset_id,
      meta.table_id,
      datetime(timestamp_millis(meta.last_modified_time), ""Australia/Sydney"") AS last_update_time,
      meta.row_count,
      meta.size_bytes / power(2, 30) AS size_gb,
      table_list.update_frequency
    FROM
      `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
      JOIN
      table_list
      ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
  ),
  load_stats AS (
    SELECT
      * EXCEPT (last_update_time),
      CAST(FORMAT_DATETIME('%F %X', last_update_time) AS STRING) AS last_update_time,
      `current_datetime`(""Australia/Sydney"") AS time_now,
      datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
      `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
    FROM
      table_update_list
  ),
  alert_sts AS (
    SELECT
      *,
      CASE
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
        WHEN row_count = 0 THEN -3
        ELSE 0
      END AS alert_status
    FROM
      load_stats
  )
SELECT
  *,
  CASE
    WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
    ELSE alert_status
  END AS alert_status_final
FROM
  alert_sts
) AS t0;",COUNT(table_id),measure,True,high,21,f9b52275-5924-4afb-8222-2c55854183ba
ok_budget_tables_finance_health,table_count_filtered,OK or Budget Tables Count,"The number of finance-related tables that are either in an 'OK' status (0) or are specifically identified as budget/forecast tables (-1), which are typically excluded from critical alerts.",your-gcp-project-id,bdm_finance,__TABLES__,"SELECT COUNT(CASE WHEN (t0.alert_status_final IN (0, -1)) THEN t0.table_id ELSE NULL END) AS ok_budget_tables_count FROM (
SELECT CASE WHEN (clmn0_ IN (0, -1)) THEN clmn1_ ELSE NULL END AS clmn2_, clmn1_ FROM (
SELECT t0.alert_status_final AS clmn0_, t0.table_id AS clmn1_ FROM (
WITH
  table_list AS (
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'external_sundry_expenses_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_budget_forecast_fct' AS tableid UNION ALL
    SELECT 0 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_budget_forecast_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_balance_fct' AS tableid UNION ALL
    SELECT 60 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_transaction_fct' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_account_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_business_unit_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_company_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_department_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_ledger_type_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_party_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_publication_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_responsibility_unit_profisee_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_dim' AS tableid UNION ALL
    SELECT 1440 AS update_frequency, 'bdm_finance' AS datasetid, 'gl_sub_ledger_type_dim' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'advertising_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'circulation_snapshot_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'offplatform_subscription_revenue_fct' AS tableid UNION ALL
    SELECT 10080 AS update_frequency, 'bdm_finance' AS datasetid, 'subscription_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'content_licensing_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'expense_depreciation_snapshot_fct' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'finance_gaap_adjustment' AS tableid UNION ALL
    SELECT 44640 AS update_frequency, 'bdm_finance' AS datasetid, 'sundry_revenue_snapshot_fct' AS tableid
  ),
  table_update_list AS (
    SELECT
      dataset_id,
      table_id,
      datetime(timestamp_millis(last_modified_time), ""Australia/Sydney"") AS last_update_time,
      row_count,
      size_bytes / power(2, 30) AS size_gb,
      table_list.update_frequency
    FROM
      `your-gcp-project-id.bdm_finance.__TABLES__` AS meta
      JOIN
      table_list
      ON (meta.table_id = table_list.tableid AND table_list.datasetid = 'bdm_finance')
  ),
  load_stats AS (
    SELECT
      * EXCEPT (last_update_time),
      CAST(FORMAT_DATETIME('%F %X', last_update_time) AS STRING) AS last_update_time,
      `current_datetime`(""Australia/Sydney"") AS time_now,
      datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) AS updated_minutes_ago,
      `if`(datetime_diff(`current_datetime`(""Australia/Sydney""), last_update_time, MINUTE) > update_frequency, 'Y', 'N') AS delayed
    FROM
      table_update_list
  ),
  alert_sts AS (
    SELECT
      *,
      CASE
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) > update_frequency THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 60 AND update_frequency <= 1440 AND (updated_minutes_ago - update_frequency) > 30 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency > 1440 AND update_frequency <= 44640 AND (updated_minutes_ago - update_frequency) > 1440 THEN -2
        WHEN updated_minutes_ago > update_frequency AND update_frequency <= 60 AND (updated_minutes_ago - update_frequency) <= update_frequency THEN -1
        WHEN row_count = 0 THEN -3
        ELSE 0
      END AS alert_status
    FROM
      load_stats
  )
SELECT
  *,
  CASE
    WHEN table_id IN (""advertising_budget_forecast_fct"", ""circulation_budget_forecast_fct"", ""external_sundry_expenses_budget_forecast_fct"", ""gl_budget_forecast_fct"", ""subscription_budget_forecast_fct"") THEN -1
    ELSE alert_status
  END AS alert_status_final
FROM
  alert_sts
) AS t0
) AS t0;","COUNT(CASE WHEN alert_status_final IN (0, -1) THEN table_id ELSE NULL END)",measure,True,high,21,f9b52275-5924-4afb-8222-2c55854183ba
total_circulation_records_by_vendor_date,circulation_record_count,Total Circulation Records,"The total count of circulation records for specific vendors and draw dates, representing volume data within a rolling 4-week window.",your-gcp-project-id,bdm_circulation,rcti_circulation_volume_revenue_fct,"SELECT SUM(t0.data_total) AS total_circulation_records FROM (
SELECT DISTINCT
  UPPER(vendor_name) AS vendor,
  draw_date,
  Count(*) AS data_total
FROM
  `your-gcp-project-id.bdm_circulation.rcti_circulation_volume_revenue_fct`
WHERE
  dw_tgt_partition_date >= `CURRENT_DATE`('Australia/Sydney') - 1 AND draw_date BETWEEN DATE_SUB(DATE_TRUNC(`CURRENT_DATE`('Australia/Sydney'),
      ISOWEEK), INTERVAL 4 WEEK) AND DATE_SUB(DATE_TRUNC(`CURRENT_DATE`('Australia/Sydney'), WEEK(MONDAY)),
    INTERVAL 1 DAY)
GROUP BY 1, 2
) AS t0
WHERE (t0.draw_date IN (DATE '2025-05-12', DATE '2025-05-13', DATE '2025-05-14', DATE '2025-05-15', DATE '2025-05-16', DATE '2025-05-17', DATE '2025-05-18', DATE '2025-05-19', DATE '2025-05-20', DATE '2025-05-21', DATE '2025-05-22', DATE '2025-05-23', DATE '2025-05-24', DATE '2025-05-25', DATE '2025-05-26', DATE '2025-05-27', DATE '2025-05-28', DATE '2025-05-29', DATE '2025-05-30', DATE '2025-05-31', DATE '2025-06-01', DATE '2025-06-02', DATE '2025-06-03', DATE '2025-06-04', DATE '2025-06-05', DATE '2025-06-06', DATE '2025-06-07', DATE '2025-06-08') AND t0.vendor IN ('WOOLWORTH', 'EG', 'COLES', 'AMPOL', '7ELEVEN'));",SUM(Count(*)),measure,True,medium,21,f9b52275-5924-4afb-8222-2c55854183ba
total_product_revenue,total_product_revenue,Total Product Revenue,The total revenue generated from products.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,SELECT SUM(SAFE_CAST(t0.Product_Revenue AS NUMERIC)) AS total_product_revenue FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0,SAFE_CAST(t0.Product_Revenue AS NUMERIC),measure,True,high,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
expense_margin_level_1,total_expense,Expense - Margin Level 1,The total expense specifically for Margin Level 1.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) = '1' THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS expense_margin_level_1 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0,CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) = '1' THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END,measure,False,medium,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
expense_margin_level_1_or_2,total_expense,Expense - Margin Level 1 or 2,The total expense for Margin Levels 1 or 2.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,"SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS expense_margin_level_1_or_2 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0","CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END",measure,False,medium,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
expense_margin_level_1_to_3,total_expense,Expense - Margin Level 1 to 3,"The total expense for Margin Levels 1, 2, or 3.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,"SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS expense_margin_level_1_to_3 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0","CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END",measure,False,medium,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
expense_margin_level_1_to_4,total_expense,Expense - Margin Level 1 to 4,"The total expense for Margin Levels 1, 2, 3, or 4.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,"SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS expense_margin_level_1_to_4 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0","CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END",measure,False,medium,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
expense_margin_level_1_to_5,total_expense,Expense - Margin Level 1 to 5,"The total expense for Margin Levels 1, 2, 3, 4, or 5.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,"SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS expense_margin_level_1_to_5 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0","CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END",measure,False,medium,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
total_expense_all_margin_levels,total_expense,Total Expense (All Margin Levels),The total expense across all defined Margin Levels (1 through 6).,ncau-data-newsquery-prd,sbx_fda_corefin,dv_exclude_product_l3_and_l4,"SELECT SUM(CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5', '6') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END) AS total_expense_all_margin_levels FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_exclude_product_l3_and_l4` AS t0","CASE WHEN SAFE_CAST(t0.Margin_Level AS STRING) IN ('1', '2', '3', '4', '5', '6') THEN SAFE_CAST(t0.Expense AS NUMERIC) ELSE 0 END",measure,True,high,22,a2edd9c0-9f0c-45f4-b481-6ed9e4a3f11d
count_distinct_subscribers_standard_paid_by_gateway,count_distinct_subscribers,Unique Standard Paid Subscribers by Payment Gateway,"The number of unique subscribers with 'Standard Paid' subscriptions, grouped by the payment gateway used for their latest transaction attempt within the last 60 days, where the latest attempt flag is 'Y'.",ncau-data-newsquery-sit,qvr_consumer,fp_all_trans,"SELECT
  t0.payment_gateway,
  COUNT(DISTINCT t0.subscriber_id_src) AS unique_subscribers
FROM (
  WITH driver AS (
    SELECT
      subscriber_id_src,
      subscription_id_src,
      max(tran_date) AS latest_tran_date
    FROM
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
    WHERE
      tran_date BETWEEN `current_date`() - 60 AND `current_date`()
    GROUP BY 1, 2
  )
  SELECT
    b.payment_gateway,
    b.subscriber_id_src,
    b.subscription_classification_type,
    b.latest_attempt_flag,
    b.tran_date
  FROM
    driver AS a
    JOIN
    `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
    ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  WHERE
    b.latest_attempt_flag = 'Y'
) AS t0
WHERE t0.subscription_classification_type IN ('Standard Paid')
GROUP BY t0.payment_gateway
ORDER BY unique_subscribers DESC
LIMIT 2000001;",COUNT(DISTINCT subscriber_id_src),measure,True,high,23,da5dcd47-2e80-45e8-94b8-5b71d81182f5
count_distinct_subscribers_standard_paid_other_gateways,count_distinct_subscribers,Unique Standard Paid Subscribers (Other Gateways),"The total number of unique subscribers with 'Standard Paid' subscriptions whose latest transaction attempt (within the last 60 days) was NOT via Stripe, B-Point, PayPal, Bpay, or Australia Post, or where the payment gateway is null, and the latest attempt flag is 'Y'.",ncau-data-newsquery-sit,qvr_consumer,fp_all_trans,"SELECT
  COUNT(DISTINCT t0.subscriber_id_src) AS unique_subscribers
FROM (
  WITH driver AS (
    SELECT
      subscriber_id_src,
      subscription_id_src,
      max(tran_date) AS latest_tran_date
    FROM
      `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans`
    WHERE
      tran_date BETWEEN `current_date`() - 60 AND `current_date`()
    GROUP BY 1, 2
  )
  SELECT
    b.payment_gateway,
    b.subscriber_id_src,
    b.subscription_classification_type,
    b.latest_attempt_flag,
    b.tran_date
  FROM
    driver AS a
    JOIN
    `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS b
    ON a.subscriber_id_src = b.subscriber_id_src AND a.subscription_id_src = b.subscription_id_src AND a.latest_tran_date = b.tran_date
  WHERE
    b.latest_attempt_flag = 'Y'
) AS t0
WHERE (t0.subscription_classification_type IN ('Standard Paid') AND (t0.payment_gateway NOT IN ('Stripe', 'B-Point', 'PayPal', 'Bpay', 'Australia Post') OR t0.payment_gateway IS NULL))
LIMIT 2000001;",COUNT(DISTINCT subscriber_id_src),measure,True,high,23,da5dcd47-2e80-45e8-94b8-5b71d81182f5
portfolio_parent_group_name_current_filtered_q1,portfolio_parent_group_name_current,"Portfolio Parent Group Name (Current) - FY26, Sundry Adsales, Account 29172","The current portfolio parent group name, filtered for financial year 2026, 'SUNDRY ADSALES OVERLAY' revenue group subtype, and account number '29172'. Used as a dimension in the dashboard.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT t0.portfolio_parent_group_name_current FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE t0.financial_year = '2026' AND t0.revenue_group_subtype = 'SUNDRY ADSALES OVERLAY' AND t0.account_number = '29172' GROUP BY t0.portfolio_parent_group_name_current ORDER BY t0.portfolio_parent_group_name_current ASC LIMIT 2000001,t0.portfolio_parent_group_name_current,dimension,False,medium,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
advertiser_group_filtered_q2,advertiser_group,"Advertiser Group - FY26, Sundry Adsales","The advertiser group, filtered for financial year 2026 and 'SUNDRY ADSALES OVERLAY' revenue group subtype. Used as a dimension in the dashboard.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT t0.advertiser_group FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE t0.financial_year = '2026' AND t0.revenue_group_subtype = 'SUNDRY ADSALES OVERLAY' GROUP BY t0.advertiser_group ORDER BY t0.advertiser_group ASC LIMIT 2000001,t0.advertiser_group,dimension,False,medium,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
portfolio_conformed_name_current_filtered_q3,portfolio_conformed_name_current,Portfolio Conformed Name (Current) - Filtered by Adsize,"The current portfolio conformed name, filtered by specific adsize names ('Newsletter Driver (pav)', 'daily newsletter (1 of 1) - medrec'). Used as a dimension in the dashboard.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,"SELECT t0.portfolio_conformed_name_current FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE t0.adsize_name IN ('Newsletter Driver (pav)', 'daily newsletter (1 of 1) - medrec') GROUP BY t0.portfolio_conformed_name_current ORDER BY t0.portfolio_conformed_name_current ASC LIMIT 2000001",t0.portfolio_conformed_name_current,dimension,False,medium,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
financial_short_month_all,financial_short_month,Financial Short Month,"The short name of the financial month, used as a dimension. Ordered by the numeric financial month.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT t0.financial_short_month FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 GROUP BY t0.financial_short_month ORDER BY MIN(SAFE_CAST(t0.financial_month AS INT64)) ASC LIMIT 2000001,t0.financial_short_month,dimension,False,low,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
min_financial_month_for_ordering_q4,financial_month_numeric,Minimum Financial Month (Numeric) for Ordering,"The minimum numeric value of the financial month, primarily used for ordering financial short month dimensions. This is an internal helper aggregation.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT MIN(SAFE_CAST(t0.financial_month AS INT64)) FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0,MIN(SAFE_CAST(t0.financial_month AS INT64)),aggregation,False,low,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
portfolio_group_name_current_filtered_q5,portfolio_group_name_current,"Portfolio Group Name (Current) - FY25, Sundry Adsales","The current portfolio group name, filtered for financial year 2025 and 'SUNDRY ADSALES OVERLAY' revenue group subtype. Used as a dimension in the dashboard.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT t0.portfolio_group_name_current FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE t0.financial_year = '2025' AND t0.revenue_group_subtype = 'SUNDRY ADSALES OVERLAY' GROUP BY t0.portfolio_group_name_current ORDER BY t0.portfolio_group_name_current ASC LIMIT 2000001,t0.portfolio_group_name_current,dimension,False,medium,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
financial_short_month_filtered_q6,financial_short_month,Financial Short Month - Excluding FY24,"The short name of the financial month, used as a dimension, excluding financial year 2024 or null financial years. Ordered by the numeric financial month.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT t0.financial_short_month FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE (t0.financial_year NOT IN ('2024') OR t0.financial_year IS NULL) GROUP BY t0.financial_short_month ORDER BY MIN(SAFE_CAST(t0.financial_month AS INT64)) ASC LIMIT 2000001,t0.financial_short_month,dimension,False,low,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
min_financial_month_for_ordering_q6,financial_month_numeric,Minimum Financial Month (Numeric) for Ordering - Excluding FY24,"The minimum numeric value of the financial month, primarily used for ordering financial short month dimensions, excluding financial year 2024 or null financial years. This is an internal helper aggregation.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,SELECT MIN(SAFE_CAST(t0.financial_month AS INT64)) FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE (t0.financial_year NOT IN ('2024') OR t0.financial_year IS NULL),MIN(SAFE_CAST(t0.financial_month AS INT64)),aggregation,False,low,24,1dff8d78-5d94-49fa-a2a5-086e3aaccd35
actual_volume_total,actual_volume,Actual Volume (Total),The total actual volume recorded for circulation activities.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(t0.volume) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(t0.volume),measure,True,high,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
budget_volume_total,budget_volume,Budget Volume (Total),The total budgeted volume for circulation activities.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(t0.Budget_Volume) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(t0.Budget_Volume),measure,True,high,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
budget_volume_prior_period,budget_volume_prior_period,Budget Volume (Prior Period),"The budgeted volume for prior fiscal periods, specifically where the relative fiscal week number is negative.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Volume ELSE NULL END) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Volume ELSE NULL END),measure,False,medium,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
actual_volume_variance_vs_prior_budget,actual_volume_variance_vs_prior_budget,Actual Volume Variance vs Prior Period Budget,The difference between actual volume and budgeted volume for prior fiscal periods.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(t0.volume - (CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Volume ELSE NULL END)) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(t0.volume - (CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Volume ELSE NULL END)),measure,True,high,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
actual_amount_total,actual_amount,Actual Amount (Total),The total actual amount recorded for circulation activities.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(t0.Actual_Amount) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(t0.Actual_Amount),measure,True,high,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
budget_amount_prior_period,budget_amount_prior_period,Budget Amount (Prior Period),"The budgeted amount for prior fiscal periods, specifically where the relative fiscal week number is negative.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Amount ELSE 0 END),measure,False,medium,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
budget_amount_prior_period_all_sales_channels,budget_amount_prior_period_all_sales_channels,Budget Amount (Prior Period) for All Sales Channels,The budgeted amount for prior fiscal periods specifically for 'ALL SALES CHANNELS'.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN (CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Amount ELSE 0 END) ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1",SUM(CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN (CASE WHEN (t0.relative_fisc_week_number < 0) THEN t0.Budget_Amount ELSE 0 END) ELSE 0 END),measure,False,medium,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
actual_amount_ytd,actual_amount_ytd,Actual Amount (YTD),"The year-to-date actual amount, calculated based on a fixed current date and fiscal week logic.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(CASE WHEN ( (CASE WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) <= 2) THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)-1) ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) END) <= calendar.fy_year_week_number) THEN t0.Actual_Amount ELSE 0 END) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1","SUM(CASE WHEN ( (CASE WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) <= 2) THEN (DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)-1) ELSE DATETIME_DIFF(SAFE_CAST(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) END) <= calendar.fy_year_week_number) THEN t0.Actual_Amount ELSE 0 END)",measure,True,high,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
avg_daily_budget_volume,avg_daily_budget_volume,Average Daily Budget Volume,"Calculated average daily budget volume, adjusted for publication-specific day counts (e.g., 6-day vs 7-day pubs) and special cases like 'PNG', 'The Sportsman', 'Weekly Times'. This metric involves complex nested conditional logic.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT SUM(CASE WHEN (CASE WHEN (t0.publication_name IN ('Cairns Post', 'Geelong Advertiser', 'Gold Coast Bulletin', 'The Australian', 'Toowoomba', 'Townsville Bulletin')) THEN '6 Day Pubs' WHEN (t0.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury and Sunday Tas' WHEN (t0.publication_name IN ('NT News', 'Sunday Territorian')) THEN 'NT News & Sunday Territorian' WHEN (t0.publication_name IN ('Other', 'Brisbane Other', 'Cairns Post Digital', 'Corporate', 'Geelong Advertiser Digital', 'Gold Coast Bulletin Digital', 'Gold Coast Other', 'Herald Sun Digital', 'Melbourne Other', 'Mercury Digital', 'News Xtend', 'NIMs', 'NT News Digital', 'NT Other', 'Perth Now Digital', 'Sydney Other', 'The Australian Digital', 'The Courier Mail Digital', 'The Daily Telegraph Digital', 'The Weekend Australian Mag', 'Townsville Bulletin Digital', 'Transformation', 'Weekly Times Digital')) THEN 'Other' WHEN (t0.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'The Courier Mail' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' ELSE t0.publication_name END = 'PNG') THEN 0 WHEN (CASE WHEN (t0.publication_name IN ('Cairns Post', 'Geelong Advertiser', 'Gold Coast Bulletin', 'The Australian', 'Toowoomba', 'Townsville Bulletin')) THEN '6 Day Pubs' WHEN (t0.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury and Sunday Tas' WHEN (t0.publication_name IN ('NT News', 'Sunday Territorian')) THEN 'NT News & Sunday Territorian' WHEN (t0.publication_name IN ('Other', 'Brisbane Other', 'Cairns Post Digital', 'Corporate', 'Geelong Advertiser Digital', 'Gold Coast Bulletin Digital', 'Gold Coast Other', 'Herald Sun Digital', 'Melbourne Other', 'Mercury Digital', 'News Xtend', 'NIMs', 'NT News Digital', 'NT Other', 'Perth Now Digital', 'Sydney Other', 'The Australian Digital', 'The Courier Mail Digital', 'The Daily Telegraph Digital', 'The Weekend Australian Mag', 'Townsville Bulletin Digital', 'Transformation', 'Weekly Times Digital')) THEN 'Other' WHEN (t0.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'The Courier Mail' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' ELSE t0.publication_name END = '6 Day Pubs') THEN SAFE_DIVIDE( (CASE WHEN ( ( ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 26) OR ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 40) ) AND ( (CASE WHEN (t0.publication_name IN ('The Courier Mail')) THEN TRUE ELSE FALSE END) OR (CASE WHEN (t0.publication_name IN ('The Australian')) THEN TRUE ELSE FALSE END) ) ) THEN (CASE WHEN (CASE WHEN (t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (t0.day_of_week = 'Sat') THEN 'SAT' WHEN (t0.day_of_week = 'Sun') THEN 'Sun' ELSE NULL END = 'M-F') THEN (SAFE_DIVIDE(t0.Budget_Volume, 4)*5) ELSE t0.Budget_Volume END) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'The Sportsman') THEN (SAFE_DIVIDE(t0.Budget_Volume, 2)*5) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'Weekly Times') THEN (t0.Budget_Volume*5) WHEN (CASE WHEN (t0.publication_code = 'Post Courier') THEN 'PNG' ELSE t0.publication_name END = 'PNG') THEN 0 ELSE t0.Budget_Volume END) , 6) ELSE SAFE_DIVIDE( (CASE WHEN ( ( ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 26) OR ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 40) ) AND ( (CASE WHEN (t0.publication_name IN ('The Courier Mail')) THEN TRUE ELSE FALSE END) OR (CASE WHEN (t0.publication_name IN ('The Australian')) THEN TRUE ELSE FALSE END) ) ) THEN (CASE WHEN (CASE WHEN (t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (t0.day_of_week = 'Sat') THEN 'SAT' WHEN (t0.day_of_week = 'Sun') THEN 'Sun' ELSE NULL END = 'M-F') THEN (SAFE_DIVIDE(t0.Budget_Volume, 4)*5) ELSE t0.Budget_Volume END) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'Weekly Times') THEN (t0.Budget_Volume*5) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'The Sportsman') THEN (SAFE_DIVIDE(t0.Budget_Volume, 2)*5) WHEN (CASE WHEN (t0.publication_code = 'Post Courier') THEN 'PNG' ELSE t0.publication_name END = 'PNG') THEN 0 ELSE t0.Budget_Volume END) , 7) END) FROM `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0 LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number WHERE upper(t0.os_level_6) = 'CIRCULATION' AND t0.l04_publication_code <> 'Free News & Lifestyle' AND t0.l06_publication_code NOT IN ('Food', 'Prestige') AND t0.gl_hierarchy_code = 'FY2025' LIMIT 1","CASE WHEN (CASE WHEN (t0.publication_name IN ('Cairns Post', 'Geelong Advertiser', 'Gold Coast Bulletin', 'The Australian', 'Toowoomba', 'Townsville Bulletin')) THEN '6 Day Pubs' WHEN (t0.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury and Sunday Tas' WHEN (t0.publication_name IN ('NT News', 'Sunday Territorian')) THEN 'NT News & Sunday Territorian' WHEN (t0.publication_name IN ('Other', 'Brisbane Other', 'Cairns Post Digital', 'Corporate', 'Geelong Advertiser Digital', 'Gold Coast Bulletin Digital', 'Gold Coast Other', 'Herald Sun Digital', 'Melbourne Other', 'Mercury Digital', 'News Xtend', 'NIMs', 'NT News Digital', 'NT Other', 'Perth Now Digital', 'Sydney Other', 'The Australian Digital', 'The Courier Mail Digital', 'The Daily Telegraph Digital', 'The Weekend Australian Mag', 'Townsville Bulletin Digital', 'Transformation', 'Weekly Times Digital')) THEN 'Other' WHEN (t0.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'The Courier Mail' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' ELSE t0.publication_name END = 'PNG') THEN 0 WHEN (CASE WHEN (t0.publication_name IN ('Cairns Post', 'Geelong Advertiser', 'Gold Coast Bulletin', 'The Australian', 'Toowoomba', 'Townsville Bulletin')) THEN '6 Day Pubs' WHEN (t0.publication_name IN ('Mercury', 'Sunday Tasmanian')) THEN 'Mercury and Sunday Tas' WHEN (t0.publication_name IN ('NT News', 'Sunday Territorian')) THEN 'NT News & Sunday Territorian' WHEN (t0.publication_name IN ('Other', 'Brisbane Other', 'Cairns Post Digital', 'Corporate', 'Geelong Advertiser Digital', 'Gold Coast Bulletin Digital', 'Gold Coast Other', 'Herald Sun Digital', 'Melbourne Other', 'Mercury Digital', 'News Xtend', 'NIMs', 'NT News Digital', 'NT Other', 'Perth Now Digital', 'Sydney Other', 'The Australian Digital', 'The Courier Mail Digital', 'The Daily Telegraph Digital', 'The Weekend Australian Mag', 'Townsville Bulletin Digital', 'Transformation', 'Weekly Times Digital')) THEN 'Other' WHEN (t0.publication_name IN ('Advertiser', 'Sunday Mail (SA)')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'Sunday Mail (QLD)')) THEN 'The Courier Mail' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name IN ('Herald Sun', 'Sunday Herald Sun')) THEN 'The Herald Sun' ELSE t0.publication_name END = '6 Day Pubs') THEN SAFE_DIVIDE( (CASE WHEN ( ( ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 26) OR ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 40) ) AND ( (CASE WHEN (t0.publication_name IN ('The Courier Mail')) THEN TRUE ELSE FALSE END) OR (CASE WHEN (t0.publication_name IN ('The Australian')) THEN TRUE ELSE FALSE END) ) ) THEN (CASE WHEN (CASE WHEN (t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (t0.day_of_week = 'Sat') THEN 'SAT' WHEN (t0.day_of_week = 'Sun') THEN 'Sun' ELSE NULL END = 'M-F') THEN (SAFE_DIVIDE(t0.Budget_Volume, 4)*5) ELSE t0.Budget_Volume END) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'The Sportsman') THEN (SAFE_DIVIDE(t0.Budget_Volume, 2)*5) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'Weekly Times') THEN (t0.Budget_Volume*5) WHEN (CASE WHEN (t0.publication_code = 'Post Courier') THEN 'PNG' ELSE t0.publication_name END = 'PNG') THEN 0 ELSE t0.Budget_Volume END) , 6) ELSE SAFE_DIVIDE( (CASE WHEN ( ( ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 26) OR ( (EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE(TIMESTAMP '2025-04-15 04:14:20.297382+00', 'Australia/Sydney'))) - 1) = 40) ) AND ( (CASE WHEN (t0.publication_name IN ('The Courier Mail')) THEN TRUE ELSE FALSE END) OR (CASE WHEN (t0.publication_name IN ('The Australian')) THEN TRUE ELSE FALSE END) ) ) THEN (CASE WHEN (CASE WHEN (t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry')) THEN 'M-F' WHEN (t0.day_of_week = 'Sat') THEN 'SAT' WHEN (t0.day_of_week = 'Sun') THEN 'Sun' ELSE NULL END = 'M-F') THEN (SAFE_DIVIDE(t0.Budget_Volume, 4)*5) ELSE t0.Budget_Volume END) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'Weekly Times') THEN (t0.Budget_Volume*5) WHEN (CASE WHEN (t0.publication_name IN ('Sunday Herald Sun', 'Herald Sun')) THEN 'The Herald Sun' WHEN (t0.publication_name IN ('The Advertiser', 'Sunday Mail')) THEN 'The Advertiser' WHEN (t0.publication_name IN ('Courier Mail', 'The Sunday Mail')) THEN 'The Courier Mail' WHEN (t0.publication_name = 'The Australian') THEN 'The Australian' WHEN (t0.publication_name = 'The Sportsman') THEN 'The Sportsman' WHEN (t0.publication_name IN ('The Daily Telegraph', 'The Sunday Telegraph')) THEN 'The Daily Telegraph' WHEN (t0.publication_name = 'Weekly Times') THEN 'Weekly Times' ELSE NULL END = 'The Sportsman') THEN (SAFE_DIVIDE(t0.Budget_Volume, 2)*5) WHEN (CASE WHEN (t0.publication_code = 'Post Courier') THEN 'PNG' ELSE t0.publication_name END = 'PNG') THEN 0 ELSE t0.Budget_Volume END) , 7) END",calculated_field,False,medium,25,6a26c78f-0070-4fb3-88b8-691ee4a4485a
net_acquisitions_print_fy24,net_acquisitions,"Net Acquisitions (Print, FY24+)","The total number of new print subscriptions (including free-to-paid conversions) minus specific types of cancellations/reactivations, for fiscal years 2024 and onwards, for standard and other paid classifications.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  SUM(CASE WHEN subscription_movement_count_sub_type IN ('acquisition', 'free_to_pai_conversion') THEN subscription_movement_count ELSE 0 END) AS net_acquisitions
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements`
WHERE
  fy_year >= 2024
  AND delivery_medium_type != 'Digital'
  AND classification_level_1 IN ('Standard Paid', 'Other Paid')
LIMIT 1;","SUM(CASE WHEN subscription_movement_count_sub_type IN ('acquisition', 'free_to_pai_conversion') THEN subscription_movement_count ELSE 0 END)",measure,True,high,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
net_cancellations_print_fy24,net_cancellations,"Net Cancellations (Print, FY24+)","The total number of print subscription cancellations, adjusted for specific switch cancellations, reactivations, and excluded cancellation reasons, for fiscal years 2024 and onwards, for standard and other paid classifications.",ncau-data-newsquery-prd,asl_finance_derived,acquisitions_cancellations_movements,"SELECT
  SUM(CASE WHEN subscription_movement_count_type = 'cancellation' THEN subscription_movement_count ELSE 0 END) - SUM(CASE WHEN subscription_movement_count_sub_type IN ('switch_cancellation', 'reactivation_30day_acquisition') THEN subscription_movement_count WHEN subscription_movement_count_sub_type = 'cancellation' AND cancel_reason_exclude_flag = 'Y' THEN subscription_movement_count ELSE 0 END) AS net_cancellations
FROM
  `ncau-data-newsquery-prd.asl_finance_derived.acquisitions_cancellations_movements`
WHERE
  fy_year >= 2024
  AND delivery_medium_type != 'Digital'
  AND classification_level_1 IN ('Standard Paid', 'Other Paid')
LIMIT 1;","SUM(CASE WHEN subscription_movement_count_type = 'cancellation' THEN subscription_movement_count ELSE 0 END) - SUM(CASE WHEN subscription_movement_count_sub_type IN ('switch_cancellation', 'reactivation_30day_acquisition') THEN subscription_movement_count WHEN subscription_movement_count_sub_type = 'cancellation' AND cancel_reason_exclude_flag = 'Y' THEN subscription_movement_count ELSE 0 END)",measure,True,high,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
closing_base_print_fy24,closing_base,"Closing Subscription Base (Print, FY24+)","The total number of active print subscriptions at the end of a period, for fiscal years 2024 and onwards, for standard and other paid classifications, specifically for Sunday snapshots. Includes a specific override for 'HS' masthead in FY25 Week 3.",ncau-data-newsquery-prd,prstn_consumer_views,v_subscription_base_movement_agg_snap,"SELECT
  SUM(subscription_count) AS closing_base
FROM
  `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
WHERE
  sunday_flag = 'Y'
  AND (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END) != 'Digital'
  AND classification_level_1 IN ('Standard Paid', 'Other Paid')
  AND fy_year >= 2024
LIMIT 1;",SUM(subscription_count),measure,True,high,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
wow_closing_movement_print_fy24,wow_closing_movement,"Week-over-Week Closing Base Movement (Print, FY24+)","The change in the closing subscription base from the previous week, partitioned by masthead, delivery medium, email flag, finance recognition, and fiscal year.",ncau-data-newsquery-prd,prstn_consumer_views,v_subscription_base_movement_agg_snap,"SELECT
  closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_year ORDER BY fy_week_of_year) AS wow_closing_movement
FROM
  (
    SELECT
      fy_year,
      fy_week_of_year,
      masthead,
      delivery_medium_type,
      subscriber_has_email_flag,
      SUM(subscription_count) AS closing_base
    FROM
      `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
    WHERE
      sunday_flag = 'Y'
      AND delivery_medium_type != 'Digital'
      AND classification_level_1 IN ('Standard Paid', 'Other Paid')
      AND fy_year >= 2024
    GROUP BY 1, 2, 3, 4, 5
  )
WHERE
  closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_year ORDER BY fy_week_of_year) IS NOT NULL
LIMIT 1;","closing_base - LAG(closing_base) OVER (PARTITION BY masthead, delivery_medium_type, subscriber_has_email_flag, finance_recognition, fy_year ORDER BY fy_week_of_year)",calculated_field,True,high,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
yoy_closing_movement_print_fy24,yoy_closing_movement,"Year-over-Year Closing Base Movement (Print, FY24+)","The change in the closing subscription base from the same week in the previous fiscal year, partitioned by masthead, delivery medium, email flag, finance recognition, and fiscal week.",ncau-data-newsquery-prd,prstn_consumer_views,v_subscription_base_movement_agg_snap,"SELECT
  closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) AS yoy_closing_movement
FROM
  (
    SELECT
      fy_year,
      fy_week_of_year,
      masthead,
      delivery_medium_type,
      subscriber_has_email_flag,
      SUM(subscription_count) AS closing_base
    FROM
      `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
    WHERE
      sunday_flag = 'Y'
      AND delivery_medium_type != 'Digital'
      AND classification_level_1 IN ('Standard Paid', 'Other Paid')
      AND fy_year >= 2024
    GROUP BY 1, 2, 3, 4, 5
  )
WHERE
  closing_base - LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) IS NOT NULL
LIMIT 1;","closing_base - LAG(closing_base) OVER (PARTITION BY masthead, delivery_medium_type, subscriber_has_email_flag, finance_recognition, fy_week_of_year ORDER BY fy_year)",calculated_field,True,high,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
yoy_closing_base_lagged_print_fy24,yoy_closing_base,"Year-over-Year Closing Base (Lagged, Print, FY24+)","The closing subscription base from the same week in the previous fiscal year, partitioned by masthead, delivery medium, email flag, finance recognition, and fiscal week.",ncau-data-newsquery-prd,prstn_consumer_views,v_subscription_base_movement_agg_snap,"SELECT
  LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) AS yoy_closing_base
FROM
  (
    SELECT
      fy_year,
      fy_week_of_year,
      masthead,
      delivery_medium_type,
      subscriber_has_email_flag,
      SUM(subscription_count) AS closing_base
    FROM
      `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base_movement_agg_snap`
    WHERE
      sunday_flag = 'Y'
      AND delivery_medium_type != 'Digital'
      AND classification_level_1 IN ('Standard Paid', 'Other Paid')
      AND fy_year >= 2024
    GROUP BY 1, 2, 3, 4, 5
  )
WHERE
  LAG(closing_base) OVER (PARTITION BY masthead, (CASE WHEN fy_year = 2025 AND fy_week_of_year = 3 AND masthead = 'HS' AND delivery_medium_type = 'Not Available' THEN 'Bundle' ELSE delivery_medium_type END), subscriber_has_email_flag, (CASE WHEN delivery_medium_type IN ('Bundle', 'Print') AND subscriber_has_email_flag = 'N' THEN 'Print Subscription' WHEN delivery_medium_type = 'Print' AND subscriber_has_email_flag = 'Y' THEN 'Print Subscription' WHEN delivery_medium_type IN ('Bundle', 'Digital', 'Not Available') AND subscriber_has_email_flag = 'Y' THEN 'Digital Subscription' WHEN delivery_medium_type = 'Digital' AND subscriber_has_email_flag = 'N' THEN 'Digital Subscription' END), fy_week_of_year ORDER BY fy_year) IS NOT NULL
LIMIT 1;","LAG(closing_base) OVER (PARTITION BY masthead, delivery_medium_type, subscriber_has_email_flag, finance_recognition, fy_week_of_year ORDER BY fy_year)",calculated_field,False,medium,26,3b23bf1a-c212-49a1-afa1-558ec7ed6b19
gross_revenue_current_fy,gross_revenue,Gross Revenue - Current Financial Year,"The total gross revenue amount for the current financial year, based on the relative financial year offset.",ncau-data-newsquery-prd,sbx_dcp,ia,SELECT SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END) AS gross_revenue_current_fy FROM `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0,SUM(CASE WHEN t0.relative_fy_year_offset = 0 THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,27,fed70b12-c274-4cde-9920-592ca4c4dab0
gross_revenue_previous_fy,gross_revenue,Gross Revenue - Previous Financial Year,"The total gross revenue amount for the previous financial year, based on the relative financial year offset.",ncau-data-newsquery-prd,sbx_dcp,ia,SELECT SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) AS gross_revenue_previous_fy FROM `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0,SUM(CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END),measure,True,high,27,fed70b12-c274-4cde-9920-592ca4c4dab0
gross_revenue_prior_period_conditional,gross_revenue,Gross Revenue - Prior Period (Conditional),"A complex calculation of prior period gross revenue. If the financial month offset is more than 12 months ago, it's the previous financial year's revenue. Otherwise, it's the previous financial year's revenue up to a specific date (365 days prior to a fixed dashboard date).",ncau-data-newsquery-prd,sbx_dcp,ia,"SELECT SUM(CASE WHEN t0.relative_fy_month_offset < -12 THEN (CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) ELSE (CASE WHEN (t0.relative_fy_year_offset = -1 AND SAFE_CAST(FORMAT_TIMESTAMP('%Y-%m-%d', SAFE_CAST(t0.booking_line_created_date AS TIMESTAMP)) AS DATETIME) <= DATETIME_ADD(DATE(TIMESTAMP '2025-05-23 01:19:32.916346+00', 'Australia/Sydney'), INTERVAL -365 DAY)) THEN t0.gross_revenue_amount ELSE 0 END) END) AS gross_revenue_prior_period_conditional FROM `ncau-data-newsquery-prd.sbx_dcp.ia` AS t0","SUM(CASE WHEN t0.relative_fy_month_offset < -12 THEN (CASE WHEN t0.relative_fy_year_offset = -1 THEN t0.gross_revenue_amount ELSE 0 END) ELSE (CASE WHEN (t0.relative_fy_year_offset = -1 AND SAFE_CAST(FORMAT_TIMESTAMP('%Y-%m-%d', SAFE_CAST(t0.booking_line_created_date AS TIMESTAMP)) AS DATETIME) <= DATETIME_ADD(DATE(TIMESTAMP '2025-05-23 01:19:32.916346+00', 'Australia/Sydney'), INTERVAL -365 DAY)) THEN t0.gross_revenue_amount ELSE 0 END) END)",measure,True,high,27,fed70b12-c274-4cde-9920-592ca4c4dab0
gross_amount_difference,gross_amount_difference,Gross Amount Difference,"The sum of the gross amount difference, likely representing a change or movement in revenue.",ncau-data-newsquery-prd,asl_finance_derived,revenue_movement,SELECT SUM(t0.GROSS_AMOUNT_DIFF) AS gross_amount_difference FROM `ncau-data-newsquery-prd.asl_finance_derived.revenue_movement` AS t0,SUM(t0.GROSS_AMOUNT_DIFF),measure,False,medium,27,fed70b12-c274-4cde-9920-592ca4c4dab0
budget_amount_fy2025_rev_exp_news_media_week4,budget_amount,"Budget Amount (FY2025, Rev/Exp, News Media, Week 4)","Total budgeted financial amount for Fiscal Year 2025, specifically for 'Total Revenue' and 'Total Expenses' within 'News Media Publishing' for fiscal week 4.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(t0.Budget_Amount)
FROM
  (
    SELECT
      os.Budget_Amount,
      os.fiscal_week_id,
      os.is_print_digital_flag,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      os.os_level_12,
      pub.l03_publication_code,
      pub.l12_publication_code,
      pub.publication_name,
      calendar.fy_week_of_year,
      dep.gl_hierarchy_code
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
      LEFT JOIN (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department` AS dep ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  (t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.l03_publication_code = 'News Media Publishing' AND t0.fy_week_of_year IN (4))",SUM(Budget_Amount),measure,True,high,28,b1c5901f-a535-42eb-870d-05cc025f7c27
actual_amount_fy2025_rev_exp_week40,actual_amount,"Actual Amount (FY2025, Rev/Exp, Week 40)","Total actual financial amount for Fiscal Year 2025, specifically for 'Total Revenue' and 'Total Expenses' for fiscal week 40.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(t0.Actual_Amount)
FROM
  (
    SELECT
      os.Actual_Amount,
      os.fiscal_week_id,
      os.is_print_digital_flag,
      os.os_level_4,
      os.os_level_5,
      os.os_level_9,
      os.os_level_12,
      pub.l12_publication_code,
      pub.publication_name,
      calendar.fy_week_of_year,
      dep.gl_hierarchy_code
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
      LEFT JOIN (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department` AS dep ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  (t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.fy_week_of_year IN (40))",SUM(Actual_Amount),measure,True,high,28,b1c5901f-a535-42eb-870d-05cc025f7c27
sum_fy_week_of_year_fy2025_rev_exp_news_media_week4,sum_fy_week_of_year,"Sum of Fiscal Week of Year (FY2025, Rev/Exp, News Media, Week 4)","An aggregated sum of the fiscal week of year. This is likely a misconfigured metric in Looker Studio, as summing a week number typically doesn't yield a meaningful business value. It might be used for internal sorting or grouping, or as a placeholder.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(t0.fy_week_of_year)
FROM
  (
    SELECT
      os.Budget_Amount,
      os.fiscal_week_id,
      os.is_print_digital_flag,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      os.os_level_12,
      pub.l03_publication_code,
      pub.l12_publication_code,
      pub.publication_name,
      calendar.fy_week_of_year,
      dep.gl_hierarchy_code
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON os.gl_publication_code = pub.publication_code
      LEFT JOIN (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department` AS dep ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  (t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.l03_publication_code = 'News Media Publishing' AND t0.fy_week_of_year IN (4))",SUM(fy_week_of_year),aggregation,False,low,28,b1c5901f-a535-42eb-870d-05cc025f7c27
sum_total_2nd_margin_rev_general_filtered,total_2nd_margin_rev,Total 2nd Margin Revenue (General Filter),"Sum of total 2nd margin revenue, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.total_2nd_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.total_2nd_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_total_2nd_margin_rev_filtered_by_fiscal_month_and_service_model_list,total_2nd_margin_rev,Total 2nd Margin Revenue (Specific Fiscal Months & Service Models),"Sum of total 2nd margin revenue, filtered by specific fiscal months and service models, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.total_2nd_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",SUM(t0.total_2nd_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_total_2nd_margin_rev_filtered_by_fiscal_month_concat_list,total_2nd_margin_rev,Total 2nd Margin Revenue (Specific Fiscal Month Concat List),"Sum of total 2nd margin revenue, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.total_2nd_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.total_2nd_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_sales_cost_general_filtered,sales_cost,Total Sales Cost (General Filter),"Sum of sales cost, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.sales_cost) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.sales_cost),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_sales_cost_filtered_by_fiscal_month_and_service_model_list,sales_cost,Total Sales Cost (Specific Fiscal Months & Service Models),"Sum of sales cost, filtered by specific fiscal months and service models, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.sales_cost) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",SUM(t0.sales_cost),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_sales_cost_filtered_by_fiscal_month_concat_list,sales_cost,Total Sales Cost (Specific Fiscal Month Concat List),"Sum of sales cost, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.sales_cost) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.sales_cost),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_revenue_served_after_exclusion_general_filtered,revenue_served_after_exclusion,Total Revenue Served After Exclusion (General Filter),"Sum of revenue served after exclusion, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.revenue_served_after_exclusion) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.revenue_served_after_exclusion),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_revenue_served_after_exclusion_filtered_by_fiscal_month_and_service_model_list,revenue_served_after_exclusion,Total Revenue Served After Exclusion (Specific Fiscal Months & Service Models),"Sum of revenue served after exclusion, filtered by specific fiscal months and service models, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.revenue_served_after_exclusion) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",SUM(t0.revenue_served_after_exclusion),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_revenue_served_after_exclusion_filtered_by_fiscal_month_concat_list,revenue_served_after_exclusion,Total Revenue Served After Exclusion (Specific Fiscal Month Concat List),"Sum of revenue served after exclusion, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.revenue_served_after_exclusion) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.revenue_served_after_exclusion),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_total_other_margin_rev_general_filtered,total_other_margin_rev,Total Other Margin Revenue (General Filter),"Sum of total other margin revenue, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.total_other_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.total_other_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_total_other_margin_rev_filtered_by_fiscal_month_and_service_model_list,total_other_margin_rev,Total Other Margin Revenue (Specific Fiscal Months & Service Models),"Sum of total other margin revenue, filtered by specific fiscal months and service models, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.total_other_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",SUM(t0.total_other_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_total_other_margin_rev_filtered_by_fiscal_month_concat_list,total_other_margin_rev,Total Other Margin Revenue (Specific Fiscal Month Concat List),"Sum of total other margin revenue, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.total_other_margin_rev) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.total_other_margin_rev),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_target_cost_to_serve_percentage_general_filtered,target_cost_to_serve_percentage,Sum Target Cost To Serve Percentage (General Filter),"Sum of target cost to serve percentage, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.target_cost_to_serve_percentage) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.target_cost_to_serve_percentage),measure,False,medium,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_target_cost_to_serve_percentage_filtered_by_fiscal_month_concat_list,target_cost_to_serve_percentage,Sum Target Cost To Serve Percentage (Specific Fiscal Month Concat List),"Sum of target cost to serve percentage, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.target_cost_to_serve_percentage) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.target_cost_to_serve_percentage),measure,False,medium,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
count_target_cost_to_serve_percentage_general_filtered,target_cost_to_serve_percentage,Count Target Cost To Serve Percentage (General Filter),"Count of target cost to serve percentage records, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT COUNT(t0.target_cost_to_serve_percentage) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),COUNT(t0.target_cost_to_serve_percentage),measure,False,low,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
count_target_cost_to_serve_percentage_filtered_by_fiscal_month_concat_list,target_cost_to_serve_percentage,Count Target Cost To Serve Percentage (Specific Fiscal Month Concat List),"Count of target cost to serve percentage records, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT COUNT(t0.target_cost_to_serve_percentage) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",COUNT(t0.target_cost_to_serve_percentage),measure,False,low,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_revenue_served_general_filtered,revenue_served,Total Revenue Served (General Filter),"Sum of revenue served, filtered for past fiscal months and excluding 'V1. Hybrid' service model.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,SELECT SUM(t0.revenue_served) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid'),SUM(t0.revenue_served),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_revenue_served_filtered_by_fiscal_month_concat_list,revenue_served,Total Revenue Served (Specific Fiscal Month Concat List),"Sum of revenue served, filtered by specific concatenated fiscal month and name, excluding 'V1. Hybrid' and for past fiscal months.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_service_model,"SELECT SUM(t0.revenue_served) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_service_model` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) < SAFE_CAST(t0.current_fiscal_month_id AS STRING) AND t0.service_model != 'V1. Hybrid' AND CONCAT(SAFE_CAST(t0.fiscal_month_id AS STRING),' ',SAFE_CAST(t0.fiscal_month AS STRING)) IN ('202507 Jan', '202506 Dec', '202505 Nov', '202504 Oct', '202503 Sep'))",SUM(t0.revenue_served),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_allocated_cost_by_bu,allocated_cost,Total Allocated Cost by Business Unit,"Sum of allocated cost, grouped by business unit code.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_bu_cost,SELECT SUM(t0.allocated_cost) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_bu_cost` AS t0,SUM(t0.allocated_cost),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
sum_product_revenue_filtered_by_fiscal_month_and_service_model_list,product_revenue,Total Product Revenue (Specific Fiscal Months & Service Models),"Sum of product revenue, filtered by specific fiscal months and service models.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_product,"SELECT SUM(t0.product_revenue) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_product` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",SUM(t0.product_revenue),measure,True,high,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
min_other_additional_margin_filtered_by_fiscal_month_and_service_model_list,other_additional_margin,Minimum Other Additional Margin (Specific Fiscal Months & Service Models),"Minimum value of other additional margin, filtered by specific fiscal months and service models.",ncau-data-newsquery-prd,sbx_fda_noncorefin,cost_to_serve_product,"SELECT MIN(t0.other_additional_margin) FROM `ncau-data-newsquery-prd.sbx_fda_noncorefin.cost_to_serve_product` AS t0 WHERE (SAFE_CAST(t0.fiscal_month_id AS STRING) IN ('202401', '202402', '202403', '202404', '202405', '202406', '202407', '202408', '202409', '202410', '202411', '202412', '202501', '202502', '202503', '202504', '202505', '202506', '202507') AND t0.service_model IN ('E1.F2F Key Accounts', 'E2. F2F Agency', 'E3. Direct', 'N1. New Business F2F', 'N2. New Business Virtual', 'Other', 'V2. Transactional', 'V3. Self Service', 'V4. Account Managed'))",MIN(t0.other_additional_margin),measure,False,medium,30,c44e51ad-f0c4-4a5e-bb7c-e0044deaa278
total_earned_amount_news_media_publishing_current_q_filtered_classifications,total_earned_amount,"Total Earned Amount (News Media Publishing, Current Quarter, Filtered Classifications)","The sum of earned amount for 'News Media Publishing' publication, for fiscal weeks 202601-202604, excluding complimentary/free classifications based on classification levels 1 and 2.",ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT
    SUM(t0.earned_amount) AS total_earned_amount
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    (CASE WHEN (SAFE_CAST(t0.classification_level_1_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_1_description AS STRING) END NOT IN ('Complimentary', 'Free Staff', 'Free Trials'))
    AND
    (CASE WHEN (SAFE_CAST(t0.classification_level_2_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_2_description AS STRING) END NOT IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access'))
    AND t0.L03_publication_name = 'News Media Publishing'
    AND SAFE_CAST(t0.fiscal_week_id AS INT64) IN (202601, 202602, 202603, 202604)
LIMIT 1;",SUM(t0.earned_amount),measure,True,high,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
gl_publication_code_true_up_adjustment_202504,gl_publication_code,"GL Publication Code (True Up Adjustment, Fiscal Week 202504)",List of distinct GL publication codes associated with the 'True Up Adjustment' scenario for fiscal week 202504. Likely used to populate a filter or dropdown in the dashboard.,ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT DISTINCT
    t0.gl_publication_code
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    SAFE_CAST(t0.fiscal_week_id AS INT64) IN (202504)
    AND t0.scenario IN ('True Up Adjustment')
ORDER BY
    t0.gl_publication_code DESC
LIMIT 100;",t0.gl_publication_code,dimension,False,low,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
gl_publication_code_estimate,gl_publication_code,GL Publication Code (Estimate Scenario),List of distinct GL publication codes associated with the 'Estimate' scenario. Likely used to populate a filter or dropdown in the dashboard.,ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT DISTINCT
    t0.gl_publication_code
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    t0.scenario IN ('Estimate')
ORDER BY
    t0.gl_publication_code DESC
LIMIT 100;",t0.gl_publication_code,dimension,False,low,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
total_earned_amount_news_media_publishing_previous_q_estimate_filtered_classifications,total_earned_amount,"Total Earned Amount (News Media Publishing, Previous Quarter Estimate, Filtered Classifications)","The sum of earned amount for 'News Media Publishing' publication, for fiscal weeks 202501-202504, with 'Estimate' scenario, excluding complimentary/free classifications based on classification levels 1 and 2.",ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT
    SUM(t0.earned_amount) AS total_earned_amount
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    (CASE WHEN (SAFE_CAST(t0.classification_level_1_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_1_description AS STRING) END NOT IN ('Complimentary', 'Free Staff', 'Free Trials'))
    AND
    (CASE WHEN (SAFE_CAST(t0.classification_level_2_description AS STRING) IS NULL) THEN 'null' ELSE SAFE_CAST(t0.classification_level_2_description AS STRING) END NOT IN ('Brand Registration', 'Business', 'Cafe', 'CAFE', 'Café', 'CLIENT', 'Complimentary', 'DIGITAL', 'Digital Bundle', 'Education', 'Existing Subscribers', 'Free Staff', 'Free to Paid', 'Free Trials', 'Group Activation', 'Home Delivery', 'Library', 'Metered Access', 'Miscellaneous', 'Staff', 'TAB', 'Unknown', 'VIP Access'))
    AND t0.L03_publication_name = 'News Media Publishing'
    AND SAFE_CAST(t0.fiscal_week_id AS INT64) IN (202501, 202502, 202503, 202504)
    AND t0.scenario IN ('Estimate')
LIMIT 1;",SUM(t0.earned_amount),measure,True,high,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
scenario_fiscal_week_202504,scenario,Scenario (Fiscal Week 202504),List of distinct scenarios available for fiscal week 202504. Likely used to populate a filter or dropdown in the dashboard.,ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT DISTINCT
    t0.scenario
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    SAFE_CAST(t0.fiscal_week_id AS INT64) IN (202504)
ORDER BY
    t0.scenario DESC
LIMIT 100;",t0.scenario,dimension,False,low,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
publication_name_previous_q_estimate,L03_publication_name,Publication Name (Previous Quarter Estimate),List of distinct publication names available for fiscal weeks 202501-202504 with the 'Estimate' scenario. Likely used to populate a filter or dropdown in the dashboard.,ncau-data-newsquery-prd,prstn_finance,v_subscription_snapshot_fct,"SELECT DISTINCT
    t0.L03_publication_name
FROM
    `ncau-data-newsquery-prd.prstn_finance.v_subscription_snapshot_fct` AS t0
WHERE
    SAFE_CAST(t0.fiscal_week_id AS INT64) IN (202501, 202502, 202503, 202504)
    AND t0.scenario IN ('Estimate')
ORDER BY
    t0.L03_publication_name DESC
LIMIT 100;",t0.L03_publication_name,dimension,False,low,31,e380f99e-2ef3-40ec-a3ec-bc35491cc0bb
total_registrations_wealth_filtered_publication_group_last_week,total_registrations,Total Registrations - Wealth Content (Australian/Global Syn/Dow Jones),"Count of registrations for content categorized as 'Wealth' from specific publication groups ('Australian', 'Global syn') or rights sources ('Dow Jones') for the last week (2025-08-04 to 2025-08-10).",ncau-data-newsquery-prd,prstn_verity,t_registration_details_snapshot_summary,"SELECT COUNT(1) AS t0_qt_2uiercfxmd FROM (
SELECT SAFE_CAST(DATETIME_TRUNC(clmn5_, SECOND) AS DATE) AS clmn6_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_ FROM (
SELECT SAFE_CAST(clmn3_ AS DATETIME) AS clmn5_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_ FROM (
SELECT t0.ArticleDominantSection1 AS clmn0_, t0.ArticleRightsSource AS clmn1_, t0.PublicationGroup AS clmn2_, t0.SubscriptionDateTime AS clmn3_, t0.categorytopic_path AS clmn4_ FROM `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0
)
)
) WHERE (clmn3_ >= TIMESTAMP '2025-08-04' AND clmn3_ < TIMESTAMP_ADD(TIMESTAMP '2025-08-10', INTERVAL 1 DAY) AND (SAFE.REGEXP_CONTAINS(SAFE_CAST(clmn2_ AS STRING), 'Australian|Global syn') OR clmn1_ = 'Dow Jones') AND (SAFE.REGEXP_CONTAINS(SAFE_CAST(clmn4_ AS STRING), 'Wealth|wealth') OR SAFE.REGEXP_CONTAINS(SAFE_CAST(clmn0_ AS STRING), 'Wealth|wealth'))) LIMIT 2000001;",COUNT(1),measure,True,high,32,9c992f02-f13b-4c32-a400-90135fdff180
total_registrations_wealth_the_australian_previous_week,total_registrations,Total Registrations - Wealth Content (The Australian Website),Count of registrations for content categorized as 'Wealth' specifically from 'The Australian' website for the previous week (2025-07-28 to 2025-08-03).,ncau-data-newsquery-prd,prstn_verity,t_registration_details_snapshot_summary,"SELECT COUNT(1) AS t0c1d0_qt_r93oq36xmd FROM (
SELECT SAFE_CAST(DATETIME_TRUNC(clmn4_, SECOND) AS DATE) AS clmn5_, clmn0_, clmn1_, clmn2_, clmn3_ FROM (
SELECT SAFE_CAST(clmn1_ AS DATETIME) AS clmn4_, clmn0_, clmn1_, clmn2_, clmn3_ FROM (
SELECT t0c1d0.ArticleDominantSection1 AS clmn0_, t0c1d0.SubscriptionDateTime AS clmn1_, t0c1d0.Website AS clmn2_, t0c1d0.categorytopic_path AS clmn3_ FROM `ncau-data-newsquery-prd.prstn_verity.t_registration_details_snapshot_summary` AS t0c1d0
)
)
) WHERE (clmn1_ >= TIMESTAMP '2025-07-28' AND clmn1_ < TIMESTAMP_ADD(TIMESTAMP '2025-08-03', INTERVAL 1 DAY) AND (SAFE.REGEXP_CONTAINS(SAFE_CAST(clmn3_ AS STRING), 'Wealth|wealth') OR SAFE.REGEXP_CONTAINS(SAFE_CAST(clmn0_ AS STRING), 'Wealth|wealth')) AND clmn2_ = 'The Australian') LIMIT 2000001;",COUNT(1),measure,True,high,32,9c992f02-f13b-4c32-a400-90135fdff180
count_ta_wealth_targets_week_1,count_of_targets,Count of TA Wealth Targets - Week 1,Count of target entries for the 'TA Wealth' section team for a specific week (2025-08-11 to 2025-08-17). This metric represents the number of rows in the subscription targets table matching the criteria.,ncau-data-newsquery-prd,cdm_reference_data,subscription_targets,"SELECT clmn0_, clmn1_, clmn8_ AS t0_qt_7fms2as7td, COUNT(1) AS t0_qt_9c6j75n7td, clmn2_, clmn4_, clmn5_ FROM (
SELECT PARSE_DATE('%Y%m%d', clmn6_) AS clmn7_, PARSE_DATE('%Y%m%d', clmn6_) AS clmn8_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_ FROM (
SELECT SAFE_CAST(clmn3_ AS STRING) AS clmn6_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_ FROM (
SELECT t0.day_target_by_section_team AS clmn0_, t0.publication_group AS clmn1_, t0.section_team AS clmn2_, t0.targetdate AS clmn3_, t0.website AS clmn4_, t0.week AS clmn5_ FROM `ncau-data-newsquery-prd.cdm_reference_data.subscription_targets` AS t0
)
)
) WHERE (clmn7_ >= DATE '2025-08-11' AND clmn7_ <= DATE '2025-08-17' AND clmn2_ = 'TA Wealth') GROUP BY clmn0_, clmn1_, t0_qt_7fms2as7td, clmn2_, clmn4_, clmn5_ LIMIT 2000001;",COUNT(1),measure,False,medium,32,9c992f02-f13b-4c32-a400-90135fdff180
count_ta_wealth_targets_week_2,count_of_targets,Count of TA Wealth Targets - Week 2,Count of target entries for the 'TA Wealth' section team for a specific week (2025-08-25 to 2025-08-31). This metric represents the number of rows in the subscription targets table matching the criteria.,ncau-data-newsquery-prd,cdm_reference_data,subscription_targets,"SELECT clmn0_, clmn1_, clmn8_ AS t0_qt_7fms2as7td, COUNT(1) AS t0_qt_9c6j75n7td, clmn2_, clmn4_, clmn5_ FROM (
SELECT PARSE_DATE('%Y%m%d', clmn6_) AS clmn7_, PARSE_DATE('%Y%m%d', clmn6_) AS clmn8_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_ FROM (
SELECT SAFE_CAST(clmn3_ AS STRING) AS clmn6_, clmn0_, clmn1_, clmn2_, clmn3_, clmn4_, clmn5_ FROM (
SELECT t0.day_target_by_section_team AS clmn0_, t0.publication_group AS clmn1_, t0.section_team AS clmn2_, t0.targetdate AS clmn3_, t0.website AS clmn4_, t0.week AS clmn5_ FROM `ncau-data-newsquery-prd.cdm_reference_data.subscription_targets` AS t0
)
)
) WHERE (clmn7_ >= DATE '2025-08-25' AND clmn7_ <= DATE '2025-08-31' AND clmn2_ = 'TA Wealth') GROUP BY clmn0_, clmn1_, t0_qt_7fms2as7td, clmn2_, clmn4_, clmn5_ LIMIT 2000001;",COUNT(1),measure,False,medium,32,9c992f02-f13b-4c32-a400-90135fdff180
fy_year_dimension,fiscal_year,Fiscal Year,"The fiscal year dimension, typically used for filtering or grouping financial data.",ncau-data-newsquery-prd,asl_finance,v_asl_DIM_calendar,"SELECT
  CAST(c.fy_year AS int) AS fy_year
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
  JOIN
  `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
  ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
WHERE
  CAST(c.fy_week_of_year AS int) = 40
GROUP BY
  fy_year
ORDER BY
  fy_year DESC
LIMIT 2000001;",CAST(c.fy_year AS int),dimension,False,medium,33,cbab66df-64cb-4ec6-a112-088557684b7e
fy_week_of_year_dimension,fiscal_week_of_year,Fiscal Week of Year,"The fiscal week of the year dimension, typically used for filtering or grouping financial data.",ncau-data-newsquery-prd,asl_finance,v_asl_DIM_calendar,"SELECT
  CAST(c.fy_week_of_year AS int) AS fy_week_of_year
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
  JOIN
  `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
  ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
GROUP BY
  fy_week_of_year
ORDER BY
  fy_week_of_year ASC
LIMIT 2000001;",CAST(c.fy_week_of_year AS int),dimension,False,medium,33,cbab66df-64cb-4ec6-a112-088557684b7e
actual_amount_by_os_level_5,actual_amount,Actual Amount by OS Level 5,"The total actual financial amount aggregated by OS Level 5, representing a specific organizational or operational segment.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  t0.os_level_5,
  SUM(t0.Actual_Amount) AS total_actual_amount
FROM
  (
    SELECT
      os.Actual_Amount,
      os.os_level_5
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  ) AS t0
GROUP BY
  t0.os_level_5
ORDER BY
  total_actual_amount DESC
LIMIT 2000001;",SUM(Actual_Amount),measure,True,high,33,cbab66df-64cb-4ec6-a112-088557684b7e
actual_amount_fy2025_week40_revenue_expenses_news_media,actual_amount,"Actual Amount (FY2025, Week 40, Revenue/Expenses, News Media)","The total actual financial amount for Fiscal Year 2025, Week 40, specifically for 'Total Revenue' and 'Total Expenses' within 'News Media Publishing'.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  t0.gl_publication_code,
  t0.is_print_digital_flag,
  t0.os_level_5,
  t0.os_level_6,
  SUM(t0.Actual_Amount) AS total_actual_amount
FROM
  (
    SELECT
      os.Actual_Amount,
      os.gl_publication_code,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      pub.is_print_digital_flag,
      pub.l03_publication_code,
      pub.gl_hierarchy_code,
      calendar.fy_week_of_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.l03_publication_code = 'News Media Publishing' AND t0.fy_week_of_year IN (40)
GROUP BY
  t0.gl_publication_code, t0.is_print_digital_flag, t0.os_level_5, t0.os_level_6
LIMIT 2000001;",SUM(Actual_Amount),measure,True,high,33,cbab66df-64cb-4ec6-a112-088557684b7e
last_year_actual_amount_fy2025_week40_revenue_expenses_news_media,last_year_actual_amount,"Last Year Actual Amount (FY2025, Week 40, Revenue/Expenses, News Media)","The total actual financial amount from the previous fiscal year for Fiscal Year 2025, Week 40, specifically for 'Total Revenue' and 'Total Expenses' within 'News Media Publishing'.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  t0.gl_publication_code,
  t0.is_print_digital_flag,
  t0.os_level_5,
  t0.os_level_6,
  SUM(t0.Last_Year_Actual_Amount) AS total_last_year_actual_amount
FROM
  (
    SELECT
      os.Last_Year_Actual_Amount,
      os.gl_publication_code,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      pub.is_print_digital_flag,
      pub.l03_publication_code,
      pub.gl_hierarchy_code,
      calendar.fy_week_of_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.l03_publication_code = 'News Media Publishing' AND t0.fy_week_of_year IN (40)
GROUP BY
  t0.gl_publication_code, t0.is_print_digital_flag, t0.os_level_5, t0.os_level_6
LIMIT 2000001;",SUM(Last_Year_Actual_Amount),measure,True,high,33,cbab66df-64cb-4ec6-a112-088557684b7e
last_year_actual_amount_fy2025_revenue_expenses_news_media,last_year_actual_amount,"Last Year Actual Amount (FY2025, Revenue/Expenses, News Media)","The total actual financial amount from the previous fiscal year for Fiscal Year 2025, specifically for 'Total Revenue' and 'Total Expenses' within 'News Media Publishing'.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  t0.fy_week_of_year,
  t0.is_print_digital_flag,
  t0.l12_publication_code,
  t0.os_level_5,
  t0.os_level_6,
  t0.publication_name,
  SUM(t0.Last_Year_Actual_Amount) AS total_last_year_actual_amount,
  MIN(t0.fy_week_of_year) AS min_fy_week_of_year
FROM
  (
    SELECT
      os.Last_Year_Actual_Amount,
      os.os_level_4,
      os.os_level_5,
      os.os_level_6,
      pub.is_print_digital_flag,
      pub.l03_publication_code,
      pub.l12_publication_code,
      pub.publication_name,
      pub.gl_hierarchy_code,
      calendar.fy_week_of_year
    FROM
      `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS os
      LEFT JOIN
      `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
      ON os.gl_publication_code = pub.publication_code
      LEFT JOIN
      (
        SELECT DISTINCT
          CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
          CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
          CAST(c.fy_year AS int) AS fy_year
        FROM
          `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
          JOIN
          `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
          ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      ) AS calendar
      ON os.fiscal_week_id = calendar.fy_year_week_number
      LEFT JOIN
      `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
      ON os.os_level_12 = dep.department_code
  ) AS t0
WHERE
  t0.gl_hierarchy_code = 'FY2025' AND t0.os_level_4 IN ('Total Revenue', 'Total Expenses') AND t0.l03_publication_code = 'News Media Publishing'
GROUP BY
  t0.fy_week_of_year, t0.is_print_digital_flag, t0.l12_publication_code, t0.os_level_5, t0.os_level_6, t0.publication_name
LIMIT 2000001;",SUM(Last_Year_Actual_Amount),measure,True,high,33,cbab66df-64cb-4ec6-a112-088557684b7e
advertiser_name_dimension,advertiser_name,Advertiser Name,The name of the advertiser associated with the booking or account. This dimension is frequently used for filtering.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT t0.advertiser_name FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 100,t0.advertiser_name,dimension,false,medium,34,70ed3b92-987b-479b-9ed7-d2903bd2787e
booking_number_dimension,booking_number,Booking Number,A unique identifier for a specific booking or order. This dimension is frequently used for filtering.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT t0.booking_number FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 100,t0.booking_number,dimension,false,medium,34,70ed3b92-987b-479b-9ed7-d2903bd2787e
account_number_dimension,account_number,Account Number,A unique identifier for the advertiser's account.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT t0.account_number FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 100,t0.account_number,dimension,false,medium,34,70ed3b92-987b-479b-9ed7-d2903bd2787e
dw_asl_load_timestamp_dimension,dw_asl_load_timestamp,Data Warehouse Load Timestamp,The timestamp indicating when the record was loaded or last updated in the ASL (Advertising Sales Ledger) data warehouse.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT t0.dw_asl_load_timestamp FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 100,t0.dw_asl_load_timestamp,dimension,false,low,34,70ed3b92-987b-479b-9ed7-d2903bd2787e
calendar_period_type_calculated,calendar_period_type,Calendar Period Type,A calculated field that consistently returns 'Calendar Period'. This likely serves as a static label or categorization for a specific type of period within the dashboard's context.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT CASE WHEN ('Cal' = 'Cal') THEN 'Calendar Period' ELSE NULL END AS calendar_period_type FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 LIMIT 100,CASE WHEN ('Cal' = 'Cal') THEN 'Calendar Period' ELSE NULL END,calculated_field,false,low,34,70ed3b92-987b-479b-9ed7-d2903bd2787e
actual_amount_ytd_fy2025,actual_amount,Actual Amount YTD (FY2025),"The total actual amount of circulation revenue for the fiscal year 2025, up to fiscal week 46. Amounts are divided by 1000 for display.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(SAFE_DIVIDE(t0.Actual_Amount, 1000)) AS actual_amount_ytd
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
  AND t0.fy_year = 2025
  AND t0.fy_year_week_number <= 202546
LIMIT 1;","SUM(SAFE_DIVIDE(Actual_Amount, 1000))",measure,True,high,35,aca2f032-b796-49a2-89fe-781ca947aa33
total_volume_fy2025,volume,Total Volume (FY2025),The total volume of circulation for the fiscal year 2025. Volumes are divided by 1000 for display.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(SAFE_DIVIDE(t0.volume, 1000)) AS total_volume
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
LIMIT 1;","SUM(SAFE_DIVIDE(volume, 1000))",measure,True,high,35,aca2f032-b796-49a2-89fe-781ca947aa33
actual_amount_specific_week_fy2025,actual_amount,Actual Amount (Specific Week FY2025),"The total actual amount of circulation revenue for fiscal week 47 of FY2025, filtered for 'All Sales Channels' and excluding 'Other' publication groups. Grouped by publication group.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(t0.Actual_Amount) AS actual_amount_specific_week,
  CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END AS publication_group
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON t0.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
  AND t0.fy_year_week_number = 202547
  AND t0.os_level_7 = 'All Sales Channels'
  AND (CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END) != 'Other'
GROUP BY
  publication_group
LIMIT 10;",SUM(Actual_Amount),measure,True,high,35,aca2f032-b796-49a2-89fe-781ca947aa33
last_year_actual_amount_specific_week_fy2025,last_year_actual_amount,Last Year Actual Amount (Specific Week FY2025),"The total actual amount of circulation revenue from the previous fiscal year for fiscal week 47 of FY2025, filtered for 'All Sales Channels' and excluding 'Other' publication groups. Grouped by publication group.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"SELECT
  SUM(t0.Last_Year_Actual_Amount) AS last_year_actual_amount_specific_week,
  CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END AS publication_group
FROM
  `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated` AS t0
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub ON t0.gl_publication_code = pub.publication_code
  LEFT JOIN `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS calendar ON t0.fiscal_week_id = calendar.fy_year_week_number
WHERE
  upper(t0.os_level_6) = 'CIRCULATION'
  AND t0.l04_publication_code <> 'Free News & Lifestyle'
  AND t0.l06_publication_code NOT IN ('Food', 'Prestige')
  AND t0.gl_hierarchy_code = 'FY2025'
  AND t0.fy_year_week_number = 202547
  AND t0.os_level_7 = 'All Sales Channels'
  AND (CASE
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Cairns Post', 'Ed Media', 'Geelong Advertiser', 'Gold Coast Bulletin', 'Mackay', 'Mercury', 'NT News', 'Sunday Tasmanian', 'Sunday Territorian', 'Sunshine Coast', 'Toowoomba', 'Townsville Bulletin', 'PNG', 'Weekly Times') THEN 'Regionals'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Advertiser', 'Sunday Mail (SA)') THEN 'The Advertiser'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Australian') THEN 'The Australian'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Courier Mail', 'Sunday Mail (QLD)') THEN 'The Courier Mail'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('The Daily Telegraph', 'The Sunday Telegraph') THEN 'The Daily Telegraph'
    WHEN SAFE_CAST(t0.publication_name AS STRING) IN ('Herald Sun', 'Sunday Herald Sun') THEN 'The Herald Sun'
    ELSE 'Other'
  END) != 'Other'
GROUP BY
  publication_group
LIMIT 10;",SUM(Last_Year_Actual_Amount),measure,True,high,35,aca2f032-b796-49a2-89fe-781ca947aa33
total_records_count_os_circulation_202548,total_records_count_os,"Total Records Count (OS Data Load - Circulation, Week 202548)","The sum of records loaded from the OS source system, specifically for 'Circulation' source system and fiscal week '202548' on a given day.",ncau-data-newsquery-prd,finance_monthend_checks,v_os_data_load_check,"SELECT SUM(t0.records_count) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0 WHERE (t0.dw_prstn_load_datetime >= DATE '2025-06-04' AND t0.dw_prstn_load_datetime < DATETIME_ADD(DATE '2025-06-04', INTERVAL 1 DAY) AND t0.fiscal_week_id IN ('202548') AND t0.source_system_name IN ('Circulation'))",SUM(t0.records_count),aggregation,False,medium,36,2dfb1b58-42eb-44cb-b550-66469ae7df3c
distinct_scenarios_count_os_20250429,distinct_scenarios_count_os,Distinct Scenarios Count (OS Data Load - 2025-04-29),The count of unique scenarios observed in the OS data load for a specific day (2025-04-29).,ncau-data-newsquery-prd,finance_monthend_checks,v_os_data_load_check,"SELECT COUNT(DISTINCT t0.scenario) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_os_data_load_check` AS t0 WHERE (t0.dw_prstn_load_datetime >= DATE '2025-04-29' AND t0.dw_prstn_load_datetime < DATETIME_ADD(DATE '2025-04-29', INTERVAL 1 DAY))",COUNT(DISTINCT t0.scenario),aggregation,False,medium,36,2dfb1b58-42eb-44cb-b550-66469ae7df3c
total_rows_count_jde_20250429,total_rows_count_jde,Total Rows Count (JDE Data Load - 2025-04-29),"The sum of total rows loaded from the JDE source system, filtered by a specific partition date (2025-04-29).",ncau-data-newsquery-prd,finance_monthend_checks,v_jde_data_load_check,"SELECT SUM(t0.total_rows) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_jde_data_load_check` AS t0 WHERE (PARSE_DATE('%Y%m%d', SAFE_CAST(t0.partition_id AS STRING)) >= DATE '2025-04-29' AND PARSE_DATE('%Y%m%d', SAFE_CAST(t0.partition_id AS STRING)) <= DATE '2025-04-29')",SUM(t0.total_rows),aggregation,False,medium,36,2dfb1b58-42eb-44cb-b550-66469ae7df3c
total_actual_amount_raw,actual_amount,Total Actual Amount,The sum of actual revenue or financial amount.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(t0.Actual_Amount) AS total_actual_amount
FROM _BASE_QUERY_ AS t0
WHERE (t0.fy_year = 2026 AND t0.fy_year_week_number <= 202602 AND t0.publication_name NOT IN ('Weekly Times', 'Sunshine Coast', 'Mackay') AND t0.os_level_7 = 'All Sales Channels');",SUM(Actual_Amount),measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
total_volume_raw,volume,Total Volume,The sum of total circulation volume.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(t0.volume) AS total_volume
FROM _BASE_QUERY_ AS t0
WHERE (t0.fy_year = 2026 AND t0.fy_year_week_number <= 202602 AND t0.publication_name NOT IN ('Weekly Times', 'Sunshine Coast', 'Mackay') AND t0.os_level_7 = 'All Sales Channels');",SUM(volume),measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
total_actual_amount_k,actual_amount_k,Total Actual Amount (k),The sum of actual revenue or financial amount in thousands.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(SAFE_DIVIDE(t0.Actual_Amount, 1000)) AS total_actual_amount_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(SAFE_DIVIDE(Actual_Amount, 1000))",measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
total_volume_mf_k,volume_k,Total Volume (k) M-F,The sum of total circulation volume in thousands for Monday-Friday.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (CASE WHEN t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry') THEN 'M-F' WHEN t0.day_of_week = 'Sat' THEN 'SAT' WHEN t0.day_of_week = 'Sun' THEN 'SUN' ELSE NULL END = 'M-F') THEN SAFE_DIVIDE(t0.volume, 1000) ELSE NULL END) AS total_volume_mf_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'M-F') THEN SAFE_DIVIDE(volume, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
total_actual_amount_sat_k,actual_amount_k,Total Actual Amount (k) Saturday,The sum of actual revenue or financial amount in thousands for Saturday.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (CASE WHEN t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry') THEN 'M-F' WHEN t0.day_of_week = 'Sat' THEN 'SAT' WHEN t0.day_of_week = 'Sun' THEN 'SUN' ELSE NULL END = 'SAT') THEN SAFE_DIVIDE(t0.Actual_Amount, 1000) ELSE NULL END) AS total_actual_amount_sat_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SAT') THEN SAFE_DIVIDE(Actual_Amount, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
total_actual_amount_mf_k,actual_amount_k,Total Actual Amount (k) M-F,The sum of actual revenue or financial amount in thousands for Monday-Friday.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (CASE WHEN t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry') THEN 'M-F' WHEN t0.day_of_week = 'Sat' THEN 'SAT' WHEN t0.day_of_week = 'Sun' THEN 'SUN' ELSE NULL END = 'M-F') THEN SAFE_DIVIDE(t0.Actual_Amount, 1000) ELSE NULL END) AS total_actual_amount_mf_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'M-F') THEN SAFE_DIVIDE(Actual_Amount, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
total_actual_amount_sun_k,actual_amount_k,Total Actual Amount (k) Sunday,The sum of actual revenue or financial amount in thousands for Sunday.,ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (CASE WHEN t0.day_of_week IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Weekday Entry') THEN 'M-F' WHEN t0.day_of_week = 'Sat' THEN 'SAT' WHEN t0.day_of_week = 'Sun' THEN 'SUN' ELSE NULL END = 'SUN') THEN SAFE_DIVIDE(t0.Actual_Amount, 1000) ELSE NULL END) AS total_actual_amount_sun_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SUN') THEN SAFE_DIVIDE(Actual_Amount, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_actual_amount,actual_amount,Current Period Actual Amount,"Actual revenue/amount for the current fiscal week (FY2025, week 03).",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(t0.Actual_Amount) AS current_period_actual_amount
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );",SUM(Actual_Amount),measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount,budget_amount,Current Period Budget Amount,"Budgeted revenue/amount for the current fiscal week (FY2025, week 03).",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END) AS current_period_budget_amount
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END)",measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_all_channels,budget_amount,Current Period Budget Amount (All Sales Channels),"Budgeted revenue/amount for the current fiscal week (FY2025, week 03), specifically for 'ALL SALES CHANNELS'.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN (CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END) ELSE 0 END) AS current_period_budget_amount_all_channels
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN (CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END) ELSE 0 END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_k,budget_amount_k,Current Period Budget Amount (k),"Budgeted revenue/amount in thousands for the current fiscal week (FY2025, week 03).",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000)) AS current_period_budget_amount_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000))",measure,True,high,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_all_channels_k,budget_amount_k,"Current Period Budget Amount (All Sales Channels, k)","Budgeted revenue/amount in thousands for the current fiscal week (FY2025, week 03), specifically for 'ALL SALES CHANNELS'.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE 0 END) AS current_period_budget_amount_all_channels_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE 0 END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_sat_k,budget_amount_k,Current Period Budget Amount (k) Saturday,"Budgeted revenue/amount in thousands for the current fiscal week (FY2025, week 03), specifically for Saturday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'SAT') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) AS current_period_budget_amount_sat_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SAT') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_mf_k,budget_amount_k,Current Period Budget Amount (k) M-F,"Budgeted revenue/amount in thousands for the current fiscal week (FY2025, week 03), specifically for Monday-Friday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'M-F') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) AS current_period_budget_amount_mf_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'M-F') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_budget_amount_sun_k,budget_amount_k,Current Period Budget Amount (k) Sunday,"Budgeted revenue/amount in thousands for the current fiscal week (FY2025, week 03), specifically for Sunday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'SUN') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) AS current_period_budget_amount_sun_k
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SUN') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_actual_vs_budget_diff_mf,actual_vs_budget_diff,Current Period Actual vs Budget Difference (M-F),"The difference between current period actual amount (in thousands) and current period budgeted amount (in thousands, for all sales channels), specifically for Monday-Friday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'M-F') THEN (SAFE_DIVIDE(t0.Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END) AS current_period_actual_vs_budget_diff_mf
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'M-F') THEN (SAFE_DIVIDE(Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_actual_vs_budget_diff_sat,actual_vs_budget_diff,Current Period Actual vs Budget Difference (SAT),"The difference between current period actual amount (in thousands) and current period budgeted amount (in thousands, for all sales channels), specifically for Saturday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'SAT') THEN (SAFE_DIVIDE(t0.Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END) AS current_period_actual_vs_budget_diff_sat
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SAT') THEN (SAFE_DIVIDE(Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
current_period_actual_vs_budget_diff_sun,actual_vs_budget_diff,Current Period Actual vs Budget Difference (SUN),"The difference between current period actual amount (in thousands) and current period budgeted amount (in thousands, for all sales channels), specifically for Sunday.",ncau-data-newsquery-prd,asl_finance,v_asl_FCT_finance_os_aggregated,"WITH _BASE_QUERY_ AS (
  WITH
    OSandFACT AS (
      SELECT
        source_system_name,
        sub_source_system_name,
        CAST(fiscal_week_id AS int) AS fiscal_week_id,
        gl_publication_code,
        day_of_week,
        state,
        os_level_1,
        os_level_2,
        os_level_3,
        os_level_4,
        os_level_5,
        os_level_6,
        os_level_7,
        os_level_8,
        os_level_9,
        os_level_10,
        os_level_11,
        os_level_12,
        Estimate,
        True_Up_Adjustment,
        Actual_Amount,
        volume,
        Last_Year_Actual_Amount,
        Last_Year_volume,
        Budget_Draft_Amount,
        Budget_Draft_Volume,
        Budget_Amount,
        Budget_Volume,
        Forecast_Amount,
        Forecast_Volume,
        Budget_Jan_Amount,
        Budget_Jan_Volume,
        Budget_Feb_Amount,
        Budget_Feb_Volume,
        Budget_Mar_Amount,
        Budget_Mar_Volume,
        Budget_Apr_Amount,
        Budget_Apr_Volume,
        Budget_May_Amount,
        Budget_May_Volume,
        Budget_Jun_Amount,
        Budget_Jun_Volume,
        Budget_Jul_Amount,
        Budget_Jul_Volume,
        Budget_Aug_Amount,
        Budget_Aug_Volume,
        Budget_Sep_Amount,
        Budget_Sep_Volume,
        Budget_Oct_Amount,
        Budget_Oct_Volume,
        Budget_Nov_Amount,
        Budget_Nov_Volume,
        Budget_Dec_Amount,
        Budget_Dec_Volume,
        Forecast_Q1F_Amount,
        Forecast_Q1F_Volume,
        Forecast_Q2F_Amount,
        Forecast_Q2F_Volume,
        Forecast_Q3F_Amount,
        Forecast_Q3F_Volume,
        Forecast_Q4F_Amount,
        Forecast_Q4F_Volume,
        Forecast_Q5F_Amount,
        Forecast_Q5F_Volume,
        publication_name
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_FCT_finance_os_aggregated`
    ) AS os
    LEFT JOIN
    `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_os_publication_hierachy` AS pub
    ON os.gl_publication_code = pub.publication_code
    LEFT JOIN
    (
      SELECT DISTINCT
        CAST(c.fy_week_of_year AS int) AS fy_week_of_year,
        CAST(c.fy_year_week_number AS int) AS fy_year_week_number,
        CAST(c.fy_first_day_of_week AS date) AS fy_first_day_of_week,
        CAST(c.fy_last_day_of_week AS date) AS fy_last_day_of_week,
        CAST(c.fy_month_of_year AS int) AS fy_month_of_year,
        CAST(c.fy_year_month_number AS int) AS fy_year_month_number,
        CAST(c.relative_fisc_year_number AS int) AS relative_fisc_year_number,
        CAST(c.relative_fisc_week_number AS int) AS relative_fisc_week_number,
        c.fy_month_of_year_short_name,
        CASE
          WHEN c.fy_last_day_of_week = c.fy_last_day_of_month THEN 'Y'
          ELSE 'N'
        END AS month_end_flag,
        CAST(c.fy_quarter_of_year AS int) AS fy_quarter_of_year,
        CAST(c.fy_year AS int) AS fy_year,
        `current_timestamp`() AS extract_time
      FROM
        `ncau-data-newsquery-prd.asl_finance.v_asl_DIM_calendar` AS c
      JOIN
        `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_period_control AS control
        ON control.source_week_number = c.fy_year_week_number AND control.period_name IN ('CP', 'PY')
      WHERE
        1 = 1
    ) AS calendar
    ON os.fiscal_week_id = calendar.fy_year_week_number
    LEFT JOIN
    `ncau-data-newsquery-prd`.asl_finance.v_asl_DIM_gl_department AS dep
    ON os.os_level_12 = dep.department_code
  WHERE
    upper(os.os_level_6) = 'CIRCULATION'
    AND pub.l04_publication_code <> 'Free News & Lifestyle'
    AND pub.l06_publication_code NOT IN ('Food', 'Prestige')
    AND os.gl_hierarchy_code = 'FY2025'
)
SELECT SUM(CASE WHEN (UPPER(SAFE_CAST(t0.day_of_week AS STRING)) = 'SUN') THEN (SAFE_DIVIDE(t0.Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(t0.os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN t0.Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END) AS current_period_actual_vs_budget_diff_sun
FROM _BASE_QUERY_ AS t0
WHERE ( (CASE WHEN t0.os_level_10 IN ('Airlines', 'Hotels', 'Other Alternate', 'Other Alternate Channels') THEN 'Alternative Channels' WHEN t0.os_level_10 IN ('Petrol and Convenience') THEN 'Convenience Stores / Service Stations' WHEN t0.os_level_10 IN ('Agent & Dist') THEN 'Newsagencies' WHEN t0.os_level_10 IN ('Home Delivery', 'Roadside Delivery', 'Unspecified Print Sub') THEN 'Subscriptions' WHEN t0.os_level_10 IN ('Supermarkets') THEN 'Supermarkets' ELSE 'Unspec Channel' END) IN ('Convenience Stores / Service Stations', 'Supermarkets', 'Newsagencies') AND t0.fiscal_week_id = 202603 );","SUM(CASE WHEN (UPPER(SAFE_CAST(day_of_week AS STRING)) = 'SUN') THEN (SAFE_DIVIDE(Actual_Amount, 1000) - CASE WHEN (UPPER(SAFE_CAST(os_level_7 AS STRING)) = 'ALL SALES CHANNELS') THEN SAFE_DIVIDE(CASE WHEN (calendar.fy_week_of_year = (CASE WHEN ((EXTRACT(DAYOFWEEK FROM TIMESTAMP(DATE('2025-07-22'))) - 1)) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(DATE('2025-07-22') AS DATETIME), SAFE_CAST(DATETIME '2025-07-02T00:00:00' AS DATETIME), WEEK) END)) THEN Budget_Amount ELSE 0 END, 1000) ELSE NULL END) ELSE NULL END)",measure,False,medium,37,2104a3f5-9424-4087-a928-e67fecae789a
always_on_digital_sales_v_current_fy_week,always_on_digital_sales,Always-on Digital Sales (Current FY Week),Total sales from always-on digital channels for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Always_on_Digital_Sales_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Always_on_Digital_Sales_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
breach_sales_v_current_fy_week,breach_sales,Breach Sales (Current FY Week),Total sales related to breaches for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Breach_Sales_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Breach_Sales_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
closing_base_3rd_party_v_current_fy_week,closing_base_3rd_party,Closing Base 3rd Party (Current FY Week),The total closing base for 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Closing_Base_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
essentials_v_current_fy_week,essentials_sales,Essentials Sales (Current FY Week),Total sales from essential products/services for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Essentials_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Essentials_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
general_offer_sales_v_current_fy_week,general_offer_sales,General Offer Sales (Current FY Week),Total sales from general offers for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.General_Offer_Sales_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(General_Offer_Sales_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_cancels_v_current_fy_week,net_cancels,Net Cancels (Current FY Week),The net number of cancellations for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Cancels_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Cancels_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_3rd_party_v_current_fy_week,net_growth_3rd_party,Net Growth 3rd Party (Current FY Week),The net growth in 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_consumer_v_current_fy_week,net_growth_consumer,Net Growth Consumer (Current FY Week),The net growth in consumer subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_Consumer_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_Consumer_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_incl_3rd_party_v_current_fy_week,net_growth_incl_3rd_party,Net Growth incl. 3rd Party (Current FY Week),The net growth including 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_incl_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_incl_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
other_sales_v_current_fy_week,other_sales,Other Sales (Current FY Week),Total sales from other categories for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Other_Sales_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Other_Sales_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_3rd_party_v_current_fy_week,revenue_3rd_party,Revenue 3rd Party (Current FY Week),Total revenue generated from 3rd party sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_campus_v_current_fy_week,revenue_campus,Revenue Campus (Current FY Week),Total revenue generated from campus sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Campus_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Campus_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_consumer_v_current_fy_week,revenue_consumer,Revenue Consumer (Current FY Week),Total revenue generated from consumer sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Consumer_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Consumer_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_corp_v_current_fy_week,revenue_corp,Revenue Corp (Current FY Week),Total revenue generated from corporate sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Corp_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Corp_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_other_v_current_fy_week,revenue_other,Revenue Other (Current FY Week),Total revenue generated from other sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Other_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Other_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
switches_v_current_fy_week,switches,Switches (Current FY Week),Total number of switches for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Switches_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Switches_V),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_cancels_excluding_3rd_party_v_current_fy_week,total_cancels_excl_3rd_party,Total Cancels excluding 3rd Party (Current FY Week),Total cancellations excluding 3rd party for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Cancels_excluding_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Cancels_excluding_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_cancels_including_3rd_party_v_current_fy_week,total_cancels_incl_3rd_party,Total Cancels including 3rd Party (Current FY Week),Total cancellations including 3rd party for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Cancels_including_3rd_Party_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Cancels_including_3rd_Party_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_closing_base_v_current_fy_week,total_closing_base,Total Closing Base (Current FY Week),The total closing base for all subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Closing_Base_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Closing_Base_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_revenue_v_current_fy_week,total_revenue,Total Revenue (Current FY Week),Total revenue generated for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Revenue_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Revenue_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_weekly_sales_v_current_fy_week,total_weekly_sales,Total Weekly Sales (Current FY Week),Total sales for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Weekly_Sales_V) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Weekly_Sales_V),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
always_on_digital_sales_current_fy_week,always_on_digital_sales,Always-on Digital Sales (Current FY Week),Total sales from always-on digital channels for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Always_on_Digital_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Always_on_Digital_Sales),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
breach_sales_current_fy_week,breach_sales,Breach Sales (Current FY Week),Total sales related to breaches for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Breach_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Breach_Sales),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
closing_base_3rd_party_current_fy_week,closing_base_3rd_party,Closing Base 3rd Party (Current FY Week),The total closing base for 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Closing_Base_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
closing_base_3rd_party_apls_current_fy_week,closing_base_3rd_party_apls,Closing Base 3rd Party APLS (Current FY Week),The total closing base for 3rd party APLS subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Closing_Base_3rd_Party_APLS),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
closing_base_3rd_party_gpla_current_fy_week,closing_base_3rd_party_gpla,Closing Base 3rd Party GPLA (Current FY Week),The total closing base for 3rd party GPLA subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Closing_Base_3rd_Party_GPLA),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
closing_base_consumer_current_fy_week,closing_base_consumer,Closing Base Consumer (Current FY Week),The total closing base for consumer subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Closing_Base_Consumer) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Closing_Base_Consumer),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
essentials_current_fy_week,essentials_sales,Essentials Sales (Current FY Week),Total sales from essential products/services for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Essentials) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Essentials),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
failed_payment_volume_current_fy_week,failed_payment_volume,Failed Payment Volume (Current FY Week),Total volume of failed payments for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Failed_Payment_Volume) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Failed_Payment_Volume),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
general_offer_sales_current_fy_week,general_offer_sales,General Offer Sales (Current FY Week),Total sales from general offers for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.General_Offer_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(General_Offer_Sales),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_cancels_current_fy_week,net_cancels,Net Cancels (Current FY Week),The net number of cancellations for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Cancels) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Cancels),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_3rd_party_current_fy_week,net_growth_3rd_party,Net Growth 3rd Party (Current FY Week),The net growth in 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_3rd_party_apls_current_fy_week,net_growth_3rd_party_apls,Net Growth 3rd Party APLS (Current FY Week),The net growth in 3rd party APLS subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_3rd_Party_APLS),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_3rd_party_gpla_current_fy_week,net_growth_3rd_party_gpla,Net Growth 3rd Party GPLA (Current FY Week),The net growth in 3rd party GPLA subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_3rd_Party_GPLA),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_consumer_current_fy_week,net_growth_consumer,Net Growth Consumer (Current FY Week),The net growth in consumer subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_Consumer) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_Consumer),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
net_growth_incl_3rd_party_current_fy_week,net_growth_incl_3rd_party,Net Growth incl. 3rd Party (Current FY Week),The net growth including 3rd party subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Net_Growth_incl_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Net_Growth_incl_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
other_sales_current_fy_week,other_sales,Other Sales (Current FY Week),Total sales from other categories for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Other_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Other_Sales),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_3rd_party_current_fy_week,revenue_3rd_party,Revenue 3rd Party (Current FY Week),Total revenue generated from 3rd party sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_3rd_party_apls_current_fy_week,revenue_3rd_party_apls,Revenue 3rd Party APLS (Current FY Week),Total revenue generated from 3rd party APLS sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_3rd_Party_APLS),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_3rd_party_gpla_current_fy_week,revenue_3rd_party_gpla,Revenue 3rd Party GPLA (Current FY Week),Total revenue generated from 3rd party GPLA sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_3rd_Party_GPLA),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_campus_current_fy_week,revenue_campus,Revenue Campus (Current FY Week),Total revenue generated from campus sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Campus) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Campus),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_consumer_current_fy_week,revenue_consumer,Revenue Consumer (Current FY Week),Total revenue generated from consumer sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Consumer) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Consumer),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_corp_current_fy_week,revenue_corp,Revenue Corp (Current FY Week),Total revenue generated from corporate sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Corp) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Corp),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
revenue_other_current_fy_week,revenue_other,Revenue Other (Current FY Week),Total revenue generated from other sources for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Revenue_Other) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Revenue_Other),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
switches_current_fy_week,switches,Switches (Current FY Week),Total number of switches for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Switches) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Switches),measure,False,medium,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_cancels_excluding_3rd_party_current_fy_week,total_cancels_excl_3rd_party,Total Cancels excluding 3rd Party (Current FY Week),Total cancellations excluding 3rd party for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Cancels_excluding_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Cancels_excluding_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_cancels_including_3rd_party_current_fy_week,total_cancels_incl_3rd_party,Total Cancels including 3rd Party (Current FY Week),Total cancellations including 3rd party for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Cancels_including_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Cancels_including_3rd_Party),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_closing_base_current_fy_week,total_closing_base,Total Closing Base (Current FY Week),The total closing base for all subscriptions/accounts for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Closing_Base) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Closing_Base),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_revenue_current_fy_week,total_revenue,Total Revenue (Current FY Week),Total revenue generated for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Revenue) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Revenue),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
total_weekly_sales_current_fy_week,total_weekly_sales,Total Weekly Sales (Current FY Week),Total sales for the current fiscal week.,ncau-data-newsquery-prd,asl_finance_derived,consumer_masthead_scorecard,SELECT SUM(t0.Total_Weekly_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_masthead_scorecard` AS t0 WHERE t0.fy_year = 2025 AND t0.fy_week_of_year = 37 LIMIT 2000001;,SUM(Total_Weekly_Sales),measure,True,high,38,57d87efe-c112-4d42-be1b-045f0c8ca73e
allocated_revenue_gst_exclusive_prorated,allocated_revenue_gst_exclusive,"Allocated Revenue (GST Exclusive, Prorated)","The portion of payment base amount allocated to revenue for a specific period, excluding GST, calculated on a prorated daily basis based on the allocation start and end dates.",ncau-data-newsquery-sit,qvr_consumer,fin_unearned_revenue_recurring,"SELECT
  SUM(((date_diff(least(t0.allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(t0.allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / t0.installment_allocation_days * t0.payment_base_amount) / 1.1) AS allocated_revenue_gst_exclusive_prorated
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring` AS t0
WHERE
  PARSE_DATE(""%Y%m%d"", @DS_START_DATE) BETWEEN t0.allocation_start_date AND t0.allocation_end_date OR (t0.allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE)) OR (t0.allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE))","SUM(((date_diff(least(allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / installment_allocation_days * payment_base_amount) / 1.1)",measure,True,high,39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
allocated_revenue_gst_exclusive_prorated_rounded,allocated_revenue_gst_exclusive,"Allocated Revenue (GST Exclusive, Prorated, Rounded)","The portion of payment base amount allocated to revenue for a specific period, excluding GST, calculated on a prorated daily basis and rounded to 2 decimal places.",ncau-data-newsquery-sit,qvr_consumer,fin_unearned_revenue_recurring,"SELECT
  SUM(round(((date_diff(least(t0.allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(t0.allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / t0.installment_allocation_days * t0.payment_base_amount) / 1.1, 2)) AS allocated_revenue_gst_exclusive_prorated_rounded
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring` AS t0
WHERE
  PARSE_DATE(""%Y%m%d"", @DS_START_DATE) BETWEEN t0.allocation_start_date AND t0.allocation_end_date OR (t0.allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE)) OR (t0.allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE))","SUM(round(((date_diff(least(allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / installment_allocation_days * payment_base_amount) / 1.1, 2))",measure,True,high,39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
allocated_revenue_gst_inclusive_prorated,allocated_revenue_gst_inclusive,"Allocated Revenue (GST Inclusive, Prorated)","The portion of payment base amount allocated to revenue for a specific period, including GST, calculated on a prorated daily basis based on the allocation start and end dates.",ncau-data-newsquery-sit,qvr_consumer,fin_unearned_revenue_recurring,"SELECT
  SUM((date_diff(least(t0.allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(t0.allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / t0.installment_allocation_days * t0.payment_base_amount) AS allocated_revenue_gst_inclusive_prorated
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring` AS t0
WHERE
  PARSE_DATE(""%Y%m%d"", @DS_START_DATE) BETWEEN t0.allocation_start_date AND t0.allocation_end_date OR (t0.allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE)) OR (t0.allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
    @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE))","SUM((date_diff(least(allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)), greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)), day) + 1) / installment_allocation_days * payment_base_amount)",measure,False,medium,39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
record_count_unearned_revenue,record_count,Record Count (Unearned Revenue),"The total number of records or transactions related to unearned revenue, often filtered by specific criteria like rate plan or masthead.",ncau-data-newsquery-sit,qvr_consumer,fin_unearned_revenue_recurring,"SELECT
  COUNT(1) AS record_count_unearned_revenue
FROM
  (
    WITH
      core AS (
        SELECT
          *,
          greatest(allocation_start_date, PARSE_DATE(""%Y%m%d"", @DS_START_DATE)) AS week_prorata_allocation_start,
          least(allocation_end_date, PARSE_DATE(""%Y%m%d"", @DS_END_DATE)) AS week_prorata_allocation_end
        FROM
          `ncau-data-newsquery-sit.qvr_consumer.fin_unearned_revenue_recurring`
        WHERE
          PARSE_DATE(""%Y%m%d"", @DS_START_DATE) BETWEEN allocation_start_date AND allocation_end_date OR (allocation_start_date BETWEEN PARSE_DATE(""%Y%m%d"",
            @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE)) OR (allocation_end_date BETWEEN PARSE_DATE(""%Y%m%d"",
            @DS_START_DATE) AND PARSE_DATE(""%Y%m%d"", @DS_END_DATE))
      ),
      core_2 AS (
        SELECT
          * EXCEPT (should_be_allocated_to_revenue_gst_inclusive, should_be_allocated_to_revenue, fy_week_of_year,
          fy_year, allocation_end_date_ext),
          (date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount AS should_be_allocated_to_revenue_gst_inclusive,
          ((date_diff(week_prorata_allocation_end, week_prorata_allocation_start, day) + 1) / installment_allocation_days *
          payment_base_amount) / 1.1 AS should_be_allocated_to_revenue_gst_exclusive
        FROM
          core
      )
    SELECT
      * FROM core_2
  ) AS t0",COUNT(1),measure,False,low,39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
total_payment_base_amount_latest_attempt,total_payment_base_amount,Total Payment Base Amount (Latest Attempt),"The sum of the base payment amounts for transactions marked as the latest attempt, typically used for understanding raw payment volume before allocation.",ncau-data-newsquery-sit,qvr_consumer,fp_all_trans,"SELECT
  SUM(t0.payment_base_amount) AS total_payment_base_amount_latest_attempt
FROM
  `ncau-data-newsquery-sit.qvr_consumer.fp_all_trans` AS t0
  JOIN
  (
    WITH
      contracts_in_scope_active_and_cancelled AS (
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND subscription_status_code =
          'active'
        UNION ALL
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id
        FROM
          `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_movement`
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND subscription_movement_count_type =
          'cancellation' AND report_date > '2022-07-01'
      ),
      contracts_in_scope_active_cancelled_inactivenotcancelled AS (
        SELECT
          *
        FROM
          contracts_in_scope_active_and_cancelled
        UNION ALL
        SELECT DISTINCT
          dw_subscription_id,
          dw_rate_plan_id
        FROM
          (
            SELECT
              *,
              row_number() OVER (PARTITION BY dw_subscription_id, dw_rate_plan_id
                ORDER BY date(dw_effective_start_datetime) DESC) AS xrank
            FROM
              `ncau-data-newsquery-prd.prstn_consumer_views.v_subscription_base`
          )
        WHERE
          offer_category_group_name = 'Contract' AND lower(offer_category_name) NOT LIKE '%upfront%' AND dw_subscription_id NOT IN
          (
            SELECT DISTINCT
              dw_subscription_id
            FROM
              contracts_in_scope_active_and_cancelled
          ) AND xrank = 1
      )
    SELECT
      dw_subscription_id, dw_rate_plan_id
    FROM
      contracts_in_scope_active_cancelled_inactivenotcancelled
  ) AS b
  ON t0.dw_subscription_id = b.dw_subscription_id AND t0.dw_rate_plan_id = b.dw_rate_plan_id
WHERE
  t0.latest_attempt_flag = 'Y'",SUM(payment_base_amount),measure,False,medium,39,be4575e4-3850-46e2-9ba9-73a4393c5d2a
data_load_datetime_truncated_fy24_25,data_load_datetime_truncated,"Data Load Datetime (Truncated, FY24-25)","The timestamp when data was loaded, truncated to the second, filtered for financial years 2024 and 2025.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT DATETIME_TRUNC(t0.data_load_datetime, SECOND) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year IN ('2024', '2025')","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
data_load_datetime_truncated_fy25,data_load_datetime_truncated,"Data Load Datetime (Truncated, FY25)","The timestamp when data was loaded, truncated to the second, filtered for financial year 2025.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT DATETIME_TRUNC(t0.data_load_datetime, SECOND) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year IN ('2025')","DATETIME_TRUNC(data_load_datetime, SECOND)",dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
gross_revenue_amount_sum_fy25_travel_services,gross_revenue_amount_sum,"Gross Revenue Amount (FY25, Travel Services)",The sum of gross revenue amount for financial year 2025 and 'Travel Services' industry pillar.,ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT SUM(t0.gross_revenue_amount) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year = '2025' AND t0.nca_industry_pillar = 'Travel Services',SUM(gross_revenue_amount),measure,True,high,40,f502f44a-e283-405f-ab8f-6a641edb4194
financial_month_float_fy25_travel_services,financial_month_float,"Financial Month (Float, FY25, Travel Services)","The financial month, cast to a float, for financial year 2025 and 'Travel Services' industry pillar.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT DISTINCT SAFE_CAST(t0.financial_month AS FLOAT64) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year = '2025' AND t0.nca_industry_pillar = 'Travel Services',SAFE_CAST(financial_month AS FLOAT64),dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
booking_number_fy25_travel_services,booking_number,"Booking Number (FY25, Travel Services)","Unique identifier for bookings, filtered for financial year 2025 and 'Travel Services' industry pillar.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT DISTINCT t0.booking_number FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year = '2025' AND t0.nca_industry_pillar = 'Travel Services',booking_number,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
financial_year_fy25_travel_services,financial_year,"Financial Year (FY25, Travel Services)","The financial year, filtered for 2025 and 'Travel Services' industry pillar.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT DISTINCT t0.financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year = '2025' AND t0.nca_industry_pillar = 'Travel Services',financial_year,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
revenue_type_fy25_travel_services,revenue_type,"Revenue Type (FY25, Travel Services)","The type of revenue, filtered for financial year 2025 and 'Travel Services' industry pillar.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,SELECT DISTINCT t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.financial_year = '2025' AND t0.nca_industry_pillar = 'Travel Services',revenue_type,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
unified_publication_name_filtered,unified_publication_name,Unified Publication Name (Filtered),"The name of the unified publication, excluding a specific list of administrative or irrelevant entries.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",unified_publication_name,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
unified_publication_name_archive_filtered_fy24_25,unified_publication_name,"Unified Publication Name (Archive, Filtered, FY24-25)","The name of the unified publication from the archive table, excluding a specific list of administrative or irrelevant entries, filtered for financial years 2024 and 2025.",ncau-data-newsquery-prd,asl_finance_derived_archive,details_dashboard_archive_FY25_T,"SELECT DISTINCT t0.unified_publication_name FROM `ncau-data-newsquery-prd.asl_finance_derived_archive.details_dashboard_archive_FY25_T` AS t0 WHERE t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly') AND t0.financial_year IN ('2024', '2025')",unified_publication_name,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
gross_revenue_amount_sum_fy24_digital_filtered,gross_revenue_amount_sum,"Gross Revenue Amount (FY24, Digital, Filtered Ad Type & Publication)","The sum of gross revenue amount for financial year 2024, revenue type 'DIGITAL', excluding specific ad types and unified publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT SUM(t0.gross_revenue_amount) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.revenue_type = 'DIGITAL' AND t0.financial_year = '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",SUM(gross_revenue_amount),measure,True,high,40,f502f44a-e283-405f-ab8f-6a641edb4194
financial_month_float_fy24_digital_filtered,financial_month_float,"Financial Month (Float, FY24, Digital, Filtered Ad Type & Publication)","The financial month, cast to a float, for financial year 2024, revenue type 'DIGITAL', excluding specific ad types and unified publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT SAFE_CAST(t0.financial_month AS FLOAT64) FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.revenue_type = 'DIGITAL' AND t0.financial_year = '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",SAFE_CAST(financial_month AS FLOAT64),dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
booking_number_fy24_digital_filtered,booking_number,"Booking Number (FY24, Digital, Filtered Ad Type & Publication)","Unique identifier for bookings, filtered for financial year 2024, revenue type 'DIGITAL', excluding specific ad types and unified publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT t0.booking_number FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.revenue_type = 'DIGITAL' AND t0.financial_year = '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",booking_number,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
financial_year_fy24_digital_filtered,financial_year,"Financial Year (FY24, Digital, Filtered Ad Type & Publication)","The financial year, filtered for 2024, revenue type 'DIGITAL', excluding specific ad types and unified publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT t0.financial_year FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.revenue_type = 'DIGITAL' AND t0.financial_year = '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",financial_year,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
fin_adtype_name_fy24_digital_filtered,fin_adtype_name,"Financial Ad Type Name (FY24, Digital, Filtered Ad Type & Publication)","The financial ad type name, filtered for financial year 2024, revenue type 'DIGITAL', excluding specific ad types and unified publication names.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT DISTINCT t0.fin_adtype_name FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0 WHERE t0.revenue_type = 'DIGITAL' AND t0.financial_year = '2024' AND t0.fin_adtype_name NOT IN ('Xtend', 'Unruly (Non-Targeted)', 'Taboola', 'SUDDENLY (Non-Targeted)', 'Finda', 'Events (Non-Targeted)', 'Edmedia', 'Display', 'Creatives', 'Classified', '-') AND t0.unified_publication_name NOT IN ('Admin.ADV', 'Admin.DTM', 'Admin.HWT', 'Admin.Sales', 'Admin.Sport', 'Admin.TCM', 'Bestrecipes.Admin', 'CodeBet', 'CODE', 'null', 'Digital Subscription_NTN', 'Digital Subscription_TWM', 'Delicious.admin', 'ECOMMERCE.BODYANDSOUL', 'ECOMMERCE.VOGUE', 'EdMedia', 'Escape eCommerce', 'Escape.Admin', 'RACENET', 'SKYNEWS.ADMIN', 'Sky News', 'Stellar.Admin', 'TAUS.STOCKHEAD', 'TAUS.ADMIN', 'TOOWOOMBACUSTOM', 'Taboola', 'Taste.Admin', 'Unknown', 'Vogue.Admin', 'Vogueliving.Admin', 'Xtend', 'eCommerce.GQ', 'eCommerce.Kidspot', 'eCommerce', 'odds.com.au', 'Digital Subscription_NQN', 'Digital Subscription_CNS', 'Bodyandsoul.Admin', 'eCommerce.Delicious', 'ECOMMERCE.VOGUELIVING', 'eCommerce.Taste', 'GQ.Admin', 'Kidspot.Admin', 'News.Admin', 'Rea.Audience', 'Rea.Content', 'Punters.com.au', 'Unruly')",fin_adtype_name,dimension,False,medium,40,f502f44a-e283-405f-ab8f-6a641edb4194
total_tm1_amount_jul_2026,total_tm1_amount,Total TM1 Amount (Jul 2026),"The total amount from the TM1 financial system for July 2026, filtered for numeric publication codes. Used for reconciliation against Tableau actuals.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_expenses,"SELECT SUM(TM1_Amount) AS total_tm1_amount FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` WHERE fiscal_year = 2026 AND month_short_name = 'Jul' AND SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$')",SUM(TM1_Amount),aggregation,True,high,41,f353b933-30eb-4853-9976-0d35371db7d7
total_tableau_actual_amount_jul_2026,total_tableau_actual_amount,Total Tableau Actual Amount (Jul 2026),"The total actual amount from Tableau for July 2026, filtered for numeric publication codes. Used for reconciliation against TM1 amounts.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_expenses,"SELECT SUM(Tableau_Actual_Amount) AS total_tableau_actual_amount FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` WHERE fiscal_year = 2026 AND month_short_name = 'Jul' AND SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$')",SUM(Tableau_Actual_Amount),aggregation,True,high,41,f353b933-30eb-4853-9976-0d35371db7d7
total_absolute_variance_tm1_tableau_jul_2026,total_absolute_variance_tm1_tableau,Total Absolute Variance (TM1 vs Tableau) (Jul 2026),"The sum of the absolute differences between Tableau Actual Amount and TM1 Amount for July 2026, filtered for numeric publication codes. This metric quantifies the total discrepancy between the two systems.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_expenses,"SELECT SUM(ABS(Tableau_Actual_Amount - TM1_Amount)) AS total_abs_variance FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` WHERE fiscal_year = 2026 AND month_short_name = 'Jul' AND SAFE.REGEXP_CONTAINS(publication_code, '^(^[0-9]+$)$')",SUM(ABS(Tableau_Actual_Amount - TM1_Amount)),calculated_field,True,high,41,f353b933-30eb-4853-9976-0d35371db7d7
os_level_6_dimension_feb_2025,os_level_6,Operating System Level 6 (Feb 2025 Filter),"A key organizational dimension (Operating System Level 6) used for grouping and filtering data, specifically queried for February 2025.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_expenses,SELECT DISTINCT os_level_6 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` WHERE fiscal_year = 2025 AND month_short_name = 'Feb',os_level_6,dimension,False,medium,41,f353b933-30eb-4853-9976-0d35371db7d7
no_time_volume_sc,no_time_volume,No Time Volume (SuperCoach Plus),"Volume of sales or transactions without a specified time period, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.No_Time_Volume) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(No_Time_Volume),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
failed_payment_volume_sc,failed_payment_volume,Failed Payment Volume (SuperCoach Plus),"Volume of failed payments, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Failed_Payment_Volume) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Failed_Payment_Volume),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
price_volume_sc,price_volume,Price Volume (SuperCoach Plus),"Volume related to pricing adjustments or specific price points, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Price_Volume) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Price_Volume),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
total_cancels_sc,total_cancels,Total Cancels (SuperCoach Plus),"Total number of cancellations, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Total_Cancels) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Total_Cancels),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
revenue_3rd_party_gpla_sc,revenue_3rd_party_gpla,3rd Party GPLA Revenue (SuperCoach Plus),"Revenue from 3rd party sources via GPLA (Google Play Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Revenue_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Revenue_3rd_Party_GPLA),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
total_revenue_sc,total_revenue,Total Revenue (SuperCoach Plus),"Overall total revenue generated, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Total_Revenue) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Total_Revenue),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
closing_base_3rd_party_sc,closing_base_3rd_party,Closing Base 3rd Party (SuperCoach Plus),"Number of 3rd party subscribers/users at the end of the period, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Closing_Base_3rd_Party),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
closing_base_3rd_party_apls_sc,closing_base_3rd_party_apls,Closing Base 3rd Party APLS (SuperCoach Plus),"Number of 3rd party subscribers/users via APLS (Apple App Store) at the end of the period, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Closing_Base_3rd_Party_APLS),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
closing_base_3rd_party_gpla_sc,closing_base_3rd_party_gpla,Closing Base 3rd Party GPLA (SuperCoach Plus),"Number of 3rd party subscribers/users via GPLA (Google Play Store) at the end of the period, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Closing_Base_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Closing_Base_3rd_Party_GPLA),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
total_closing_base_sc,total_closing_base,Total Closing Base (SuperCoach Plus),"Total number of subscribers/users at the end of the period, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Total_Closing_Base) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Total_Closing_Base),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
net_growth_incl_3rd_party_sc,net_growth_incl_3rd_party,Net Growth incl. 3rd Party (SuperCoach Plus),"Net growth in subscribers/users including 3rd party sources, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Net_Growth_incl_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Net_Growth_incl_3rd_Party),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
net_growth_3rd_party_sc,net_growth_3rd_party,Net Growth 3rd Party (SuperCoach Plus),"Net growth in 3rd party subscribers/users, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Net_Growth_3rd_Party),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
net_growth_3rd_party_apls_sc,net_growth_3rd_party_apls,Net Growth 3rd Party APLS (SuperCoach Plus),"Net growth in 3rd party subscribers/users via APLS (Apple App Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Net_Growth_3rd_Party_APLS),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
net_growth_3rd_party_gpla_sc,net_growth_3rd_party_gpla,Net Growth 3rd Party GPLA (SuperCoach Plus),"Net growth in 3rd party subscribers/users via GPLA (Google Play Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Net_Growth_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Net_Growth_3rd_Party_GPLA),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
breach_sales_sc,breach_sales,Breach Sales (SuperCoach Plus),"Sales related to breaches or specific non-standard events, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Breach_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Breach_Sales),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
always_on_digital_sales_sc,always_on_digital_sales,Always-on Digital Sales (SuperCoach Plus),"Sales from always-on digital channels, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Always_on_Digital_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Always_on_Digital_Sales),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
general_offer_sales_sc,general_offer_sales,General Offer Sales (SuperCoach Plus),"Sales from general offers, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.General_Offer_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(General_Offer_Sales),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
other_sales_sc,other_sales,Other Sales (SuperCoach Plus),"Sales from other miscellaneous sources, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Other_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Other_Sales),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
acquisition_3rd_party_sc,acquisition_3rd_party,3rd Party Acquisition (SuperCoach Plus),"Number of acquisitions from 3rd party sources, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Acquisition_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Acquisition_3rd_Party),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
acquisition_3rd_party_apls_sc,acquisition_3rd_party_apls,3rd Party Acquisition APLS (SuperCoach Plus),"Number of acquisitions from 3rd party sources via APLS (Apple App Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Acquisition_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Acquisition_3rd_Party_APLS),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
acquisition_3rd_party_gpla_sc,acquisition_3rd_party_gpla,3rd Party Acquisition GPLA (SuperCoach Plus),"Number of acquisitions from 3rd party sources via GPLA (Google Play Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Acquisition_3rd_Party_GPLA) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Acquisition_3rd_Party_GPLA),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
total_weekly_sales_sc,total_weekly_sales,Total Weekly Sales (SuperCoach Plus),"Total sales recorded on a weekly basis, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Total_Weekly_Sales) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Total_Weekly_Sales),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
switches_sc,switches,Switches (SuperCoach Plus),"Number of switches or changes in subscription/product, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Switches) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Switches),measure,False,medium,42,61cc5171-703d-44b5-acd7-e9db7cf81778
net_cancels_sc,net_cancels,Net Cancels (SuperCoach Plus),"Net number of cancellations (cancellations minus reactivations), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Net_Cancels) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Net_Cancels),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
revenue_3rd_party_sc,revenue_3rd_party,3rd Party Revenue (SuperCoach Plus),"Revenue generated from all 3rd party sources, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Revenue_3rd_Party) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Revenue_3rd_Party),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
revenue_3rd_party_apls_sc,revenue_3rd_party_apls,3rd Party APLS Revenue (SuperCoach Plus),"Revenue from 3rd party sources via APLS (Apple App Store), filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT SUM(t0.Revenue_3rd_Party_APLS) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',SUM(Revenue_3rd_Party_APLS),measure,True,high,42,61cc5171-703d-44b5-acd7-e9db7cf81778
row_count_sc,row_count,Row Count (SuperCoach Plus),"Number of records/rows for the given fiscal week/year, filtered for SuperCoach Plus masthead.",ncau-data-newsquery-prd,asl_finance_derived,consumer_deepniche_scorecard,SELECT COUNT(*) FROM `ncau-data-newsquery-prd.asl_finance_derived.consumer_deepniche_scorecard` AS t0 WHERE (CASE WHEN (t0.masthead = 'SC') THEN 'SuperCoach Plus' WHEN (t0.masthead = 'CS') THEN 'Code Sports' WHEN (t0.masthead = 'AP') THEN 'Apple Podcast: Crime X' WHEN (t0.masthead = 'TS') THEN 'Taste Online' WHEN (t0.masthead = 'PU') THEN 'Punters' WHEN (t0.masthead = 'RN') THEN 'Racenet' WHEN (t0.masthead = 'KTVSport') THEN 'KTVSport' ELSE NULL END) = 'SuperCoach Plus',COUNT(*),aggregation,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
fiscal_week_of_year,fiscal_week_of_year,Fiscal Week of Year,The fiscal week number within the fiscal year.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT t0c0d2.fy_week_of_year FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,fy_week_of_year,dimension,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
fiscal_year,fiscal_year,Fiscal Year,The fiscal year.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT t0c0d2.fy_year FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,fy_year,dimension,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
isoweek_start_date,isoweek_start_date,ISO Week Start Date,The start date of the ISO week for a given calendar date.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,"SELECT SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(t0c0d2.calendar_date AS DATETIME), ISOWEEK) AS DATE) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1","SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(calendar_date AS DATETIME), ISOWEEK) AS DATE)",dimension,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
current_week_offset_param,current_week_offset_param,Current Week Offset Parameter,"A calculated parameter representing a week offset, likely used for relative date calculations. This value is derived from a fixed date and date differences.",ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT 52 FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,"(CASE WHEN (EXTRACT(DAYOFWEEK FROM TIMESTAMP(clmn4_)) - 1) <= 2 THEN (DATETIME_DIFF(SAFE_CAST(clmn4_ AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) - 1) ELSE DATETIME_DIFF(SAFE_CAST(clmn4_ AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK) END)",calculated_field,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
current_period_weekly_flag,current_period_flag,Current Period Weekly Flag,Boolean flag indicating if the current fiscal week/year matches the 'current' week/year as defined by dashboard parameters (when 'Weekly' view is selected).,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (t0c0d2.fy_week_of_year = 52 AND t0c0d2.fy_year = 2024) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,(fy_week_of_year = current_week_offset AND fy_year = current_year),filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
current_period_date_range_flag,current_period_flag,Current Period Date Range Flag,Boolean flag indicating if the current fiscal week/year falls within the 'current' year-to-date range as defined by dashboard parameters (when 'Date Range' view is selected).,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (t0c0d2.fy_week_of_year >= 1 AND t0c0d2.fy_week_of_year <= 52 AND t0c0d2.fy_year = 2024) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,(fy_week_of_year >= 1 AND fy_week_of_year <= current_week_offset AND fy_year = current_year),filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
current_year_weekly_flag,current_year_flag,Current Year Weekly Flag,Boolean flag indicating if the current fiscal week/year matches the 'current' week of 2025 (when 'Weekly' view is selected).,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (t0c0d2.fy_week_of_year = 52 AND t0c0d2.fy_year = 2025) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,(fy_week_of_year = current_week_offset AND fy_year = 2025),filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
current_year_date_range_flag,current_year_flag,Current Year Date Range Flag,Boolean flag indicating if the current fiscal week/year falls within the 2025 year-to-date range as defined by dashboard parameters (when 'Date Range' view is selected).,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (t0c0d2.fy_week_of_year >= 1 AND t0c0d2.fy_week_of_year <= 52 AND t0c0d2.fy_year = 2025) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,(fy_week_of_year >= 1 AND fy_week_of_year <= current_week_offset AND fy_year = 2025),filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
comparison_period_flag,comparison_period_flag,Comparison Period Flag,"A complex boolean flag for defining a comparison period, based on current week offset and various fiscal year/week conditions.",ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (CASE WHEN (52 <= 5) THEN ((t0c0d2.fy_year = 2025 AND t0c0d2.fy_week_of_year <= 52) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 48) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 49) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 51) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 52)) ELSE (t0c0d2.fy_year = 2025 AND t0c0d2.fy_week_of_year <= 52 AND t0c0d2.fy_week_of_year >= (52 - 5)) END) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,CASE WHEN (current_week_offset <= 5) THEN ( (fy_year = 2025 AND fy_week_of_year <= current_week_offset) OR (fy_year = current_year AND fy_week_of_year >= 48) OR (fy_year = current_year AND fy_week_of_year >= 49) OR (fy_year = current_year AND fy_week_of_year >= 51) OR (fy_year = current_year AND fy_week_of_year >= 52) ) ELSE (fy_year = 2025 AND fy_week_of_year <= current_week_offset AND fy_week_of_year >= (current_week_offset - 5)) END,filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
period_selection_flag,period_selection_flag,Period Selection Flag,A boolean flag that selects between weekly or date range comparison periods based on a dashboard parameter.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT (CASE WHEN ('Weekly' = 'Weekly') THEN ((CASE WHEN (52 <= 5) THEN ((t0c0d2.fy_year = 2025 AND t0c0d2.fy_week_of_year <= 52) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 48) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 49) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 51) OR (t0c0d2.fy_year = 2024 AND t0c0d2.fy_week_of_year >= 52)) ELSE (t0c0d2.fy_year = 2025 AND t0c0d2.fy_week_of_year <= 52 AND t0c0d2.fy_week_of_year >= (52 - 5)) END) = TRUE) WHEN ('Weekly' = 'Date Range') THEN (t0c0d2.fy_week_of_year >= 1 AND t0c0d2.fy_week_of_year <= 52 AND t0c0d2.fy_year >= 2025 AND t0c0d2.fy_year <= 2025) ELSE NULL END) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,CASE WHEN ('Weekly' = 'Weekly') THEN (comparison_period_flag = TRUE) WHEN ('Weekly' = 'Date Range') THEN (current_year_date_range_flag) ELSE NULL END,filter,False,low,42,61cc5171-703d-44b5-acd7-e9db7cf81778
total_ledger_revenue_npv_positive_offset,total_ledger_revenue,Total Ledger Revenue (NPV & Positive Offset),"The sum of Ledger Revenue (LGR) for entries where either the Current PV Flag (CURR_PV_FLAG) or Same-as-Last-Year PV Flag (STLY_PV_FLAG) is 'NPV', the relative fiscal year month offset (relative_fy_month_offset) is non-negative (current or future months), and the LGR value is not zero. This represents the core revenue metric for the 'Unmapped Revenue NPV' dashboard.",ncau-data-newsquery-prd,asl_finance_derived,adsales_npv,"SELECT SUM(SAFE_CAST(t0.LGR AS BIGNUMERIC)) AS total_ledger_revenue
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
WHERE ((SAFE_CAST(t0.CURR_PV_FLAG AS STRING) = 'NPV' OR SAFE_CAST(t0.STLY_PV_FLAG AS STRING) = 'NPV')
AND SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC) >= 0
AND SAFE_CAST(t0.LGR AS BIGNUMERIC) != 0.000000)
LIMIT 1;",SUM(t0.LGR),measure,True,high,43,7ada02b8-e93e-41d8-9a7e-05013ff81247
sum_relative_fy_month_offset_npv_positive_offset,sum_relative_fy_month_offset,Sum of Relative FY Month Offset (NPV & Positive Offset),"The sum of the `relative_fy_month_offset` for entries where either the Current PV Flag (CURR_PV_FLAG) or Same-as-Last-Year PV Flag (STLY_PV_FLAG) is 'NPV', the relative fiscal year month offset is non-negative (current or future months), and the LGR value is not zero. This is likely used for internal calculations, weighting, or data integrity checks rather than a direct business performance metric.",ncau-data-newsquery-prd,asl_finance_derived,adsales_npv,"SELECT SUM(SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC)) AS sum_relative_fy_month_offset
FROM `ncau-data-newsquery-prd.asl_finance_derived.adsales_npv` AS t0
WHERE ((SAFE_CAST(t0.CURR_PV_FLAG AS STRING) = 'NPV' OR SAFE_CAST(t0.STLY_PV_FLAG AS STRING) = 'NPV')
AND SAFE_CAST(t0.relative_fy_month_offset AS BIGNUMERIC) >= 0
AND SAFE_CAST(t0.LGR AS BIGNUMERIC) != 0.000000)
LIMIT 1;",SUM(t0.relative_fy_month_offset),aggregation,False,low,43,7ada02b8-e93e-41d8-9a7e-05013ff81247
os_level_4_mer_externals,org_structure_level,Organizational Structure Level 4,"Fourth level of organizational hierarchy from MER Externals data, typically used for filtering or grouping.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_MER_externals,SELECT DISTINCT t0.os_level_4 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_MER_externals` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Jan' LIMIT 100;,t0.os_level_4,dimension,False,medium,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
os_level_6_monthly_expenses,org_structure_level,Organizational Structure Level 6 (Monthly Expenses),"Sixth level of organizational hierarchy from monthly expenses data, typically used for filtering or grouping.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_expenses,SELECT DISTINCT t0.os_level_6 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_expenses` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Apr' LIMIT 100;,t0.os_level_6,dimension,False,medium,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
os_level_6_monthly_revenue,org_structure_level,Organizational Structure Level 6 (Monthly Revenue),"Sixth level of organizational hierarchy from monthly revenue data, typically used for filtering or grouping.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_revenue,SELECT DISTINCT t0.os_level_6 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Aug' LIMIT 100;,t0.os_level_6,dimension,False,medium,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
tm1_net_revenue_monthly,total_revenue_tm1,TM1 Net Revenue,Total net revenue as reported in the TM1 system for monthly reconciliation purposes.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_revenue,"SELECT SUM(t0.TM1_Net_Revenue) AS tm1_net_revenue FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Aug' AND SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$') LIMIT 1;",SUM(t0.TM1_Net_Revenue),measure,True,high,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
tableau_actual_revenue_monthly,total_revenue_tableau,Tableau Actual Revenue,Total actual revenue as reported in Tableau for monthly reconciliation purposes.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_revenue,"SELECT SUM(t0.Tableau_Actual) AS tableau_actual_revenue FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Aug' AND SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$') LIMIT 1;",SUM(t0.Tableau_Actual),measure,True,high,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
revenue_variance_tableau_tm1,revenue_variance,Revenue Variance (Tableau vs TM1),"The difference between Tableau Actual Revenue and TM1 Net Revenue, indicating the reconciliation variance.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_revenue,"SELECT SUM(t0.Tableau_Actual - t0.TM1_Net_Revenue) AS revenue_variance FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 WHERE t0.fiscal_year = 2025 AND t0.month_short_name = 'Aug' AND SAFE.REGEXP_CONTAINS(t0.publication_code, '^(^[0-9]+$)$') LIMIT 1;",SUM(t0.Tableau_Actual - t0.TM1_Net_Revenue),calculated_field,True,high,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
is_print_digital_flag_mer_externals,print_digital_flag,Print/Digital Flag,A flag indicating whether an item or transaction is categorized as 'Print' or 'Digital' from MER Externals data.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_MER_externals,SELECT DISTINCT t0.is_print_digital_flag FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_MER_externals` AS t0 WHERE t0.fiscal_year = 2025 LIMIT 100;,t0.is_print_digital_flag,dimension,False,medium,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
actual_amount_finance_os_agg,total_actual_amount,Actual Financial Amount,The aggregated actual financial amount from the finance organizational structure hierarchy.,ncau-data-newsquery-prd,sbx_fda_corefin,dv_asl_FCT_finance_os_agg_with_hierarchy,"SELECT SUM(t0.Actual_Amount) AS actual_amount FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_asl_FCT_finance_os_agg_with_hierarchy` AS t0 WHERE SUBSTR(SAFE_CAST(t0.fiscal_week_id AS STRING), 1, 4) = '2025' LIMIT 1;",SUM(t0.Actual_Amount),measure,True,high,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
os_level_3_finance_os_agg,org_structure_level,Organizational Structure Level 3,"Third level of organizational hierarchy from finance OS aggregated data, typically used for filtering or grouping.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_asl_FCT_finance_os_agg_with_hierarchy,"SELECT DISTINCT t0.os_level_3 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_asl_FCT_finance_os_agg_with_hierarchy` AS t0 WHERE SUBSTR(SAFE_CAST(t0.fiscal_week_id AS STRING), 1, 4) = '2025' LIMIT 100;",t0.os_level_3,dimension,False,medium,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
fiscal_year_dimension,fiscal_year,Fiscal Year,"The fiscal year for financial reporting, used as a primary time dimension.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_MER_externals,SELECT DISTINCT t0.fiscal_year FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_MER_externals` AS t0 ORDER BY t0.fiscal_year DESC LIMIT 100;,t0.fiscal_year,dimension,False,low,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
month_short_name_dimension,month_name,Month Short Name,"Short name of the month (e.g., 'Jan', 'Feb') for financial reporting, used as a time dimension.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_MER_externals,SELECT DISTINCT t0.month_short_name FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_MER_externals` AS t0 ORDER BY t0.month_short_name LIMIT 100;,t0.month_short_name,dimension,False,low,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
fiscal_week_id_dimension,fiscal_week,Fiscal Week ID,"A unique identifier for a fiscal week, used as a granular time dimension.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_asl_FCT_finance_os_agg_with_hierarchy,SELECT DISTINCT t0.fiscal_week_id FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_asl_FCT_finance_os_agg_with_hierarchy` AS t0 ORDER BY t0.fiscal_week_id DESC LIMIT 100;,t0.fiscal_week_id,dimension,False,low,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
publication_code_dimension,publication_code,Publication Code,"A code identifying a specific publication, used for filtering or grouping revenue data.",ncau-data-newsquery-prd,sbx_fda_corefin,dv_tableau_vs_tm1_monthly_revenue,SELECT DISTINCT t0.publication_code FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dv_tableau_vs_tm1_monthly_revenue` AS t0 LIMIT 100;,t0.publication_code,dimension,False,low,44,906ca8a7-1733-4a1a-b2f5-2660551f3d3a
vendor_list_rcti_files_filtered_by_draw_date,vendor_rcti,Vendor List (RCTI Files),"Lists unique vendors from RCTI files within a specified date range, likely for reconciliation or checking file completeness.",ncau-data-newsquery-prd,finance_monthend_checks,v_rcti_files_check,SELECT t0.vendor FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_rcti_files_check` AS t0 WHERE (t0.draw_date >= DATE '2025-03-23' AND t0.draw_date <= DATE '2025-03-29') GROUP BY t0.vendor,t0.vendor,dimension,False,medium,45,712ca6fe-b491-4a01-af6e-1495fb3c7d12
total_rev_os_nulls_check,total_rev,Total Revenue/Revision (OS Nulls Check),"Calculates the sum of 'rev' (likely revenue or revision amount) from a table used to check for nulls in operating system data, indicating a total value for reconciliation.",ncau-data-newsquery-prd,finance_monthend_checks,v_persisted_os_nulls_Check,SELECT SUM(t0.rev) FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_persisted_os_nulls_Check` AS t0,SUM(t0.rev),measure,True,high,45,712ca6fe-b491-4a01-af6e-1495fb3c7d12
fiscal_month_id_list_missing_bus_check,fiscal_month_id,Fiscal Month ID List (Missing Business Check),"Lists unique fiscal month IDs from a table used to check for missing business data, likely to identify periods with incomplete records.",ncau-data-newsquery-prd,finance_monthend_checks,v_missing_Bus_check,SELECT t0.fiscal_month_id FROM `ncau-data-newsquery-prd.finance_monthend_checks.v_missing_Bus_check` AS t0 GROUP BY t0.fiscal_month_id,t0.fiscal_month_id,dimension,False,medium,45,712ca6fe-b491-4a01-af6e-1495fb3c7d12
sort_caption_filtered_by_financial_period,sort_caption,Sort Caption (Financial Period Filtered),"A categorical label used for sorting or grouping, specifically retrieved for a given financial month and year (e.g., 'Sep 2025'). This dimension is likely used in dashboard filters or dropdowns.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT clmn4_ FROM (
SELECT CASE WHEN ('Fin' = 'Fin') THEN clmn2_ ELSE clmn0_ END AS clmn5_, CASE WHEN ('Fin' = 'Fin') THEN clmn3_ ELSE clmn1_ END AS clmn6_, clmn4_ FROM (
SELECT t0.calendar_month_short_name AS clmn0_, t0.calendar_year AS clmn1_, t0.financial_short_month AS clmn2_, t0.financial_year AS clmn3_, t0.sort_caption AS clmn4_ FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
)
) WHERE (clmn5_ IN ('Sep') AND clmn6_ IN ('2025')) GROUP BY clmn4_ ORDER BY clmn4_ ASC LIMIT 2000001;",t0.sort_caption,dimension,False,low,47,d4d68a71-2b12-4caf-bc6b-96fc2d18a025
publication_date_filtered_by_financial_year_and_portfolio,publication_date,Publication Date (Financial Year & Portfolio Filtered),"The date of publication, retrieved for a specific financial year and filtered by various current portfolio classifications (e.g., 'CONSORTIUM NSW', 'NSW CON C', 'NSW CON C1'). This dimension is likely used in dashboard filters or dropdowns.",ncau-data-newsquery-prd,asl_finance_derived,details_dashboard,"SELECT clmn8_ FROM (
SELECT CASE WHEN ('Fin' = 'Fin') THEN clmn1_ ELSE clmn0_ END AS clmn9_, CASE WHEN ('Curr' = 'Curr') THEN clmn2_ ELSE clmn3_ END AS clmn10_, CASE WHEN ('Curr' = 'Curr') THEN clmn4_ ELSE clmn5_ END AS clmn11_, CASE WHEN ('Curr' = 'Curr') THEN clmn6_ ELSE clmn7_ END AS clmn12_, clmn8_ FROM (
SELECT t0.calendar_year AS clmn0_, t0.financial_year AS clmn1_, t0.portfolio_conformed_name_current AS clmn2_, t0.portfolio_conformed_name_sync AS clmn3_, t0.portfolio_group_name_current AS clmn4_, t0.portfolio_group_name_sync AS clmn5_, t0.portfolio_parent_group_name_current AS clmn6_, t0.portfolio_parent_group_name_sync AS clmn7_, t0.publication_date AS clmn8_ FROM `ncau-data-newsquery-prd.asl_finance_derived.details_dashboard` AS t0
)
) WHERE (clmn9_ IN ('2026') AND clmn12_ IN ('CONSORTIUM NSW') AND clmn11_ IN ('NSW CON C') AND clmn10_ IN ('NSW CON C1')) GROUP BY clmn8_ ORDER BY clmn8_ ASC LIMIT 2000001;",t0.publication_date,dimension,False,low,47,d4d68a71-2b12-4caf-bc6b-96fc2d18a025
fiscal_week_of_year_number,fiscal_week_of_year,Fiscal Week of Year Number,The numerical representation of the fiscal week within its respective fiscal year.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT t0c0d1.fy_week_of_year FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1 LIMIT 1,fy_week_of_year,dimension,False,low,48,a1c16d3b-d19a-4abd-b96c-7a87580815db
fiscal_week_of_year_name,fiscal_week_of_year,Fiscal Week of Year Name,The descriptive name of the fiscal week within its respective fiscal year.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT t0c0d1.fy_week_of_year_name FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1 LIMIT 1,fy_week_of_year_name,dimension,False,low,48,a1c16d3b-d19a-4abd-b96c-7a87580815db
fiscal_year,fiscal_year,Fiscal Year,The fiscal year associated with a given calendar date.,ncau-data-newsquery-prd,prstn_finance,calendar_dim,SELECT t0c0d2.fy_year FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d2 LIMIT 1,fy_year,dimension,False,low,48,a1c16d3b-d19a-4abd-b96c-7a87580815db
iso_week_start_date,week_start_date,ISO Week Start Date,"The start date of the ISO week derived from the calendar date, used for weekly aggregation.",ncau-data-newsquery-prd,prstn_finance,calendar_dim,"SELECT SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(t0c0d1.calendar_date AS DATETIME), ISOWEEK) AS DATE) FROM `ncau-data-newsquery-prd.prstn_finance.calendar_dim` AS t0c0d1 LIMIT 1","SAFE_CAST(DATETIME_TRUNC(SAFE_CAST(calendar_date AS DATETIME), ISOWEEK) AS DATE)",calculated_field,False,low,48,a1c16d3b-d19a-4abd-b96c-7a87580815db
total_amount_by_revenue_type_fy2025_type01,total_amount,"Total Amount by Revenue Type (FY 2025, Type 01)","Total financial amount grouped by revenue type, filtered for fiscal year 2025 and revenue types starting with '01'. This metric represents a specific slice of circulation revenue.",ncau-data-newsquery-prd,asl_finance,v_asl_circulation_dq_check,"SELECT SUM(t0.amount) AS total_amount, t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 WHERE SAFE.LEFT(t0.revenue_type, 2) = '01' AND SAFE_CAST(FLOOR(SAFE_DIVIDE(t0.fy_year_week_number, 100)) AS INT64) = 2025 GROUP BY t0.revenue_type",SUM(t0.amount),measure,True,high,49,c32d96e5-38f4-48a8-9b70-3d89a83f03aa
total_amount_by_week_revenue_type_type02_specific_weeks,total_amount,"Total Amount by Fiscal Week and Revenue Type (Type 02, Specific Weeks)","Total financial amount grouped by fiscal year week number and revenue type, filtered for revenue types starting with '02' and specific fiscal weeks. This provides detailed weekly insights into certain revenue streams.",ncau-data-newsquery-prd,asl_finance,v_asl_circulation_dq_check,"SELECT t0.fy_year_week_number, SUM(t0.amount) AS total_amount, t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 WHERE SAFE.LEFT(t0.revenue_type, 2) = '02' AND t0.fy_year_week_number IN (202511, 202512, 202513, 202514, 202515, 202516, 202517, 202518, 202519, 202520, 202521, 202522, 202523, 202524, 202525, 202526, 202527, 202528, 202529, 202530, 202531, 202532, 202533, 202534, 202535, 202536, 202537) AND t0.revenue_type IN ('02 - snapshot - DTI Charges & Volume', '02 - snapshot - THINK - print subs revenue', '02 - snapshot - RCTI Charges & Volume', '02 - snapshot - RCTI - rev rec charge', '02 - snapshot - DTI - rev rec charge', '02 - snapshot - DTI - unmigrated print subs revenue') GROUP BY t0.fy_year_week_number, t0.revenue_type",SUM(t0.amount),measure,True,high,49,c32d96e5-38f4-48a8-9b70-3d89a83f03aa
total_amount_by_revenue_type_type02,total_amount,Total Amount by Revenue Type (Type 02),"Total financial amount grouped by revenue type, filtered for revenue types starting with '02'. This provides an aggregated view of specific revenue categories.",ncau-data-newsquery-prd,asl_finance,v_asl_circulation_dq_check,"SELECT SUM(t0.amount) AS total_amount, t0.revenue_type FROM `ncau-data-newsquery-prd.asl_finance.v_asl_circulation_dq_check` AS t0 WHERE SAFE.LEFT(t0.revenue_type, 2) = '02' GROUP BY t0.revenue_type",SUM(t0.amount),measure,True,high,49,c32d96e5-38f4-48a8-9b70-3d89a83f03aa
budget_earned_amount_fy2025,budget_earned_amount,Budget Earned Amount (FY 2025),"The total budgeted earned amount for the fiscal year 2025, specifically for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT SUM(CASE WHEN t0.fy_year = 2025 THEN t0.BudgetEarnedAmount ELSE 0 END) AS budget_earned_amount_fy2025 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition',SUM(CASE WHEN t0.fy_year = 2025 THEN t0.BudgetEarnedAmount ELSE 0 END),measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
closing_base_fy2025,closing_base,Closing Base (FY 2025),"The total closing base for the fiscal year 2025, specifically for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT SUM(CASE WHEN t0.fy_year = 2025 THEN t0.ClosingBase ELSE 0 END) AS closing_base_fy2025 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition',SUM(CASE WHEN t0.fy_year = 2025 THEN t0.ClosingBase ELSE 0 END),measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
opening_base_fy2025,opening_base,Opening Base (FY 2025),"The total opening base for the fiscal year 2025, specifically for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT SUM(CASE WHEN t0.fy_year = 2025 THEN t0.OpeningBase ELSE 0 END) AS opening_base_fy2025 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition',SUM(CASE WHEN t0.fy_year = 2025 THEN t0.OpeningBase ELSE 0 END),measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
earned_amount_fy2025,earned_amount,Earned Amount (FY 2025),"The total earned amount for the fiscal year 2025, specifically for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT SUM(CASE WHEN t0.fy_year = 2025 THEN t0.EarnedAmount ELSE 0 END) AS earned_amount_fy2025 FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition',SUM(CASE WHEN t0.fy_year = 2025 THEN t0.EarnedAmount ELSE 0 END),measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
net_change_base_fy2025_period_to_date,net_change_base,"Net Change in Base (FY 2025, Period to Date)","The net change in base (ClosingBase - OpeningBase) for fiscal year 2025, filtered by a complex month-of-year derivation from week-of-year, for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,"SELECT SUM(CASE WHEN t0.fy_year = 2025 AND (t0.fy_month_of_year = (CASE WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 4 THEN 1 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 9 THEN 2 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 13 THEN 3 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 17 THEN 4 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 22 THEN 5 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 26 THEN 6 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 30 THEN 7 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 35 THEN 8 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 39 THEN 9 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 43 THEN 10 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 48 THEN 11 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 53 THEN 12 ELSE NULL END)) THEN t0.ClosingBase - t0.OpeningBase ELSE 0 END) AS net_change_base_fy2025_period_to_date FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition'","SUM(CASE WHEN t0.fy_year = 2025 AND (t0.fy_month_of_year = (CASE WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 4 THEN 1 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 9 THEN 2 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 13 THEN 3 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 17 THEN 4 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 22 THEN 5 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 26 THEN 6 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 30 THEN 7 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 35 THEN 8 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 39 THEN 9 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 43 THEN 10 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 48 THEN 11 WHEN (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-26') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) <= 53 THEN 12 ELSE NULL END)) THEN t0.ClosingBase - t0.OpeningBase ELSE 0 END)",calculated_field,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
closing_base_fy2025_week_to_date,closing_base,"Closing Base (FY 2025, Week to Date)","The total closing base for the fiscal year 2025, specifically for the week-to-date period derived from a fixed date, for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,"SELECT SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.ClosingBase ELSE 0 END) AS closing_base_fy2025_week_to_date FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition'","SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.ClosingBase ELSE 0 END)",measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
opening_base_fy2025_week_to_date,opening_base,"Opening Base (FY 2025, Week to Date)","The total opening base for the fiscal year 2025, specifically for the week-to-date period derived from a fixed date, for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,"SELECT SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.OpeningBase ELSE 0 END) AS opening_base_fy2025_week_to_date FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition'","SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.OpeningBase ELSE 0 END)",measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
earned_amount_fy2025_week_to_date,earned_amount,"Earned Amount (FY 2025, Week to Date)","The total earned amount for the fiscal year 2025, specifically for the week-to-date period derived from a fixed date, for digital recognition and non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,"SELECT SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.EarnedAmount ELSE 0 END) AS earned_amount_fy2025_week_to_date FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition'","SUM(CASE WHEN t0.fy_year = 2025 AND t0.fy_week_of_year = (DATETIME_DIFF(SAFE_CAST(DATE('2025-03-25') AS DATETIME), SAFE_CAST(DATETIME '2024-07-03T00:00:00' AS DATETIME), WEEK)) THEN t0.EarnedAmount ELSE 0 END)",measure,True,high,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
cancellation_type_dimension_gross,cancellation_type_dimension,Cancellation Type: Gross Cancellations,"A dimension representing the 'Gross Cancellations' type, used for filtering or grouping cancellation data for non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'Gross Cancellations' WHEN (1 = 2) THEN 'Net Cancellations' ELSE NULL END) AS cancellation_type_gross FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued',COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'Gross Cancellations' WHEN (1 = 2) THEN 'Net Cancellations' ELSE NULL END),dimension,False,medium,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
financial_view_dimension_budget,financial_view_dimension,Financial View: Budget,"A dimension representing the 'Budget' financial view, used for filtering or grouping financial data.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'BUD' WHEN (1 = 2) THEN 'FCT' WHEN (1 = 3) THEN 'YOY' WHEN (1 = 4) THEN 'BUD NY' ELSE NULL END) AS financial_view_budget FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0,COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'BUD' WHEN (1 = 2) THEN 'FCT' WHEN (1 = 3) THEN 'YOY' WHEN (1 = 4) THEN 'BUD NY' ELSE NULL END),dimension,False,medium,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
date_financial_view_dimension_wtd_budget,date_financial_view_dimension,Date & Financial View: Week to Date & Budget,"A dimension representing the 'Week to Date & Budget View' combination, used for filtering or grouping data by time period and financial perspective for non-discontinued masthead groups.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'Week to Date & Budget View' WHEN (1 = 2) THEN 'Week to Date & Forecast View' WHEN (1 = 3) THEN 'Week to Date & Year on Year View' WHEN (1 = 4) THEN 'Week to Date & NY Budget View' WHEN (1 = 2) THEN 'Month to Date & Budget View' WHEN (1 = 2) THEN 'Month to Date & Forecast View' WHEN (1 = 2) THEN 'Week to Date & Year on Year View' WHEN (1 = 2) THEN 'Month to Date & NY Budget View' WHEN (1 = 3) THEN 'Quarter to Date & Budget View' WHEN (1 = 3) THEN 'Quarter to Date & Forecast View' WHEN (1 = 3) THEN 'Quarter to Date & Year on Year View' WHEN (1 = 3) THEN 'Quarter to Date & NY Budget View' WHEN (1 = 4) THEN 'Year to Date & Budget View' WHEN (1 = 4) THEN 'Year to Date & Forecast View' WHEN (1 = 4) THEN 'Year to Date & Year on Year View' WHEN (1 = 4) THEN 'Year to Date & NY Budget View' ELSE NULL END) AS date_financial_view_wtd_budget FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued',COUNT(DISTINCT CASE WHEN (1 = 1) THEN 'Week to Date & Budget View' WHEN (1 = 2) THEN 'Week to Date & Forecast View' WHEN (1 = 3) THEN 'Week to Date & Year on Year View' WHEN (1 = 4) THEN 'Week to Date & NY Budget View' WHEN (1 = 2) THEN 'Month to Date & Budget View' WHEN (1 = 2) THEN 'Month to Date & Forecast View' WHEN (1 = 2) THEN 'Week to Date & Year on Year View' WHEN (1 = 2) THEN 'Month to Date & NY Budget View' WHEN (1 = 3) THEN 'Quarter to Date & Budget View' WHEN (1 = 3) THEN 'Quarter to Date & Forecast View' WHEN (1 = 3) THEN 'Quarter to Date & Year on Year View' WHEN (1 = 3) THEN 'Quarter to Date & NY Budget View' WHEN (1 = 4) THEN 'Year to Date & Budget View' WHEN (1 = 4) THEN 'Year to Date & Forecast View' WHEN (1 = 4) THEN 'Year to Date & Year on Year View' WHEN (1 = 4) THEN 'Year to Date & NY Budget View' ELSE NULL END),dimension,False,low,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
row_count_placeholder,row_count_placeholder,Row Count Placeholder,"A placeholder metric, typically used in Looker Studio to ensure a row count or to enable certain chart types, often returning a constant value of 1.",ncau-data-newsquery-prd,sbx_fda_corefin,dt_digital_subscriptions,SELECT MAX(1) AS row_count_placeholder FROM `ncau-data-newsquery-prd.sbx_fda_corefin.dt_digital_subscriptions` AS t0 WHERE t0.masthead_group != 'Discontinued' AND t0.finance_recognition = 'Digital Recognition',MAX(1),aggregation,False,low,51,bb49fa78-5abe-4e68-a9c1-8172a832e724
scenario_dimension,scenario,Scenario,Represents different financial scenarios or categories within the digital subscriptions data. Used as a key dimension for filtering and grouping.,ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,SELECT DISTINCT SAFE_CAST(t0.scenario AS STRING) AS scenario FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 LIMIT 100,t0.scenario,dimension,False,medium,52,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3
total_records_count,total_records,Total Records,The total number of records or entries in the digital subscriptions dataset. This represents the overall volume of data being analyzed.,ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,SELECT COUNT(1) AS total_records FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0,COUNT(1),aggregation,False,low,52,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3
records_by_scenario_count,total_records,Records by Scenario,The count of records for each distinct financial scenario. This metric provides a breakdown of the total data volume across different scenarios.,ncau-data-newsquery-prd,asl_finance_derived,digital_subscriptions,"SELECT SAFE_CAST(t0.scenario AS STRING) AS scenario, COUNT(1) AS records_count FROM `ncau-data-newsquery-prd.asl_finance_derived.digital_subscriptions` AS t0 GROUP BY scenario",COUNT(1),aggregation,False,medium,52,52dd1ac1-19b5-4695-a7e6-632ef7a9dba3
